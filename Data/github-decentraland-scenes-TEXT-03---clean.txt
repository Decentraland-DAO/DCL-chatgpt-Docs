<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>2,326</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Decentraland Unity Renderer</h1>

<p>This repository contains the Unity part of</p>

<p>. This component works alongside Kernel to produce an Explorer build.</p>

<h2>Before you start</h2>

<h1>Running the Explorer</h1>

<h2>Main Dependencies</h2>

<p>This repo requires</p>

<code>git lfs</code>

<p>to track images and other binary files.</p>

<p>.

So, before anything make sure you have it installed by typing:</p>

<code>git lfs install

git lfs pull</code>

<h2>Debug using Unity</h2>

<p>Take this path if you intend to contribute on features without the need of modifying Kernel.

This is the recommended path for artists.</p>

<h3>Steps</h3>

<li>Download and install Unity 2020.3.0f1</li>

<li>Open the scene named</li>

<code>InitialScene</code>

<li>Within the scene, select the</li>

<code>WSSController</code>

<li>GameObject.</li>

<li>On</li>

<code>WSSController</code>

<li>inspector, make sure that</li>

<code>Base url mode</code>

<li>is set to</li>

<code>Custom</code>

<li>and</li>

<code>Base url custom</code>

<li>is set to</li>

<code>https://play.decentraland.zone/?</code>

<li>Run the Initial Scene in the Unity editor</li>

<li>A browser tab with</li>

<code>explorer</code>

<li>should open automatically and steal your focus, don't close it!. Login with your wallet, go back to Unity and explorer should start running on the</li>

<code>Game View</code>

<li>.</li>

<li>As you can see,</li>

<code>WSSController</code>

<li>has other special options like the starting position, etc. You are welcome to use them as you see fit, but you'll have to close the tab and restart the scene for them to make effect.</li>

<h3>Troubleshooting</h3>

<h4>Missing git lfs extension</h4>

<p>If while trying to compile the Unity project you get an error regarding some libraries that can not be added (for instance Newtonsoft

Json.NET or Google Protobuf), please execute the following command in the root folder:</p>

<code>git lfs install

git lfs pull</code>

<p>Then, on the Unity editor, click on</p>

<code>Assets > Reimport All</code>

<h2>Testing your branch using automated builds</h2>

<p>To test against a build made on this repository, you can use a link with this format:</p>

<code>https://play.decentraland.zone/index.html?renderer=urn:decentraland:off-chain:renderer-artifacts:<branch-name></code>

<p>Note that using this approach, the Unity builds will run against kernel</p>

<code>master</code>

<p>HEAD.</p>

<p>If you want to test your Unity branch against a specific kernel branch, you'll have to use the</p>

<code>renderer</code>

<p>url param like this:</p>

<code>https://play.decentraland.zone/branch/<kernel-branch-name>/index.html?renderer=urn:decentraland:off-chain:renderer-artifacts:<unity-branch-name></code>

<p>If the CI for both branches succeeds, you can browse to the generated link and test your changes. Bear in mind that any push will kick the CI. There's no need to create a pull request.</p>

<h1>Advanced debugging scenarios</h1>

<h2>Debug with Unity Editor + local Kernel</h2>

<p>Use this approach when working on any features that need both Kernel and Unity modifications, and you need to watch Unity code changes fast without the need of injecting a wasm targeted build in the browser.</p>

<p>When the steps are followed, you will be able to test your changes with just pressing the "Play" button within Unity. This will open a tab running the local Kernel build and Unity will connect to it using websocket.</p>

<p>This is the most useful debugging scenario for advanced feature implementation.</p>

<h3>Steps</h3>

<li>Make sure you have the proper Unity version up and running</li>

<li>Make sure you have Kernel repository cloned and set up.</li>

<li>Make sure you are running kernel through</li>

<code>make watch</code>

<li>command.</li>

<li>Back in unity editor, open the</li>

<code>WSSController</code>

<li>component inspector of</li>

<code>InitialScene</code>

<li>Make sure that the component is setup correctly</li>

<li>Hit 'Play' button</li>

<h2>Debug with browsers + local Unity build</h2>

<p>This approach works when your Unity modifications run well in the wasm targeted unity build, but you don't want to wait for the CI to kick in. This is also useful for remote profiling.</p>

<p>When the steps are followed, you will be able to run the local Unity build by going to</p>

<code>localhost:3000</code>

<p>without the need of CI.</p>

<h3>Steps</h3>

<li>Make sure you have the proper Unity version up and running</li>

<li>Make sure you have Kernel repository cloned and set up.</li>

<li>Make sure you are running kernel through</li>

<code>make watch</code>

<li>command.</li>

<li>Produce a Unity wasm targeted build using the Build menu. Then run</li>

<code>npm run build</code>

<li>in the</li>

<code>./browser-interface</code>

<li>directory.</li>

<li>When the build finishes, only copy all the files in the folder</li>

<code>./browser-interface/dist</code>

<li>to</li>

<code>static/unity-renderer</code>

<li>folder within the</li>

<code>kernel</code>

<li>project.</li>

<li>Run the browser explorer through</li>

<code>localhost:3000</code>

<li>. Now, it should use your local Unity build.</li>

<li>If you need a Unity re-build, you can just replace the files and reload the browser the without restarting the</li>

<code>make watch</code>

<li>process.</li>

<h2>Technical how-to guides and explainers</h2>

<p>For more advanced topics, don't forget to check out our</p>

<p>(ADR) repository.</p>

<h2>Copyright info</h2>

<p>This repository is protected with a standard Apache 2 license. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>1</strong>

<h3>Watchers</h3>

<strong>4</strong>

<h3>Forks</h3>

<strong>2</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland/com.decentraland.unity-renderer

# URL: https://github.com/decentraland/com.decentraland.unity-renderer

<title>GitHub - decentraland/com.decentraland.unity-renderer</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/com.decentraland.unity-renderer</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>9</strong>

<h2>Files</h2>

<button>View code</button>

<h1>unity-renderer-upm demo</h1>

<h2>About</h2>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>1</strong>

<h3>Watchers</h3>

<strong>3</strong>

<h3>Forks</h3>

<strong>2</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland/snapshot-spaces

# URL: https://github.com/decentraland/snapshot-spaces

<title>GitHub - decentraland/snapshot-spaces</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/snapshot-spaces</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>13</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>1,138</strong>

<h2>Files</h2>

<button>View code</button>

<h2>About</h2>

<h3>License</h3>

<h3>Code of conduct</h3>

<h3>Stars</h3>

<strong>1</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>2k</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland/reshaper-pre-commit-hook

# URL: https://github.com/decentraland/reshaper-pre-commit-hook

<title>GitHub - decentraland/reshaper-pre-commit-hook: Resharper format pre-commit hook</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Resharper format pre-commit hook</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/reshaper-pre-commit-hook</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>40</strong>

<h2>Files</h2>

<button>View code</button>

<h1>reshaper-pre-commit-hook</h1>

<p>Resharper format pre-commit hook. It uses resharper to format all the files you're committing, and automatically restages them.</p>

<h1>Requirements</h1>

<p>unzip:</p>

<code>sudo apt-get install unzip</code>

<p>For Linux & macOS you have to install</p>

<code>gsed</code>

<p>:</p>

<h1>Installation</h1>

<p>Get the latest version using bash, by running this command in the root of your repository:</p>

<pre>curl -s https://raw.githubusercontent.com/decentraland/reshaper-pre-commit-hook/master/install-git-hook.sh</pre>

<pre>bash</pre>

<p>Note that this runs a shell script on your computer. You might want to review the script before running it.</p>

<h1>License</h1>

<p>MIT</p>

<h2>About</h2>

<p>Resharper format pre-commit hook</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>1</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>12</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/orgs/decentraland/repositories?page=13

# URL: https://github.com/orgs/decentraland/repositories?page=13

<title>Decentraland Â· GitHub</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<h2>Repositories</h2>

<p>Set of buidler plugins for Decentraland contracts</p>

<p>A TSLint config for JavaScript Standard Style</p>

<p>A common identifier for assets across the metaverse</p>

<p>Graph Node indexes data from blockchains such as Ethereum and serves it over GraphQL</p>

<p>ð At Decentraland, we put a lot of effort into improving both the Software itself and the Software Process. The pillars of the Software Process are the standards we define to organize our work.</p>

<p>â£ Solidity Contracts for the Decentraland MANA Token</p>

<p>Calculate amount of populated LAND and deployed scenes</p>

<p>ð Tools to help testing wearables for Decentraland</p>

<p>A Jekyll plugin to generate a JSON (RSS-like) feed of your Jekyll posts</p>

<p>Register your land balance on the LAND and Estate Registry</p>

<p>Content pipeline tools for optimizing glTF assets. ð</p>

<p>Server for PeerJS</p>

<p>ECS API Reference</p>

<p>A module to create readable `"multipart/form-data"` isomorphically in node and the browser.</p>

<p>Open API Specification for the NFT APIs</p>

<p>ðWebRTC message broker</p>

<p>A collection of helpers to make it easier to build a Decentraland Builder script</p>

<p>ð Explore Decentraland from a web browser</p>

<p>Map showing LAND with deployed content in Decentraland</p>

<p>Provides Request authentication for Decentraland services</p>

<p>Viper extension to read configurations</p>

<p>Runtime GLTF Loader for Unity3D</p>

<p>A high performance video decoding Unity plugin for Windows.</p>

<p>Frontend code for the Decentraland campaign.</p>

<p>Gin utilities</p>

<em>13</em>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland/node-runtime

# URL: https://github.com/decentraland/node-runtime

<title>GitHub - decentraland/node-runtime</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/node-runtime</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>4</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Node runtime for decentraland scenes</h1>

<p>It is meant to run from a host application like this:</p>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<h2>About</h2>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>1</strong>

<h3>Watchers</h3>

<strong>4</strong>

<h3>Forks</h3>

<strong>4</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/node-runtime-for-decentraland-scenes

# Change to URL: https://github.com/decentraland/contracts-plugins

# URL: https://github.com/decentraland/contracts-plugins

<title>GitHub - decentraland/contracts-plugins: Set of buidler plugins for Decentraland contracts</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Set of buidler plugins for Decentraland contracts</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/contracts-plugins</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>2</strong>

<strong>15</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>35</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Contracts Plugins</h1>

<g-emoji>â ï¸</g-emoji>

<p>Work in progress - Collaboration is accepted</p>

<g-emoji>â ï¸</g-emoji>

<p>Buidler Tasks are work in progress</p>

<p>Contracts Plugins is a set of usefull classes to deploy Decentraland contracts for testing purposes.</p>

<h1>Table</h1>

<h2>Install</h2>

<code>npm i --save-dev contracts-plugins</code>

<h2>Get started</h2>

<p>To deploy your Decentraland fake contracts just import the contract you want to use and</p>

<code>deploy</code>

<p>it. Every contract is deployed within initial settings to let you focus</p>

<strong>only</strong>

<p>in testing your new contracts.</p>

<em>exchange.spec.ts</em>

<pre>accounts</pre>

<pre>artifacts</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<p>Contracts could need other contract addresses to be deployed and be ready for testing as the</p>

<p>.</p>

<h2>Addresses</h2>

<p>The contracts allowed are based on the accounts from set when running ganache:</p>

<th>index</th>

<th>name</th>

<td>0</td>

<td>deployer</td>

<td>1</td>

<td>user</td>

<td>2</td>

<td>anotherUser</td>

<td>3</td>

<td>operator</td>

<td>4</td>

<td>anotherOperator</td>

<td>5</td>

<td>updateOperator</td>

<td>6</td>

<td>anotherUpdateOperator</td>

<td>7</td>

<td>buyer</td>

<td>8</td>

<td>anotherBuyer</td>

<td>9</td>

<td>bidder</td>

<td>10</td>

<td>anotherBidder</td>

<td>11</td>

<td>hacker</td>

<p>Use ths</p>

<h2>Contracts</h2>

<p>Every contract is deployed by the</p>

<code>deployer</code>

<p>account.</p>

<h3>MANA</h3>

<p>Simulates Decentraland MANA contract</p>

<h4>deploy</h4>

<p>Deploy the MANA contract, set initial balances for all the accounts and return the contrcact reployed</p>

<h4>addBalances</h4>

<p>Min</p>

<code>amount</code>

<p>into every account of</p>

<code>accounts</code>

<p>.</p>

<pre>: string</pre>

<pre>:</pre>

<h4>removeBalances</h4>

<p>Remove balances from</p>

<code>accounts</code>

<p>.</p>

<pre>: string</pre>

<h4>getContract</h4>

<p>Get the deployed MANA contract</p>

<h3>ERC721</h3>

<p>ERC721 generic contract</p>

<h4>deploy</h4>

<p>Deploy an ERC721 contract and mint initial tokens:</p>

<code>1</code>

<li>to</li>

<code>2</code>

<li>to</li>

<h4>getContract</h4>

<p>Get the deployed erc721 contract</p>

<h3>Marketplace</h3>

<h4>deploy</h4>

<p>The marketplace contract needs to be initialized with an erc20 token as the accepted token

and an erc721 token as the legacyNFT (related to marketplace v1).

This contracts can be passed as properties of the deploy options. If not they will instanceated and deployed.</p>

<em>options</em>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<h3>Bid</h3>

<h4>deploy</h4>

<p>The marketplace contract needs to be initialized with an erc20 token as the accepted token

and an erc721 token as the legacyNFT (related to marketplace v1).

This contracts can be passed as properties of the deploy options. If not they will instanceated and deployed.</p>

<em>options</em>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<h3>Listing</h3>

<h4>deploy</h4>

<p>The marketplace contract needs to be initialized with an erc20 token as the accepted token

and an erc721 token as the legacyNFT (related to marketplace v1).

This contracts can be passed as properties of the deploy options. If not they will instanceated and deployed.</p>

<h2>About</h2>

<p>Set of buidler plugins for Decentraland contracts</p>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>1</strong>

<h3>Watchers</h3>

<strong>19</strong>

<h3>Forks</h3>

<strong>3</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland/dcl-tslint-config-standard

# URL: https://github.com/decentraland/dcl-tslint-config-standard

<title>GitHub - decentraland/dcl-tslint-config-standard: A TSLint config for JavaScript Standard Style</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A TSLint config for JavaScript Standard Style</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/dcl-tslint-config-standard</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>8</strong>

<strong>2</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>106</strong>

<h2>Files</h2>

<button>View code</button>

<h1>TSLint Config Standard</h1>

<p>A</p>

<p>for</p>

<h2>Installation</h2>

<pre>npm install dcl-tslint-config-standard --save-dev</pre>

<h2>Usage</h2>

<p>In</p>

<code>tslint.json</code>

<p>:</p>

<pre>{</pre>

<pre>:</pre>

<pre>}</pre>

<strong>P.S.</strong>

<p>Some TSLint rules may require the use of</p>

<code>--project</code>

<p>.</p>

<h3>Rules</h3>

<h3>Help</h3>

<p>Many</p>

<strong>TSLint ESLint Rules</strong>

<p>are incomplete and can use your help!</p>

<h2>License</h2>

<p>Apache 2.0</p>

<h2>About</h2>

<p>A TSLint config for JavaScript Standard Style</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>3</strong>

<h3>Watchers</h3>

<strong>9</strong>

<h3>Forks</h3>

<strong>43</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland/urn-namespaces

# URL: https://github.com/decentraland/urn-namespaces

<title>GitHub - decentraland/urn-namespaces: A common identifier for assets across the metaverse</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A common identifier for assets across the metaverse</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/urn-namespaces</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>2</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>2</strong>

<h2>Files</h2>

<button>View code</button>

<h1>A common identifier for assets across the metaverse projects</h1>

<p>Identifying a blockchain asset is difficult. Wallets, exchanges, tools and other pieces of software need to know the specifics about how to interact with the project's infrastructure to get images or to render content. This repository aims to resolve the content addressing mechanisms to embed our crypto-art, assets, wearables and avatars into different metaverse projects using a common identifier.</p>

<h2>URN</h2>

<p>A Uniform Resource Name (</p>

<p>) are globally unique persistent identifiers assigned within defined namespaces so they will be available for a long period of time, even after the resource which they identify ceases to exist or becomes unavailable.</p>

<h1>Registered namespaces</h1>

<code>urn:cryptovoxels</code>

<li>-</li>

<li>-</li>

<code>urn:decentraland</code>

<li>-</li>

<li>-</li>

<code>urn:thesandboxgame</code>

<li>-</li>

<li>-</li>

<h1>Adding a namespace</h1>

<li>Fork this project</li>

<li>Set the name of your namespace (equals to the Github organization name)</li>

<li>Create a</li>

<code>namespaces/{your-namespace}.md</code>

<li>file</li>

<li>Add the file to README.md (ordered alphabetically)</li>

<li>Send a pull request. We will wait for someone in the organization (same as namespace) to come along and approve the pull request. To avoid ownership problems, only organizations with verified domains will be accepted, that way, we are delegating ownership validation to Github.</li>

<h1>Rationale</h1>

<p>URN are composed of three main elements: Header (</p>

<code>urn:</code>

<p>), A namespace, and an NSS (namespace-specific string) forming a string in the shape</p>

<code>urn:{namespace}:{nss}</code>

<p>.</p>

<p>The proposal only enforces that the namespace is part of a well-known list of namespaces with mappings to APIs or docummentation on how to resolve the NSS part of the asset.</p>

<p>I.e, in Decentraland, they are using the format</p>

<code>urn:decentraland:{chain-identifier}:{contract}:{tokenid}</code>

<p>to identify every asset.</p>

<p>Some examples of this implementation could be:</p>

<h2>Extensibility</h2>

<p>After the namespace-specific string, a query string component is a valid part of any URN, making extensions not only possible but very easy to parse and implement.</p>

<h2>Benefit</h2>

<li>Wallets and service providers like exchanges could start indexing assets unequivocally using a common ID.</li>

<li>By documenting namespaces and its content resolution, tool developers would have a lower entry barrier fostering innovation of the ecosystem and the rise of the metaverse.</li>

<li>Take an initial step to portability and interoperability of assets across the metaverse.</li>

<li>URN are designed to last forever. Completely decoupled from absolute URLs and servers.</li>

<h2>Summarizing</h2>

<li>Identify assets using</li>

<code>urn:{metaverse-namespace}:{custom-string}</code>

<li>.</li>

<code>{custom-string}</code>

<li>is a namespace-specific string, hierarchically separating the parts of the custom-string with colon</li>

<code>:</code>

<li>is recommended and friendlyer than</li>

<code>/</code>

<li>for URL encoding (</li>

<code>urn:decentraland:ethereum:LAND:0x1</code>

<li>instead of</li>

<code>urn:decentraland:ethereum/LAND/0x1</code>

<li>).</li>

<h2>About</h2>

<p>A common identifier for assets across the metaverse</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>1</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>8</strong>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland/ephemeralkey

# URL: https://github.com/decentraland/ephemeralkey

<title>GitHub - decentraland/ephemeralkey</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/ephemeralkey</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>4</strong>

<strong>7</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>37</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Decentraland - Ephemeralkey</h1>

<p>A lib for creating an ephemeral key to be used by Decentraland's apps</p>

<h1>Table of contents</h1>

<h1>API</h1>

<h2>Generate</h2>

<h3>generateEphemeralKeys</h3>

<li>Generate a pair of keys (ephemeral public and private keys)</li>

<li>Ask to sign a message with your metamask/HW address in order to create a reliable certificate</li>

<li>returns</li>

<code>UserData</code>

<h4>Definition:</h4>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<h4>Usage</h4>

<h4>Response</h4>

<pre>ephemeralPrivateKey:</pre>

<pre>ephemeralPublicKey:</pre>

<pre>address:</pre>

<pre>message:</pre>

<pre>signature:</pre>

<pre>expiresAt:</pre>

<h2>Headers</h2>

<li>Return the headers you should send in the request</li>

<h3>getHeaders</h3>

<h4>Definition:</h4>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<h4>Usage</h4>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>...</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<h4>Response</h4>

<pre>: string</pre>

<pre>: string</pre>

<pre>: string</pre>

<pre>: string</pre>

<pre>:</pre>

<h2>Validate</h2>

<h3>validateHeaders</h3>

<p>Validate headers received on the request</p>

<p>Should return error if:</p>

<li>The Method of the request does not match the signed request</li>

<li>The URL doesnât match the expected URL of the server</li>

<li>The timestamp is off by more than 1 minute relative to the system clock</li>

<li>The signature doesnât match the Ephemeral Address</li>

<li>The content-length is more than 65,536 bytes (64kb) (This is to avoid DDoS by sending a body that is too large)</li>

<li>The Certificate Signature does not correspond to the web3 address in the x-identity header</li>

<p>Returns</p>

<code>{ success: true }</code>

<p>if everything is ok</p>

<h4>Definition:</h4>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<h4>Usage</h4>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<h4>Response</h4>

<pre>:</pre>

<p>or</p>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<h3>decodeIdentity</h3>

<p>Returns the address and the ephemeral public key of the user who sent the request</p>

<h5>Definition</h5>

<pre>:</pre>

<pre>:</pre>

<h5>Usage</h5>

<pre>:</pre>

<h4>Response</h4>

<pre>publicKey:</pre>

<pre>ephemeralPublicKey:</pre>

<h1>Utils</h1>

<h2>Middlewares</h2>

<p>Set of middlewares</p>

<h3>headerValidator</h3>

<p>Middleware to validate a sign request using</p>

<h4>Usage</h4>

<pre>w3cwebsocket</pre>

<pre>providers</pre>

<pre>headerValidator</pre>

<pre>:</pre>

<pre>:</pre>

<h2>Wrappers</h2>

<p>Wrappers to send signed request</p>

<h3>Axios</h3>

<p>Attach a request interceptor to an axios instance to send signed requests</p>

<h4>Usage</h4>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<h3>Fetch</h3>

<p>Wrap a fetch instance to send a signed requests</p>

<h4>Usage</h4>

<pre>:</pre>

<h2>Helpers</h2>

<h3>createformdata</h3>

<p>Ceate an isomorphic FormData to send mutipart-data requests</p>

<h4>Usage</h4>

<h5>Client-Side</h5>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<h5>Server-Side</h5>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<h5>Caveat</h5>

<p>It doesn't support Blob, you should transform it to Buffer</p>

<h1>Tests</h1>

<p>On one terminal run:</p>

<code>./scripts/start-local-node.sh</code>

<p>It starts a geth node using Docker</p>

<h2>Node Tests</h2>

<p>On a second terminal run:</p>

<code>npm run test</code>

<h2>Browser Tests</h2>

<p>On a second terminal run:</p>

<code>npm run test:browser</code>

<h2>Node & Browser Tests</h2>

<p>On a second terminal run:</p>

<code>npm run test:all</code>

<h2>Copyright info</h2>

<p>This repository is protected with a standard Apache 2 license. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>1</strong>

<h3>Watchers</h3>

<strong>19</strong>

<h3>Forks</h3>

<strong>4</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland---ephemeralkey

# Change to URL: https://github.com/decentraland/graph-node

# URL: https://github.com/decentraland/graph-node

<title>GitHub - decentraland/graph-node: Graph Node indexes data from blockchains such as Ethereum and serves it over GraphQL</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Graph Node indexes data from blockchains such as Ethereum and serves it over GraphQL</p>

<h3>License</h3>

<summary>Apache-2.0, MIT licenses found</summary>

<h3>Licenses found</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/graph-node</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>153</strong>

<strong>29</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>3,920</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Graph Node</h1>

<p>is a protocol for building decentralized applications (dApps) quickly on Ethereum and IPFS using GraphQL.</p>

<p>Graph Node is an open source Rust implementation that event sources the Ethereum blockchain to deterministically update a data store that can be queried via the GraphQL endpoint.</p>

<p>For detailed instructions and more context, check out the</p>

<p>.</p>

<h2>Quick Start</h2>

<h3>Prerequisites</h3>

<p>To build and run this project you need to have the following installed on your system:</p>

<li>Rust (latest stable) â</li>

<li>PostgreSQL â</li>

<li>IPFS â</li>

<p>For Ethereum network data, you can either run a local node or use Infura.io:</p>

<li>Local node â</li>

<li>Infura infra â</li>

<h3>Running a Local Graph Node</h3>

<p>This is a quick example to show a working Graph Node. It is a</p>

<p>that The Graph team built.</p>

<li>Install IPFS and run</li>

<code>ipfs init</code>

<li>followed by</li>

<code>ipfs daemon</code>

<li>.</li>

<li>Install PostgreSQL and run</li>

<code>initdb -D .postgres</code>

<li>followed by</li>

<code>pg_ctl -D .postgres -l logfile start</code>

<li>and</li>

<code>createdb graph-node</code>

<li>.</li>

<li>If using Ubuntu, you may need to install additional packages:</li>

<code>sudo apt-get install -y clang libpq-dev libssl-dev pkg-config</code>

<li>In the terminal, clone</li>

<li>, and install dependencies and generate types for contract ABIs:</li>

<code>yarn

yarn codegen</code>

<li>In the terminal, clone</li>

<li>, and run</li>

<code>cargo build</code>

<li>.</li>

<p>Once you have all the dependencies set up, you can run the following:</p>

<code>cargo run -p graph-node --release -- \

--postgres-url postgresql://USERNAME[:PASSWORD]@localhost:5432/graph-node \

--ethereum-rpc mainnet:https://mainnet.infura.io/v3/[PROJECT_ID] \

--ipfs 127.0.0.1:5001</code>

<p>Try your OS username as</p>

<code>USERNAME</code>

<p>and</p>

<code>PASSWORD</code>

<p>. The password might be optional. It depends on your setup.</p>

<p>If you're using Infura you should</p>

<p>to get a PROJECT_ID, it's free.</p>

<p>This will also spin up a GraphiQL interface at</p>

<code>http://127.0.0.1:8000/</code>

<p>.</p>

<li>With this ENS example, to get the subgraph working locally run:</li>

<code>yarn create-local</code>

<p>Then you can deploy the subgraph:</p>

<code>yarn deploy-local</code>

<p>This will build and deploy the subgraph to the Graph Node. It should start indexing the subgraph immediately.</p>

<h3>Command-Line Interface</h3>

<code>USAGE:

graph-node [FLAGS] [OPTIONS] --ethereum-ipc <NETWORK_NAME:FILE> --ethereum-rpc <NETWORK_NAME:URL> --ethereum-ws <NETWORK_NAME:URL> --ipfs <HOST:PORT> --postgres-url <URL>

FLAGS:

--debug      Enable debug logging

-h, --help       Prints help information

-V, --version    Prints version information

OPTIONS:

--admin-port <PORT>                           Port for the JSON-RPC admin server [default: 8020]

--elasticsearch-password <PASSWORD>

Password to use for Elasticsearch logging [env: ELASTICSEARCH_PASSWORD]

--elasticsearch-url <URL>

Elasticsearch service to write subgraph logs to [env: ELASTICSEARCH_URL=]

--elasticsearch-user <USER>                   User to use for Elasticsearch logging [env: ELASTICSEARCH_USER=]

--ethereum-ipc <NETWORK_NAME:FILE>

Ethereum network name (e.g. 'mainnet') and Ethereum IPC pipe, separated by a ':'

--ethereum-polling-interval <MILLISECONDS>

How often to poll the Ethereum node for new blocks [env: ETHEREUM_POLLING_INTERVAL=]  [default: 500]

--ethereum-rpc <NETWORK_NAME:URL>

Ethereum network name (e.g. 'mainnet') and Ethereum RPC URL, separated by a ':'

--ethereum-ws <NETWORK_NAME:URL>

Ethereum network name (e.g. 'mainnet') and Ethereum WebSocket URL, separated by a ':'

--http-port <PORT>                            Port for the GraphQL HTTP server [default: 8000]

--ipfs <HOST:PORT>                            HTTP address of an IPFS node

--node-id <NODE_ID>                           a unique identifier for this node [default: default]

--postgres-url <URL>                          Location of the Postgres database used for storing entities

--subgraph <[NAME:]IPFS_HASH>                 name and IPFS hash of the subgraph manifest

--ws-port <PORT>                              Port for the GraphQL WebSocket server [default: 8001]</code>

<h3>Advanced Configuration</h3>

<p>The command line arguments generally are all that is needed to run a</p>

<code>graph-node</code>

<p>instance. For advanced uses, various aspects of</p>

<code>graph-node</code>

<p>can further be configured through</p>

<a>environment

variables</a>

<p>. Very

large</p>

<code>graph-node</code>

<p>instances can also split the work of querying and

indexing across</p>

<p>.</p>

<h2>Project Layout</h2>

<code>node</code>

<li>â A local Graph Node.</li>

<code>graph</code>

<li>â A library providing traits for system components and types for

common data.</li>

<code>core</code>

<li>â A library providing implementations for core components, used by all

nodes.</li>

<code>chain/ethereum</code>

<li>â A library with components for obtaining data from

Ethereum.</li>

<code>graphql</code>

<li>â A GraphQL implementation with API schema generation,

introspection, and more.</li>

<code>mock</code>

<li>â A library providing mock implementations for all system components.</li>

<code>runtime/wasm</code>

<li>â A library for running WASM data-extraction scripts.</li>

<code>server/http</code>

<li>â A library providing a GraphQL server over HTTP.</li>

<code>store/postgres</code>

<li>â A Postgres store with a GraphQL-friendly interface

and audit logs.</li>

<h2>Roadmap</h2>

<p>ð¨ = In Progress</p>

<p>ð  = Feature complete. Additional testing required.</p>

<p>â = Feature complete</p>

<th>Feature</th>

<th>Status</th>

<strong>Ethereum</strong>

<td>Indexing smart contract events</td>

<td>â</td>

<td>Handle chain reorganizations</td>

<td>â</td>

<strong>Mappings</strong>

<td>WASM-based mappings</td>

<td>â</td>

<td>TypeScript-to-WASM toolchain</td>

<td>â</td>

<td>Autogenerated TypeScript types</td>

<td>â</td>

<strong>GraphQL</strong>

<td>Query entities by ID</td>

<td>â</td>

<td>Query entity collections</td>

<td>â</td>

<td>Pagination</td>

<td>â</td>

<td>Filtering</td>

<td>â</td>

<td>Entity relationships</td>

<td>â</td>

<td>Subscriptions</td>

<td>â</td>

<h2>Contributing</h2>

<p>Please check</p>

<p>for development flow and conventions we use.

Here's</p>

<p>.</p>

<h2>License</h2>

<p>Copyright Â© 2018-2019 Graph Protocol, Inc. and contributors.</p>

<p>The Graph is dual-licensed under the</p>

<p>and the</p>

<p>.</p>

<p>Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either expressed or implied. See the License for the specific language governing permissions and limitations under the License.</p>

<h2>About</h2>

<p>Graph Node indexes data from blockchains such as Ethereum and serves it over GraphQL</p>

<h3>Resources</h3>

<h3>License</h3>

<summary>Apache-2.0, MIT licenses found</summary>

<h3>Licenses found</h3>

<h3>Code of conduct</h3>

<h3>Stars</h3>

<strong>2</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>849</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland/automated-webgl-test

# URL: https://github.com/decentraland/automated-webgl-test

<title>GitHub - decentraland/automated-webgl-test</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/automated-webgl-test</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>2</strong>

<h2>Files</h2>

<button>View code</button>

<h1>@dcl/tester</h1>

<p>Use a headless chrome to explore Decentraland. Work in progress.</p>

<h2>Running</h2>

<li>Clone this repo with</li>

<code>git clone git@github.com:decentraland/dcl-tester</code>

<li>Run</li>

<code>docker build -t dcl-tester .</code>

<li>Run</li>

<code>docker run -v ${PWD}/output:/run/output -it --privileged dcl-tester</code>

<h2>About</h2>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>2</strong>

<h3>Watchers</h3>

<strong>5</strong>

<h3>Forks</h3>

<strong>2</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland/standards

# URL: https://github.com/decentraland/standards

<title>GitHub - decentraland/standards: ð At Decentraland, we put a lot of effort into improving both the Software itself and the Software Process. The pillars of the Software Process are the standards we define to organize our work.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>ð At Decentraland, we put a lot of effort into improving both the Software itself and the Software Process. The pillars of the Software Process are the standards we define to organize our work.</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/standards</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>22</strong>

<h2>Files</h2>

<button>View code</button>

<g-emoji>â ï¸</g-emoji>

<b>This repository is now archived. New standads will now live in</b>

<b>.</b>

<h1>Decentraland standards</h1>

<h2>Conventions</h2>

<p>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL

NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED",  "MAY", and

"OPTIONAL" in this document are to be interpreted as described in</p>

<p>.</p>

<h2>Introduction</h2>

<p>At Decentraland, we put a lot of effort into improving both the Software itself and the

Software Process. The pillars of the Software Process are the standards we define to organize our work.

This document describes contribution and style guides about how to write those standards.</p>

<h2>Types of contributions</h2>

<h3>Pull Request</h3>

<p>The preferred type of contribution is a Github's pull request. Pull request to the master branch from your own fork or from a local branch if you have permissions (the branch will be deleted on merge).</p>

<h3>Technical proposals</h3>

<p>We opened a channel to propose technical specifciations. Those MAY affect the product itself or the roadmap itself.

To contribute with a technical specification you shall follow the guidelines of the</p>

<p>.</p>

<h3>Issue</h3>

<p>Issues are other very appreciated kind of contributions.</p>

<h3>Opinions</h3>

<p>For opinions or open discussion feel free to join the</p>

<p>.</p>

<h2>Style rules</h2>

<p>The following are the Style rules that Decentraland's standard documents must follow.</p>

<h3>Filename and Title</h3>

<p>Every Standard document MUST have a title related with the

filename.</p>

<p>The filename MUST be enough to understand what content can be expected.</p>

<p>The filename MUST not contain spaces, hyphens should be used instead.</p>

<p>The filename MUST only contain lowercase alphanumeric characters or hyphen.</p>

<h3>Document Status</h3>

<p>Every Standard document MUST contain right after the title

a line specifying the document status:</p>

<pre>Document Status</pre>

<pre>:</pre>

<pre>Draft</pre>

<pre>.</pre>

<p>The possible status are:</p>

<em>Draft</em>

<li>. Work in progress.</li>

<em>Standard</em>

<li>. An Standard a specification or set of guidelines that, after extensive consensus-building, has received the endorsement of the Decentraland team.</li>

<p>The line should end with two white spaces to provoke a</p>

<p>without starting a new paragraph. This will be useful for the next topic, the Maintainer.</p>

<h3>Maintainer</h3>

<p>Every Standard document MUST contain right after the</p>

<p>a line specifying the document maintainer.

The maintainer should be specified with an address specification following the</p>

<p>standard.

The</p>

<code>angle-addr</code>

<p>should be wrapped in a link link in the</p>

<p>format described in RFC3696.</p>

<pre>Maintainer</pre>

<pre>: Agustin Mendez</pre>

<pre>.</pre>

<p>The maintainer has the responsibility of coordinating issues, pull requests and any other kind

of feedback, plus to maintain the standard itself, by applying proactively changes to maintain it updated.

In order to maintain coherence in the big picture, the maintainer should be someone participating

in the architectural coordination process.</p>

<h3>Conventions</h3>

<p>Every Standard document MUST follow the</p>

<p>and SHOULD contain a section following this style:</p>

<pre>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL

NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED",  "MAY", and

"OPTIONAL" in this document are to be interpreted as described in</pre>

<pre>RFC 2119</pre>

<pre>.</pre>

<h3>Introduction</h3>

<p>Every Standard document MUST have as fist section an introductory section following this style:</p>

<pre>At Decentraland, we put a lot of effort into improving both the Software itself and the

Software Process. The pillars of the Software Process are the standards we define to organize our work.

This document describes style guides about how to write those standards.</pre>

<h3>Related Documents</h3>

<p>Documents that have a relationship with other documents SHOULD include a section following this template:</p>

<pre>To understand better the behavior of non fungible tokens refer to</pre>

<pre>ERC821</pre>

<pre>documentation.</pre>

<h3>External content</h3>

<p>Every document that contains external content must follow the content with a link to the references section labeled with the related reference:</p>

<pre>In order to reduce complexity, dependencies, file sizes, and build times, you

should avoid installing extra or unnecessary packages just because they might be</pre>

<pre>nice to have</pre>

<pre>. For example, you donât need to include a text editor in a

database image.</pre>

<pre>1</pre>

<h3>Further reading</h3>

<p>Standard documents MAY recommend further reading. If that is the case the following template

should be followed:</p>

<pre>Johnson, Mark (February 1997).</pre>

<pre>Building a Better ReadMe</pre>

<pre>. Technical Communication. Society for Technical Communication.</pre>

<pre>Preston-Werner, Tom (23 Aug 2010).</pre>

<pre>Readme Driven Development</pre>

<pre>. Tom Preston-Werner's personal blog.</pre>

<pre>Streb, Claire (12 Sep 2015).</pre>

<pre>All Hail the README File!</pre>

<pre>. Claire N Streb - Expert Remote Senior Software Engineer's personal blog.</pre>

<h3>References</h3>

<p>Every document containing external references must contain a</p>

<em>References</em>

<p>section following the style of the template below:</p>

<pre>1</pre>

<pre>- Microsoft, What is Software Architecture?.</pre>

<h2>About</h2>

<p>ð At Decentraland, we put a lot of effort into improving both the Software itself and the Software Process. The pillars of the Software Process are the standards we define to organize our work.</p>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>6</strong>

<h3>Watchers</h3>

<strong>20</strong>

<h3>Forks</h3>

<strong>6</strong>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-standards

# Change to URL: https://github.com/decentraland/mana

# URL: https://github.com/decentraland/mana

<title>GitHub - decentraland/mana: â£ Solidity Contracts for the Decentraland MANA Token</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>â£ Solidity Contracts for the Decentraland MANA Token</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/mana</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>6</strong>

<strong>1</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<button>â¦</button>

<pre>feat: add semantic release</pre>

<code>d92bba7</code>

<h2>Git stats</h2>

<strong>84</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Decentraland MANA Token</h1>

<p>Solidity smart contracts for the Decentraland Crowdsale and MANA Token</p>

<h2>About</h2>

<p>â£ Solidity Contracts for the Decentraland MANA Token</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>155</strong>

<h3>Watchers</h3>

<strong>38</strong>

<h3>Forks</h3>

<strong>56</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-mana-token

# Change to URL: https://github.com/decentraland/calculate-populated-land

# URL: https://github.com/decentraland/calculate-populated-land

<title>GitHub - decentraland/calculate-populated-land: Calculate amount of populated LAND and deployed scenes</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Calculate amount of populated LAND and deployed scenes</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/calculate-populated-land</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>1</strong>

<h2>Files</h2>

<button>View code</button>

<h2>About</h2>

<p>Calculate amount of populated LAND and deployed scenes</p>

<h3>Stars</h3>

<strong>1</strong>

<h3>Watchers</h3>

<strong>5</strong>

<h3>Forks</h3>

<strong>3</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland/avatar-asset-test-tool

# URL: https://github.com/decentraland/avatar-asset-test-tool

<title>GitHub - decentraland/avatar-asset-test-tool: ð  Tools to help testing wearables for Decentraland</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>ð Tools to help testing wearables for Decentraland</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/avatar-asset-test-tool</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>2</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Decentraland Avatar Assets</h1>

<p>This repository contains the supporting assets for avatars in the Decentraland world.</p>

<h2>Getting Started</h2>

<p>First, install and run the tests to verify that your system is ready to work with assets:</p>

<code>yarn install

make compile

make test && make catalog</code>

<h2>Pipeline</h2>

<code>make catalog</code>

<p>generates a new version of all the asset packs under the</p>

<code>assets</code>

<p>folder. All the files are stored in the</p>

<code>public</code>

<p>folder, separated by asset pack.</p>

<h3>AWS</h3>

<p>Use</p>

<code>UPLOAD_BUCKET_NAME</code>

<p>for the name of the bucket. Using</p>

<code>content-assets.decentraland.org</code>

<p>for production.</p>

<h2>About</h2>

<p>ð Tools to help testing wearables for Decentraland</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>6</strong>

<h3>Watchers</h3>

<strong>5</strong>

<h3>Forks</h3>

<strong>22</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-avatar-assets

# Change to URL: https://github.com/decentraland/jekyll-json-feed

# URL: https://github.com/decentraland/jekyll-json-feed

<title>GitHub - decentraland/jekyll-json-feed: A Jekyll plugin to generate a JSON (RSS-like) feed of your Jekyll posts</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A Jekyll plugin to generate a JSON (RSS-like) feed of your Jekyll posts</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/jekyll-json-feed</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>2</strong>

<strong>1</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>13</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Jekyll JSON Feed plugin</h1>

<p>A Jekyll plugin to generate a</p>

<p>of your Jekyll posts.</p>

<h2>Installation</h2>

<p>Add this line to your site's Gemfile:</p>

<p>And then add this line to your site's</p>

<code>_config.yml</code>

<p>:</p>

<pre>:

-</pre>

<h2>Usage</h2>

<p>The plugin will automatically generate a JSON feed at</p>

<code>/feed.json</code>

<p>.</p>

<h3>Optional configuration options</h3>

<p>The plugin will automatically use any of the following configuration variables, if they are present in your site's</p>

<code>_config.yml</code>

<p>file.</p>

<code>title</code>

<li>or</li>

<code>name</code>

<li>- The title of the site, e.g., "My awesome site"</li>

<code>description</code>

<li>- A longer description of what your site is about, e.g., "Where I blog about Jekyll and other awesome things"</li>

<code>url</code>

<li>- The URL to your site, e.g.,</li>

<code>http://example.com</code>

<li>. If none is provided, the plugin will try to use</li>

<code>site.github.url</code>

<li>.</li>

<code>author</code>

<li>- Global author information (see below)</li>

<h3>Optional front matter</h3>

<p>The plugin will use the following post metadata, automatically generated by Jekyll, which you can override via a post's YAML front matter:</p>

<code>date</code>

<code>title</code>

<code>excerpt</code>

<code>id</code>

<code>tags</code>

<p>Additionally, the plugin will use the following values, if present in a post's YAML front matter:</p>

<code>image</code>

<li>- URL of an image that is representative of the post (can also be passed as</li>

<code>image.path</code>

<li>)</li>

<code>banner_image</code>

<li>- URL of an image to use as a banner, like those used on Medium</li>

<code>author</code>

<li>- The author of the post, e.g., "Dr. Jekyll". If none is given, feed readers will look to the feed author as defined in</li>

<code>_config.yml</code>

<li>. Like the feed author, this can also be an object or a reference to an author in</li>

<code>_data/authors.yml</code>

<li>(see below).</li>

<h3>Author information</h3>

<em>TL;DR: In most cases, put</em>

<code>author: [your name]</code>

<em>in the document's front matter, for sites with multiple authors. If you need something more complicated, read on.</em>

<p>There are several ways to convey author-specific information. Author information is found in the following order of priority:</p>

<li>An</li>

<code>author</code>

<li>object, in the documents's front matter, e.g.:</li>

<pre>:</pre>

<pre>:</pre>

<li>An</li>

<code>author</code>

<li>object, in the site's</li>

<code>_config.yml</code>

<li>, e.g.:</li>

<pre>:</pre>

<pre>:</pre>

<code>site.data.authors[author]</code>

<li>, if an author is specified in the document's front matter, and a corresponding key exists in</li>

<code>site.data.authors</code>

<li>. E.g., you have the following in the document's front matter:</li>

<pre>:</pre>

<p>And you have the following in</p>

<code>_data/authors.yml</code>

<p>:</p>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<p>In the above example, the author</p>

<code>benbalter</code>

<p>'s Twitter handle will be resolved to</p>

<code>@jekyllrb</code>

<p>. This allows you to centralize author information in a single</p>

<code>_data/authors</code>

<p>file for site with many authors that require more than just the author's username.</p>

<em>Pro-tip: If</em>

<code>authors</code>

<em>is present in the document's front matter as an array (and</em>

<code>author</code>

<em>is not), the plugin will use the first author listed.</em>

<li>An author in the document's front matter (the simplest way), e.g.:</li>

<pre>:</pre>

<li>An author in the site's</li>

<code>_config.yml</code>

<li>, e.g.:</li>

<pre>:</pre>

<h3>Meta tags</h3>

<p>The plugin exposes a helper tag to expose the appropriate meta tags to support automated discovery of your feed. Simply place</p>

<code>{% json_feed_meta %}</code>

<p>someplace in your template's</p>

<code><head></code>

<p>section, to output the necessary metadata.</p>

<h3>SmartyPants</h3>

<p>The plugin uses</p>

<code>smartify</code>

<p>for processing the site title and post titles. This will translate plain ASCII punctuation into "smart" typographic punctuation. This will not render or strip any Markdown you may be using in a title.</p>

<h2>Why JSON Feed?</h2>

<p>Great question and I'll leave it to the</p>

<p>to answer:</p>

<p>The JSON Feed format is a pragmatic syndication format, like RSS and Atom, but with one big difference: itâs JSON instead of XML.</p>

<p>For most developers, JSON is far easier to read and write than XML. Developers may groan at picking up an XML parser, but decoding JSON is often just a single line of code.</p>

<h2>Credit where credit is due</h2>

<p>This plugin is heavily inspired by the</p>

<p>plugin. So much so, that it is a fork with JSON tweaks. Big thanks go to @benbalter for creating the Jekyll Feed plugin, licensing it under the MIT license and making it so easy to create this plugin (it took me an afternoon whilst I was doing other things).</p>

<h2>Contributing</h2>

<li>Fork it (</li>

<li>)</li>

<li>Create your feature branch (</li>

<code>git checkout -b my-new-feature</code>

<li>)</li>

<li>Commit your changes (</li>

<code>git commit -am 'Add some feature'</code>

<li>)</li>

<li>Push to the branch (</li>

<code>git push origin my-new-feature</code>

<li>)</li>

<li>Create a new Pull Request</li>

<h2>About</h2>

<p>A Jekyll plugin to generate a JSON (RSS-like) feed of your Jekyll posts</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>1</strong>

<h3>Watchers</h3>

<strong>4</strong>

<h3>Forks</h3>

<strong>10</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland/land-balance-register

# URL: https://github.com/decentraland/land-balance-register

<title>GitHub - decentraland/land-balance-register: Register your land balance on the LAND and Estate Registry</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Register your land balance on the LAND and Estate Registry</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/land-balance-register</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>3</strong>

<h2>Files</h2>

<button>View code</button>

<h1>LAND Balance Register</h1>

<h2>About</h2>

<p>Register your land balance on the LAND and Estate Registry</p>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>1</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>3</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland/gltf-pipeline

# URL: https://github.com/decentraland/gltf-pipeline

<title>GitHub - decentraland/gltf-pipeline: Content pipeline tools for optimizing glTF assets. :globe_with_meridians:</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Content pipeline tools for optimizing glTF assets. ð</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/gltf-pipeline</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>3</strong>

<strong>28</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>1,679</strong>

<h2>Files</h2>

<button>View code</button>

<h1>glTF Pipeline</h1>

<p>Content pipeline tools for optimizing</p>

<p>assets by</p>

<p>and the</p>

<p>.</p>

<p>Supports common operations including:</p>

<li>Converting glTF to glb (and reverse)</li>

<li>Saving buffers/textures as embedded or separate files</li>

<li>Converting glTF 1.0 models to glTF 2.0 (using the</li>

<li>and</li>

<li>extensions)</li>

<li>Applying</li>

<li>mesh compression</li>

<code>gltf-pipeline</code>

<p>can be used as a command-line tool or Node.js module.</p>

<h2>Getting Started</h2>

<p>Install</p>

<p>if you don't already have it, and then:</p>

<code>npm install -g gltf-pipeline</code>

<h3>Using gltf-pipeline as a command-line tool:</h3>

<h4>Converting a glTF to glb</h4>

<code>gltf-pipeline -i model.gltf -o model.glb</code>

<code>gltf-pipeline -i model.gltf -b</code>

<h4>Converting a glb to glTF</h4>

<code>gltf-pipeline -i model.glb -o model.gltf</code>

<code>gltf-pipeline -i model.glb -j</code>

<h4>Converting a glTF to Draco glTF</h4>

<code>gltf-pipeline -i model.gltf -o modelDraco.gltf -d</code>

<h3>Saving separate textures</h3>

<code>gltf-pipeline -i model.gltf -t</code>

<h3>Using gltf-pipeline as a library:</h3>

<h4>Converting a glTF to glb:</h4>

<h4>Converting a glb to glTF</h4>

<h4>Converting a glTF to Draco glTF</h4>

<pre>:</pre>

<pre>:</pre>

<h4>Saving separate textures</h4>

<pre>:</pre>

<h3>Command-Line Flags</h3>

<th>Flag</th>

<th>Description</th>

<th>Required</th>

<code>--help</code>

<td>,</td>

<code>-h</code>

<td>Display help</td>

<td>No</td>

<code>--input</code>

<td>,</td>

<code>-i</code>

<td>Path to the glTF or glb file.</td>

<td>â Yes</td>

<code>--output</code>

<td>,</td>

<code>-o</code>

<td>Output path of the glTF or glb file. Separate resources will be saved to the same directory.</td>

<td>No</td>

<code>--binary</code>

<td>,</td>

<code>-b</code>

<td>Convert the input glTF to glb.</td>

<td>No, default</td>

<code>false</code>

<code>--json</code>

<td>,</td>

<code>-j</code>

<td>Convert the input glb to glTF.</td>

<td>No, default</td>

<code>false</code>

<code>--separate</code>

<td>,</td>

<code>-s</code>

<td>Write separate buffers, shaders, and textures instead of embedding them in the glTF.</td>

<td>No, default</td>

<code>false</code>

<code>--separateTextures</code>

<td>,</td>

<code>-t</code>

<td>Write out separate textures only.</td>

<td>No, default</td>

<code>false</code>

<code>--stats</code>

<td>Print statistics to console for output glTF file.</td>

<td>No, default</td>

<code>false</code>

<code>--keepUnusedElements</code>

<td>Keep unused materials, nodes and meshes.</td>

<td>No, default</td>

<code>false</code>

<code>--draco.compressMeshes</code>

<td>,</td>

<code>-d</code>

<td>Compress the meshes using Draco. Adds the KHR_draco_mesh_compression extension.</td>

<td>No, default</td>

<code>false</code>

<code>--draco.compressionLevel</code>

<td>Draco compression level [0-10], most is 10, least is 0. A value of 0 will apply sequential encoding and preserve face order.</td>

<td>No, default</td>

<code>7</code>

<code>--draco.quantizePositionBits</code>

<td>Quantization bits for position attribute when using Draco compression.</td>

<td>No, default</td>

<code>14</code>

<code>--draco.quantizeNormalBits</code>

<td>Quantization bits for normal attribute when using Draco compression.</td>

<td>No, default</td>

<code>10</code>

<code>--draco.quantizeTexcoordBits</code>

<td>Quantization bits for texture coordinate attribute when using Draco compression.</td>

<td>No, default</td>

<code>12</code>

<code>--draco.quantizeColorBits</code>

<td>Quantization bits for color attribute when using Draco compression.</td>

<td>No, default</td>

<code>8</code>

<code>--draco.quantizeGenericBits</code>

<td>Quantization bits for skinning attribute (joint indices and joint weights) and custom attributes when using Draco compression.</td>

<td>No, default</td>

<code>12</code>

<code>--draco.unifiedQuantization</code>

<td>Quantize positions of all primitives using the same quantization grid. If not set, quantization is applied separately.</td>

<td>No, default</td>

<code>false</code>

<h2>Build Instructions</h2>

<p>Run the tests:</p>

<code>npm run test</code>

<p>To run ESLint on the entire codebase, run:</p>

<code>npm run eslint</code>

<p>To run ESLint automatically when a file is saved, run the following and leave it open in a console window:</p>

<code>npm run eslint-watch</code>

<h3>Building for CesiumJS integration</h3>

<p>Some functionality of gltf-pipeline is used by CesiumJS as a third party library. The necessary files can be generated using:</p>

<code>npm run build-cesium</code>

<p>This will output a portion of the gltf-pipeline code into the</p>

<code>dist/cesium</code>

<p>folder for use with CesiumJS in the browser.</p>

<h3>Running Test Coverage</h3>

<p>Coverage uses</p>

<p>.  Run:</p>

<code>npm run coverage</code>

<p>For complete coverage details, open</p>

<code>coverage/lcov-report/index.html</code>

<p>.</p>

<p>The tests and coverage covers the Node.js module; it does not cover the command-line interface, which is tiny.</p>

<h2>Generating Documentation</h2>

<p>To generate the documentation:</p>

<code>npm run jsdoc</code>

<p>The documentation will be placed in the</p>

<code>doc</code>

<p>folder.</p>

<h2>Contributions</h2>

<p>Pull requests are appreciated!  Please use the same</p>

<p>and</p>

<p>used for</p>

<p>.</p>

<h2>About</h2>

<p>Content pipeline tools for optimizing glTF assets. ð</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>2</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>240</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland/peerjs-server

# URL: https://github.com/decentraland/peerjs-server

<title>GitHub - decentraland/peerjs-server: Server for PeerJS</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Server for PeerJS</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/peerjs-server</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>14</strong>

<strong>8</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>224</strong>

<h2>Files</h2>

<button>View code</button>

<h1>PeerServer: A server for PeerJS</h1>

<p>PeerServer helps broker connections between PeerJS clients. Data is not proxied through the server.</p>

<p>Run your own server on Gitpod!</p>

<h3>Run PeerServer</h3>

<li>Install PeerServer from npm or github:</li>

<h4>NPM</h4>

<pre>npm install peer</pre>

<h4>github</h4>

<pre>git clone https://github.com/peers/peerjs-server.git#master

npm install</pre>

<li>Run the server:</li>

<pre>$</pre>

<pre>peerjs --port 9000 --key peerjs --path /myapp</pre>

<p>Or, create a custom server:</p>

<pre>PeerServer</pre>

<pre>:</pre>

<pre>:</pre>

<li>Check that server works: open browser with</li>

<li>It should returns JSON with name, description and website fields.</li>

<h3>Connecting to the server from PeerJS:</h3>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<h3>Using HTTPS: Simply pass in PEM-encoded certificate and key.</h3>

<pre>PeerServer</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<h3>Running PeerServer behind a reverse proxy</h3>

<p>Make sure to set the</p>

<code>proxied</code>

<p>option, otherwise IP based limiting will fail.

The option is passed verbatim to the</p>

<code>trust proxy</code>

<p>if it is truthy.</p>

<pre>PeerServer</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<h3>Combining with existing express app</h3>

<pre>ExpressPeerServer</pre>

<pre>:</pre>

<h3>Events</h3>

<p>The</p>

<code>'connection'</code>

<p>event is emitted when a peer connects to the server.</p>

<pre>...</pre>

<p>The</p>

<code>'disconnect'</code>

<p>event is emitted when a peer disconnects from the server or

when the peer can no longer be reached.</p>

<pre>...</pre>

<h2>Running tests</h2>

<pre>npm</pre>

<h2>Docker</h2>

<p>You can build this image simply by calling:</p>

<pre>docker build -t peerjs https://github.com/peers/peerjs-server.git</pre>

<p>To run the image execute this:</p>

<pre>docker run -p 9000:9000 -d peerjs</pre>

<p>This will start a peerjs server on port 9000 exposed on port 9000.</p>

<h2>Problems?</h2>

<p>Discuss PeerJS on our Telegram chat:</p>

<p>Please post any bugs as a Github issue.</p>

<h2>About</h2>

<p>Server for PeerJS</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>1</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>1.1k</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland/ecs-reference

# URL: https://github.com/decentraland/ecs-reference

<title>GitHub - decentraland/ecs-reference: ECS API Reference</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>ECS API Reference</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/ecs-reference</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>7</strong>

<h2>Files</h2>

<button>View code</button>

<h2>Please submit your issues on</h2>

<h2>or</h2>

<h2>! Thanks ð»</h2>

<h1>ECS API Reference</h1>

<p>Here is a list of versions of</p>

<code>decentraland-ecs</code>

<p>.</p>

<h2>About</h2>

<p>ECS API Reference</p>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>15</strong>

<h3>Watchers</h3>

<strong>22</strong>

<h3>Forks</h3>

<strong>10</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland/isomorphic-form-data

# URL: https://github.com/decentraland/isomorphic-form-data

<title>GitHub - decentraland/isomorphic-form-data: A module to create readable `"multipart/form-data"` isomorphically in node and the browser.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A module to create readable `"multipart/form-data"` isomorphically in node and the browser.</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/isomorphic-form-data</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>1</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>7</strong>

<h2>Files</h2>

<button>View code</button>

<p>A library to create readable</p>

<code>"multipart/form-data"</code>

<p>isomorphically in node and the browser.</p>

<h2>Install</h2>

<code>npm install isomorphic-form-data</code>

<h2>Usage</h2>

<p>In this example we are constructing a form with 3 fields that contain a string,

a buffer and a file stream.</p>

<h4>node-fetch</h4>

<p>You can submit a form using</p>

<p>:</p>

<pre>:</pre>

<pre>:</pre>

<h2>License</h2>

<p>Form-Data is licensed under the MIT license.</p>

<h2>About</h2>

<p>A module to create readable `"multipart/form-data"` isomorphically in node and the browser.</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>1</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>14</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland/nft-schema

# URL: https://github.com/decentraland/nft-schema

<title>GitHub - decentraland/nft-schema: Open API Specification for the NFT APIs</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Open API Specification for the NFT APIs</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/nft-schema</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>2</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>9</strong>

<h2>Files</h2>

<button>View code</button>

<h1>NFT Schema</h1>

<h2>Abstract</h2>

<p>This document describes a schema that allows applications to display or represent NFT tokens, by building a schema that APIs representing NFT contracts and assets should comply to. In order to differentiate them better, tokens will be referred to as NFTs, and contracts containing those tokens will be addressed as DARs (standing for Digital Asset Registry). This builds on the ERC721 metadata extension, which created a simple definition per token that contains a name, a description, and an image.</p>

<h2>Motivation</h2>

<p>This document was motivated by Decentralandâs investigation on how to facilitate information about the visual aspects of NFTs that can be rendered in a userâs inventory/wallet/marketplace, as well as within the 3D world. Correctly representing these tokens usually requires additional information about each kind of item (for example, items that can be worn and show up as hats, weapons, or other avatar customizations).</p>

<p>OpenSea already provides the ability to gather information about the visual parts of NFTs to render. Itâs the de facto standard for wallets, marketplaces, and we hope that in the end the API will also allow for 3D previews of items.</p>

<p>Moving forward, we expect that specifying a token with this standard would facilitate the work of OpenSea when gathering information about the specifics of each application (health or strength for gamesâ characters, rarity, among others)</p>

<h2>Design Considerations</h2>

<p>A standardized schema has to be as extensible as possible, so that any DAR creator might add its own traits/features to the NFTs without compromising compatibility with other platforms. That means that certain features/traits (HP, attack power) might be required to be defined using a mechanism similar to that of namespaces in programming languages, with one namespace per each game/platform. As an illustrative example, the Decentraland 3D viewer might require an NFT to define a</p>

<code>speed</code>

<p>for an avatar, whereas the name</p>

<code>speed</code>

<p>might be required for other uses, as it would be the case if the NFT is from the "Crypto Cars" collection which already defines a</p>

<code>speed</code>

<p>field. Namespacing these fields as</p>

<code>crypto-cars:speed</code>

<p>and</p>

<code>dcl-avatar:speed</code>

<p>would avoid name collision conflicts.</p>

<p>The schema should be restrictive on the possible values for fields, and include or restrict the basic set of fields defined by the ERC721 metadata format:</p>

<code>name</code>

<p>,</p>

<code>description</code>

<p>, and</p>

<code>image</code>

<p>. The current standard doesnât enforce any particular format for the</p>

<code>image</code>

<p>field, creating unnecessary complexity for implementers.</p>

<p>The standard should dictate a way to specify both a schema for a description of the DAR as well as each NFT. There are a number of properties that apply to all NFTs in a contract equally (for example, all LAND parcels are not wearable items in Decentraland).</p>

<h3>Live API</h3>

<h2>About</h2>

<p>Open API Specification for the NFT APIs</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>13</strong>

<h3>Watchers</h3>

<strong>8</strong>

<h3>Forks</h3>

<strong>6</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland/webrtc-broker

# URL: https://github.com/decentraland/webrtc-broker

<title>GitHub - decentraland/webrtc-broker: ðWebRTC message broker</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>ðWebRTC message broker</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/webrtc-broker</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>5</strong>

<strong>4</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>101</strong>

<h2>Files</h2>

<button>View code</button>

<h1>WebRTC message broker</h1>

<h2>Components</h2>

<h3>Clients</h3>

<p>The whole point of this system is to provide connectivity to the clients. The clients connect to a single communication server after credentials negotiation with the Coordinator Server.</p>

<h3>Coordinator Server</h3>

<p>The coordinator server is the key entry point of our communications system.</p>

<li>It exposes a WS endpoint for the clients to negotiate the communication with the communications server</li>

<li>Caveat: Itâs very important to notice the coordinator server will choose a communication server randomly, which means all communication servers should be equivalent to each other. That is, a client connected to a cluster, should have a consistent latency no matter which communication server he ends connecting to.</li>

<li>It exposes a WS endpoint for the communication servers to</li>

<li>Negotiate connections with the clients</li>

<li>Discover other communications server in the cluster</li>

<h3>Communication server</h3>

<p>The communications server is the heavy lifter of the system.</p>

<li>It connects to the Coordinator Server via WS and uses this connection to discover other servers and negotiate client connections</li>

<li>Every communication server may be connected to clients and</li>

<li>It relays packets from the clients to other clients</li>

<li>It relays packets to all the connected servers</li>

<li>It handles the business logic of the packets (topics, etc)</li>

<li>It has to keep the WS connection alive, always. If the connection is closed, it has to retry until success.</li>

<h2>About</h2>

<p>ðWebRTC message broker</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>28</strong>

<h3>Watchers</h3>

<strong>8</strong>

<h3>Forks</h3>

<strong>11</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland/decentraland-builder-scripts

# URL: https://github.com/decentraland/decentraland-builder-scripts

<title>GitHub - decentraland/decentraland-builder-scripts: A collection of helpers to make it easier to build a Decentraland Builder script</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A collection of helpers to make it easier to build a Decentraland Builder script</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/decentraland-builder-scripts</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>5</strong>

<h2>Files</h2>

<button>View code</button>

<h1>decentraland-builder-scripts</h1>

<p>TODO</p>

<h2>About</h2>

<p>A collection of helpers to make it easier to build a Decentraland Builder script</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>1</strong>

<h3>Watchers</h3>

<strong>14</strong>

<h3>Forks</h3>

<strong>3</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-builder-scripts

# Change to URL: https://github.com/decentraland/kernel-legacy

# URL: https://github.com/decentraland/kernel-legacy

<title>GitHub - decentraland/kernel-legacy: ð Explore Decentraland from a web browser</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>ð Explore Decentraland from a web browser</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/kernel-legacy</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>8</strong>

<strong>62</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>442</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Decentraland Kernel</h1>

<h2>Contributing</h2>

<strong>Please read the</strong>

<h3>Important</h3>

<p>This repo requires</p>

<code>git lfs</code>

<p>to track images and other binary files.</p>

<p>and the latest version of GNU make, install it using</p>

<code>brew install make</code>

<p>If you are using Windows 10 we recommend you to enable the Linux subsystem and install a Linux distro from Windows Store like Ubuntu. Then install all tools and dependecies like nodejs, npm, typescript, make...</p>

<h2>Running locally</h2>

<p>First, build the project:</p>

<code>make build</code>

<p>To start hacking, run:</p>

<code>make watch</code>

<p>To run the client in</p>

<code>debug</code>

<p>mode append the following query parameter to the URL:</p>

<code>http://localhost:8080/?DEBUG_MODE</code>

<p>To run the client in first person perspective append the following query parameter to the URL:</p>

<code>http://localhost:8080/?DEBUG_MODE&fps</code>

<p>To spawn in a specific set of coordinates append the following query paramter:</p>

<code>http://localhost:8080/?DEBUG_MODE&fps&position=10,10</code>

<h2>Running tests</h2>

<p>To run all the tests (and save new screenshots), run:</p>

<code>make generate-images</code>

<p>To see test logs/errors directly in the browser, run:</p>

<code>make watch and navigate to http://localhost:8080/test</code>

<h3>Visual tests</h3>

<p>Visual tests are meant to work in a similar way as</p>

<code>snapshot tests</code>

<p>. Each time a test parcel changes the author is required to commit new screenshots along the other changes. These screenshots are then validated to detect regressions at the time of the pull request. To generate new snapshot images to compare run</p>

<code>npm run test:dry</code>

<p>(it requires docker)</p>

<h3>Test parcels</h3>

<p>It is possible to define new parcels inside this repo for testing purposes. To do so, create a new folder in</p>

<code>public/test-scenes</code>

<p>. There are several conventions to be followed regarding the name of these folders and the positions of the parcels, these can be found in the</p>

<p>file.</p>

<p>To edit and make sure that</p>

<code>make watch</code>

<p>is rebuilding the scene when you are hacking on a new feature of the kernel, make sure to modify</p>

<code>targets/scenes/basic-scenes.json</code>

<p>and point to the scene you're working on.</p>

<p>All test parcels can be accessed inside visual tests:</p>

<h3>Testing with different renderers (unity engine builds)</h3>

<li>Visit</li>

<li>-> âversionsâ tab and choose the wanted deployment tag</li>

<li>In the repo's root directory run the following command:</li>

<code>npm install decentraland-renderer@[CHOSEN TAG]</code>

<li>Run</li>

<code>make watch</code>

<li>and the local kernel should already use the selected renderer (make sure to restart it if you are already running it).</li>

<li>Whenever the</li>

<code>npm</code>

<li>tag is changed and you would like to update that, run</li>

<code>npm install decentraland-renderer@[CHOSEN TAG]</code>

<li>again!</li>

<h2>Copyright info</h2>

<p>This repository is protected with a standard Apache 2 license. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>ð Explore Decentraland from a web browser</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>20</strong>

<h3>Watchers</h3>

<strong>23</strong>

<h3>Forks</h3>

<strong>7</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-kernel

# Change to URL: https://github.com/decentraland/deployment-map

# URL: https://github.com/decentraland/deployment-map

<title>GitHub - decentraland/deployment-map: Map showing LAND with deployed content in Decentraland</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Map showing LAND with deployed content in Decentraland</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/deployment-map</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>2</strong>

<h2>Files</h2>

<button>View code</button>

<h2>Setup</h2>

<p>instal deps:</p>

<code>npm install</code>

<p>download deployments data:</p>

<code>npm run download</code>

<p>start dev server:</p>

<code>npm start</code>

<p>build:</p>

<code>npm run build</code>

<h2>About</h2>

<p>Map showing LAND with deployed content in Decentraland</p>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>3</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>6</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland/auth-go

# URL: https://github.com/decentraland/auth-go

<title>GitHub - decentraland/auth-go: Provides Request authentication for Decentraland services</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Provides Request authentication for Decentraland services</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/auth-go</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>2</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>34</strong>

<h2>Files</h2>

<button>View code</button>

<h1>auth-go</h1>

<p>Provides Request authentication for Decentraland services</p>

<h2>Credentials generation</h2>

<p>This requires the intervention of a third party (authentication server) in order to authenticate the user against a service provider</p>

<pre>,</pre>

<pre>.</pre>

<pre>(</pre>

<pre>ephemeral.</pre>

<pre>{})</pre>

<h4>Request credentials generation</h4>

<h5>HTTP Requests</h5>

<pre>(</pre>

<pre>)</pre>

<pre>,</pre>

<pre>.</pre>

<pre>(</pre>

<pre>,</pre>

<pre>,</pre>

<pre>.</pre>

<pre>(</pre>

<pre>))</pre>

<pre>.</pre>

<pre>(</pre>

<pre>,</pre>

<pre>)</pre>

<h5>Non HTTP Requests</h5>

<p>For WebRTC or non HTTP requests you should be able to obtain all the credentials for the message you want to send</p>

<pre>,</pre>

<pre>.</pre>

<pre>(</pre>

<pre>ephemeral.</pre>

<pre>{})</pre>

<pre>[]</pre>

<pre>(</pre>

<pre>)</pre>

<pre>.</pre>

<pre>(</pre>

<pre>,</pre>

<pre>)</pre>

<h5>Generated Credentials</h5>

<th>Header</th>

<th>Meaning</th>

<td>x-signature</td>

<td>This is the signed request information (http method + url + body + timestamp) with the generated ephemeral key. This is vital to prevent replay attacks.</td>

<td>x-timestamp</td>

<td>Request timestamp, in Unix time.</td>

<td>x-identity</td>

<td>The users ephemeral public key used in the access token creation and the user ID</td>

<td>x-access-token</td>

<td>Access token. Contains the public ephemeral key and it  is signed by the granting authority with its own private key.</td>

<h2>Request validation</h2>

<p>The service providers will need to authenticate the users based on the information present in the request headers.</p>

<h3>Authentication Strategies</h3>

<p>We define two basic Authentication strategies</p>

<h4>Authentication based on a Third party</h4>

<p>The service provider will need to know the entity who signs the access token, otherwise, the request will be rejected.</p>

<h5>HTTP Requests</h5>

<pre>(</pre>

<pre>)</pre>

<pre>.</pre>

<pre>(</pre>

<pre>)</pre>

<pre>,</pre>

<pre>.</pre>

<pre>(</pre>

<pre>auth.</pre>

<pre>{</pre>

<pre>:</pre>

<pre>,</pre>

<pre>:</pre>

<pre>})</pre>

<pre>,</pre>

<pre>.</pre>

<pre>(</pre>

<pre>)</pre>

<pre>,</pre>

<pre>.</pre>

<pre>(</pre>

<pre>)</pre>

<pre>.</pre>

<pre>()</pre>

<h5>Non HTTP Requests</h5>

<pre>(</pre>

<pre>)</pre>

<pre>.</pre>

<pre>(</pre>

<pre>)</pre>

<pre>,</pre>

<pre>.</pre>

<pre>(</pre>

<pre>auth.</pre>

<pre>{</pre>

<pre>:</pre>

<pre>,</pre>

<pre>:</pre>

<pre>})</pre>

<pre>(</pre>

<pre>[</pre>

<pre>]</pre>

<pre>)</pre>

<pre>[</pre>

<pre>.</pre>

<pre>]</pre>

<pre>[</pre>

<pre>.</pre>

<pre>]</pre>

<pre>[]</pre>

<pre>(</pre>

<pre>)</pre>

<pre>auth.</pre>

<pre>{</pre>

<pre>:</pre>

<pre>,</pre>

<pre>:</pre>

<pre>}</pre>

<pre>,</pre>

<pre>.</pre>

<pre>(</pre>

<pre>)</pre>

<pre>.</pre>

<pre>()</pre>

<h4>Allow All</h4>

<pre>(</pre>

<pre>)</pre>

<pre>authentication.</pre>

<pre>{}</pre>

<pre>authorization.</pre>

<pre>{}</pre>

<pre>.</pre>

<pre>(</pre>

<pre>,</pre>

<pre>)</pre>

<pre>http.</pre>

<pre>,</pre>

<pre>.</pre>

<pre>(</pre>

<pre>)</pre>

<pre>,</pre>

<pre>.</pre>

<pre>(</pre>

<pre>)</pre>

<h4>Custom Strategies</h4>

<p>The service provide could opt to implement its own auth strategy. The only thing to do is to implement</p>

<code>AuthenticationStrategy</code>

<p>and</p>

<code>AuthorizationStrategy</code>

<p>interfaces</p>

<h2>Copyright info</h2>

<p>This repository is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>Provides Request authentication for Decentraland services</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>1</strong>

<h3>Watchers</h3>

<strong>20</strong>

<h3>Forks</h3>

<strong>4</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland/dcl-viper

# URL: https://github.com/decentraland/dcl-viper

<title>GitHub - decentraland/dcl-viper: Viper extension to read configurations</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Viper extension to read configurations</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/dcl-viper</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>2</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>7</strong>

<h2>Files</h2>

<button>View code</button>

<h1>dcl-viper</h1>

<p>Viper extension to read configurations</p>

<p>Using</p>

<p>in the core of this reading functionality. we should be able to read from a config file, a env variable or a flag.</p>

<h2>Viper normal usage</h2>

<p>You can use viper to load a config file to a struct containing all configurations example:</p>

<code>type Conf struct {

Filed string

}</code>

<p>If you read from a yml containing a</p>

<code>field: 'something'</code>

<p>entry,  Viper will load the value to the field attribute.</p>

<p>It is also possible to bind a env var to a key, or to overwrite a key with a given value, but you need to bind each attribute manually, the same goes for overwriting it with a flag. Plus you need to know the flags before hand and this hole thing becomes annoying and repetitive very fast.</p>

<p>To bind a env variable you need to do something like this:</p>

<code>viper.ReadInConfig()

viper.GetViper().BindEnv("key.in.the.struct", "ENV_VAR_NAME")</code>

<p>This is for each field, in each project</p>

<h3>Reading from flags</h3>

<p>If you want to read from a flag you will need to do:</p>

<code>flagValue := flag.String("a-flag", "the default value", "usage example or somethin")

flag.Parse()

...

viper.ReadInConfig()

viper.Set("key.in.the.struct", flagValue)</code>

<p>This is for each field, in each project</p>

<h2>DCL-Viper usage</h2>

<h3>Read configurations from file</h3>

<code>type Conf struct {

Filed string

FiledOther string

}

...

var conf ProfileConfig

if err := config.ReadConfiguration("path/to/file", &conf); err != nil {

log.Fatal(err)

}</code>

<h3>Read configuration from flags</h3>

<p>To overwrite the configuration value with a flag, just indicate the name of the flag in the configuration struct, flag-usage is optional</p>

<code>type Conf struct {

Filed string          `overwrite-flag:"flag-for-field" flag-usage:"not important"`

}

...

var conf ProfileConfig

if err := config.ReadConfiguration("path/to/file", &conf); err != nil {

log.Fatal(err)</code>

<p>Dcl-viper will take care of the flag declaration and the</p>

<code>flag.Parse()</code>

<p>for you when it reads the configuration</p>

<h3>Read configuration from ENV variables</h3>

<p>To overwrite the configuration value with a env variable, just indicate the name of the flag in the configuration struct</p>

<code>type Conf struct {

FiledOther string `overwrite-env:"env_variable_to_read"`

}

...

var conf ProfileConfig

if err := config.ReadConfiguration("path/to/file", &conf); err != nil {

log.Fatal(err)</code>

<h2>About</h2>

<p>Viper extension to read configurations</p>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>1</strong>

<h3>Watchers</h3>

<strong>4</strong>

<h3>Forks</h3>

<strong>4</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland/UnityGLTF

# URL: https://github.com/decentraland/UnityGLTF

<title>GitHub - decentraland/UnityGLTF: Runtime GLTF Loader for Unity3D</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Runtime GLTF Loader for Unity3D</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/UnityGLTF</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>49</strong>

<strong>2</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>403</strong>

<h2>Files</h2>

<button>View code</button>

<h1>UnityGLTF</h1>

<p>Unity3D library for importing and exporting</p>

<p>assets.</p>

<p>The goal of this library is to support the full glTF 2.0 specification and enable the following scenarios:</p>

<li>Run-time import of glTF 2.0 files</li>

<li>Run-time export of glTF 2.0 files</li>

<li>Design-time import of glTF 2.0 files</li>

<li>Design-time export of glTF 2.0 files</li>

<p>The library will be modularized such that it can be extended to support additional capabilities in Unity or support additional extensions to the glTF specification.  The library is designed to work with Unity 5.6 and above.</p>

<h2>Current Status</h2>

<p>Work Items and Issues targeting a 1.0 release of the library can be found in</p>

<h2>Getting Started</h2>

<li>This section is dedicated to those who wish to contribute to the project. This should clarify the main project structure without flooding you with too many details.</li>

<li>UnityGLTF project is divided into two parts: the GLTFSerializer (Visual Studio Solution), and the Unity Project (which is the package we wish to make available to users)</li>

<strong>Basic Rundown</strong>

<p>: The GLTFSerializer is a C# DLL implemented to faciliate serialization of the Unity asset model, and deserialization of GLTF assets.</p>

<strong>Structure</strong>

<p>:</p>

<li>Each GLTF schemas (Buffer, Accessor, Camera, Image...) extends the basic class: GLTFChildOfRootProperty. Through this object model, each schema can have its own defined serialization/deserialization functionalities, which imitate the JSON file structure as per the GLTF specification.</li>

<li>Each schema can then be grouped under the GLTFRoot object, which represents the underlying GLTF Asset. Serializing the asset is then done by serializing the root object, which recursively serializes all individual schemas. Deserializing a GLTF asset is done similarly: instantiate a GLTFRoot, and parse the required schemas.</li>

<strong>Building</strong>

<p>: You will need to build this library into the Plugins folder of the core Unity project:</p>

<li>Open</li>

<code>GLTFSerialization\GLTFSerialization.sln</code>

<li>and compile for release. This will put the binaries in</li>

<code>UnityGLTF\Assets\UnityGLTF\Plugins</code>

<li>Open the Unity project located in</li>

<code>UnityGLTF\</code>

<li>If the meta file gets overridden, the binaries in</li>

<code>UnityGLTF\Assets\UnityGLTF\Plugins</code>

<li>should be configured for everything but UWP. The binaries in</li>

<code>UnityGLTF\Assets\UnityGLTF\Plugins\UWP</code>

<li>should be configured for UWP</li>

<h4>Unity Version</h4>

<li>Although the UnityGLTF Project is maintained at Unity version 5.6.5f1, make sure that the Unity release you have installed on your local machine is up to date. This is so the Exporter can export the latest features, but the Importer can support importing on older Unity builds. You can download the free version</li>

<li>. You can run this project simply by opening the directory as a project on Unity.</li>

<h5>Project Components</h5>

<li>The Unity project offers two main functionalities: importing and exporting GLTF assets. These functionalities are primarily implemented in [GLTFSceneImporter] and [GLTFSceneExporter].</li>

<h2>Examples</h2>

<li>Clone or download the repository.</li>

<li>Open up the Unity project and run any of the example scenes in</li>

<code>Assets/GLTF/Examples</code>

<p>You should see something like this:</p>

<h2>About</h2>

<p>Runtime GLTF Loader for Unity3D</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Code of conduct</h3>

<h3>Stars</h3>

<strong>1</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>465</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland/ViveMediaDecoder

# URL: https://github.com/decentraland/ViveMediaDecoder

<title>GitHub - decentraland/ViveMediaDecoder: A high performance video decoding Unity plugin for Windows.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A high performance video decoding Unity plugin for Windows.</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/ViveMediaDecoder</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>18</strong>

<h2>Files</h2>

<button>View code</button>

<p>ViveMediaDecoder

Copyright (c) 2015-2019, HTC Corporation. All rights reserved.</p>

<h2>Introduction:</h2>

<p>ViveMediaDecoder is a high performance video decoding Unity plugin for Windows

which supports streaming multiple formats.</p>

<p>We also provide the samples for playing various video types which includes

2D, stereo 2D, 360, stereo 360. You can build custom VR video player easily

through this plugin.</p>

<p>This software uses FFmpeg 3.4 licensed under LGPL license.

To review the LGPL license, look</p>

<p>.

The FFmpeg 3.4 source code can be downloaded from</p>

<p>.</p>

<h2>Requirements:</h2>

<li>Windows 7</li>

<li>DirectX 11</li>

<li>Unity 5</li>

<li>FFmpeg 3.4</li>

<h2>About</h2>

<p>A high performance video decoding Unity plugin for Windows.</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>35</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland/decentraland-claim-app

# URL: https://github.com/decentraland/decentraland-claim-app

<title>GitHub - decentraland/decentraland-claim-app: Frontend code for the Decentraland campaign.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Frontend code for the Decentraland campaign.</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/decentraland-claim-app</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>4</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Decentraland Claim app</h1>

<h2>Configure</h2>

<p>Configure the following ENV variables first:</p>

<pre>AMOUNT=100

CHAIN_ID=1

CLAIM_HOST=https://dc-mainnet-test.herokuapp.com

DECENTRALAND_URL=https://decentraland.org/

SYMBOL=MANA</pre>

<h2>Deploy</h2>

<p>Build command:</p>

<pre>yarn</pre>

<pre>yarn compile-contracts</pre>

<pre>apps/linkdrop-ui-kit</pre>

<pre>yarn</pre>

<pre>yarn build</pre>

<pre>../app-claim</pre>

<pre>yarn build</pre>

<p>This will build static assets to the directory</p>

<code>apps/app-claim</code>

<h2>About</h2>

<p>Frontend code for the Decentraland campaign.</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>2</strong>

<h3>Watchers</h3>

<strong>7</strong>

<h3>Forks</h3>

<strong>6</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-claim-app

# Change to URL: https://github.com/decentraland/dcl-gin

# URL: https://github.com/decentraland/dcl-gin

<title>GitHub - decentraland/dcl-gin: Gin utilities</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Gin utilities</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/dcl-gin</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>6</strong>

<h2>Files</h2>

<button>View code</button>

<h2>About</h2>

<p>Gin utilities</p>

<h3>License</h3>

<h3>Stars</h3>

<strong>1</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>5</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland/plaza-asian

# URL: https://github.com/decentraland/plaza-asian

<title>GitHub - decentraland/plaza-asian</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/plaza-asian</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>1</strong>

<h2>Files</h2>

<button>View code</button>

<h2>About</h2>

<h3>Stars</h3>

<strong>1</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>4</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/orgs/decentraland/repositories?page=14

# URL: https://github.com/orgs/decentraland/repositories?page=14

<title>Decentraland Â· GitHub</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<h2>Repositories</h2>

<p>ðª Manage invitations to access the client</p>

<p>âï¸ Minimal starting kit for a front-end in TypeScript, using HMR and `decentraland-ui`</p>

<p>Decentraland XML parser</p>

<p>Decentraland communication protocol</p>

<p>ð Examples of different experiences built for Decentraland</p>

<p>ðCommunications Server</p>

<p>Offer bounties in MANA to developers that create educational content: tutorials & scene samples</p>

<p>TypeScript/JavaScript language support for the Monaco Editor, customized for Decentraland</p>

<p>ð A Jekyll plugin to generate an Atom (RSS-like) feed of your Jekyll posts</p>

<p>ð½ A proxy to connect to the IPFS network</p>

<p>ð What is Decentraland?</p>

<p>Decentraland's ÃApps Boilerplate</p>

<p>ð¥Health checks for ETH nodes</p>

<p>End to end tests for the CLI</p>

<p>Node's framework for interactive CLIs</p>

<p>Ledger Nano S wallet provider for the Web3 ProviderEngine</p>

<p>ð Collaborative real-time edition of parcel scenes, with IPFS uploading. Based on aframe-inspector</p>

<p>ð¥ Browser for Decentraland Stone Age</p>

<p>ð³ERC-20 Based Off-chain Voting</p>

<p>zero client provider engine</p>

<p>ðKeeping track of the bounty programs for different apps of our ecosystem</p>

<p>ð Source code for Decentraland's Terraform Auction</p>

<p>â° Get notifications whenever an Ethereum smart contract triggers an event.</p>

<p>A collection of utility functions for Ethereum</p>

<p>A small collection of functions for signing ethereum data</p>

<p>Proof of concept for arranging tile zones in an hexagonal grid.</p>

<em>14</em>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland/plaza-genesis

# URL: https://github.com/decentraland/plaza-genesis

<title>GitHub - decentraland/plaza-genesis</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/plaza-genesis</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>1</strong>

<h2>Files</h2>

<button>View code</button>

<h2>About</h2>

<h3>Stars</h3>

<strong>2</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>5</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland/gate

# URL: https://github.com/decentraland/gate

<title>GitHub - decentraland/gate: ðª Manage invitations to access the client</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>ðª Manage invitations to access the client</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/gate</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>4</strong>

<strong>4</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>61</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Gate</h1>

<p>Management service to onboard new users to the Decentraland Alpha</p>

<h2>About</h2>

<p>ðª Manage invitations to access the client</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>9</strong>

<h3>Watchers</h3>

<strong>10</strong>

<h3>Forks</h3>

<strong>9</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland/frontend-starter

# URL: https://github.com/decentraland/frontend-starter

<title>GitHub - decentraland/frontend-starter: âï¸ Minimal starting kit for a front-end in TypeScript, using HMR and `decentraland-ui`</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>âï¸ Minimal starting kit for a front-end in TypeScript, using HMR and `decentraland-ui`</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/frontend-starter</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>148</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Decentraland Frontend Starting Kit</h1>

<p>Minimal starting kit for a front-end in TypeScript, using HMR and</p>

<code>decentraland-ui</code>

<li>(16.x)</li>

<li>(4.x)</li>

<li>(3.x)</li>

<li>(2.2.x)</li>

<li>using</li>

<li>(4.x)</li>

<li>(7.x)</li>

<li>- Testing framework for React applications</li>

<li>Production build script</li>

<li>Image loading/minification using</li>

<li>Typescript compiling using</li>

<li>(5.x)</li>

<li>Code quality (linting) for Typescript.</li>

<h2>Installation</h2>

<li>Clone/download repo</li>

<code>yarn install</code>

<li>(or</li>

<code>npm install</code>

<li>for npm)</li>

<h2>Usage</h2>

<strong>Development</strong>

<code>yarn run start-dev</code>

<li>Build app continuously (HMR enabled)</li>

<li>App served @</li>

<code>http://localhost:8080</code>

<strong>Production</strong>

<code>yarn run start-prod</code>

<li>Build app once (HMR disabled) to</li>

<code>/dist/</code>

<li>App served @</li>

<code>http://localhost:3000</code>

<strong>All commands</strong>

<th>Command</th>

<th>Description</th>

<code>yarn run start-dev</code>

<td>Build app continuously (HMR enabled) and serve @</td>

<code>http://localhost:8080</code>

<code>yarn run start-prod</code>

<td>Build app once (HMR disabled) to</td>

<code>/dist/</code>

<td>and serve @</td>

<code>http://localhost:3000</code>

<code>yarn run build</code>

<td>Build app to</td>

<code>/dist/</code>

<code>yarn run test</code>

<td>Run tests</td>

<code>yarn run lint</code>

<td>Run Typescript linter</td>

<code>yarn run start</code>

<td>(alias of</td>

<code>yarn run start-dev</code>

<td>)</td>

<strong>Note</strong>

<p>: replace</p>

<code>yarn</code>

<p>with</p>

<code>npm</code>

<p>if you use npm.</p>

<h2>See also</h2>

<li>(</li>

<li>)</li>

<h2>About</h2>

<p>âï¸ Minimal starting kit for a front-end in TypeScript, using HMR and `decentraland-ui`</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>4</strong>

<h3>Watchers</h3>

<strong>5</strong>

<h3>Forks</h3>

<strong>5</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-frontend-starting-kit

# Change to URL: https://github.com/decentraland/dcl-xml

# URL: https://github.com/decentraland/dcl-xml

<title>GitHub - decentraland/dcl-xml: Decentraland XML parser</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Decentraland XML parser</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/dcl-xml</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>2</strong>

<strong>7</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>23</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Decentraland XML</h1>

<p>This project contains tools for processing Decentraland-flavored XML.</p>

<h2>About</h2>

<p>Decentraland XML parser</p>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>1</strong>

<h3>Watchers</h3>

<strong>20</strong>

<h3>Forks</h3>

<strong>4</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-xml

# Change to URL: https://github.com/decentraland/communications-protocol

# URL: https://github.com/decentraland/communications-protocol

<title>GitHub - decentraland/communications-protocol: Decentraland communication protocol</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Decentraland communication protocol</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/communications-protocol</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>3</strong>

<strong>3</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>12</strong>

<h2>Files</h2>

<button>View code</button>

<h1>communications-protocol</h1>

<p>Ignore this project, currently the protocol is defined inside the server itself:</p>

<h2>About</h2>

<p>Decentraland communication protocol</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>3</strong>

<h3>Watchers</h3>

<strong>21</strong>

<h3>Forks</h3>

<strong>5</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland/sample-scenes

# URL: https://github.com/decentraland/sample-scenes

<title>GitHub - decentraland/sample-scenes: ð Examples of different experiences built for Decentraland</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>ð Examples of different experiences built for Decentraland</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/sample-scenes</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>2</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>67</strong>

<h2>Files</h2>

<button>View code</button>

<p>To get you up and running, and to illustrate what kind of experiences you can build using the SDK, weâve put together some code and scene examples.</p>

<p>Some of these scenes feature a link to a version of the scene that's deployed on a remote server. There you can interact with it just as if you were running</p>

<code>dcl start</code>

<p>locally.</p>

<h2>Static XML Scenes</h2>

<h4>Static XML Scene</h4>

<p>A completely static scene. It's built entirely using XML, which makes it easier to write and edit, but doesn't support any changes over time or interactions with the user.</p>

<h2>Essentials</h2>

<h4>Hypno wheels</h4>

<p>This simple scene features a couple of wheels that you can spin by clicking them.</p>

<li>rotate an entity</li>

<li>glTF models</li>

<li>click events</li>

<li>textures</li>

<li>custom components</li>

<li>component groups</li>

<h4>Shark animation</h4>

<p>This simple scene shows how to add animations to a</p>

<code>GLTFComponent</code>

<p>and handle click events.</p>

<li>glTF models</li>

<li>animations</li>

<li>click events</li>

<h4>Open the door</h4>

<p>A simple interactive scene with a door that can be opened and closed.</p>

<code>Slerp()</code>

<li>function for rotation</li>

<li>click events</li>

<li>materials</li>

<li>parent entities</li>

<li>custom components</li>

<li>component groups</li>

<h4>Sliding door</h4>

<p>A simple interactive scene with a two-sided door that can be opened by clicking.</p>

<code>Lerp()</code>

<li>function for moving</li>

<li>click events</li>

<li>materials</li>

<li>parent entities</li>

<li>custom components</li>

<li>component groups</li>

<h4>Jukebox</h4>

<p>A scene where you can play different songs by pressing buttons on a jukebox.</p>

<li>audio</li>

<li>glTF models</li>

<code>Lerp()</code>

<li>function for moving</li>

<li>click events</li>

<li>materials</li>

<li>parent entities</li>

<li>custom components</li>

<li>component groups</li>

<h4>Dance floor</h4>

<p>A scene with animations, sound, and tiles on the floor that randomly change color to the beat.</p>

<li>audio</li>

<li>glTF models</li>

<li>animations</li>

<li>materials</li>

<li>custom components</li>

<li>component groups</li>

<h4>Memory game</h4>

<p>A Simon Says game, with click interactions and sequenced actions. The game generates a random sequence of colors and you must click buttons to match those.</p>

<li>glTF models</li>

<li>materials</li>

<li>click events</li>

<li>custom components</li>

<li>component groups</li>

<h2>Movement</h2>

<h4>Hummingbirds</h4>

<p>A scene where hummingbirds spawn when you click a tree. Each bird moves on its own to random positions.</p>

<h4>Gnark patrolling</h4>

<p>A scene that shows a character walking along a fixed path, using lerp over each segment of the path. If you approach it, it will switch to yelling at you.</p>

<h2>Network connections</h2>

<h4>Weather simulation</h4>

<p>A scene that checks a weather API for the weather in a location and displays that weather condition, showing rain, thunder or snowflakes

Use real weather data from different locations by changing the coordinates, or change the value of the âfakeWeatherâ variable to see different weather conditions manifest.</p>

<li>Call external REST API</li>

<h4>Remote door</h4>

<p>A scene that uses a server and a REST API to sync a scene state amongst multiple users. Itâs built around the basic âopen the doorâ example.</p>

<li>Create a REST server</li>

<li>Call REST API</li>

<h4>Remote mural</h4>

<p>A scene that uses a server and a REST API to sync a scene state amongst multiple users. You can paint pixels in a mural that other users can see. The colors of each pixel are stored in a remote server.</p>

<li>Create a REST server</li>

<li>Call REST API</li>

<h2>Advanced</h2>

<h4>Block Dog</h4>

<p>A scene with a simple AI character. It randomly chooses what action to take: follow you, sit or remain idle. You can also tell it to sit or stand up by clicking it, or tell it to drink water by clicking its bowl.</p>

<h4>Tower defense game (WIP)</h4>

<p>A fully-fledged game where a random 2d path is generated along which enemies walk, and where traps are randomly placed. You need to activate the traps as the enemies advance along the path to kill them. Itâs all about timing.</p>

<h4>Castaway 2048 (WIP)</h4>

<p>A fully fledged game, based on the popular game 2048, where the values are represented by a series of gems of increasing values. Click and drag to displace the gems on the board and merge them into greater values till you reach 2048.</p>

<h2>About</h2>

<p>ð Examples of different experiences built for Decentraland</p>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>32</strong>

<h3>Watchers</h3>

<strong>24</strong>

<h3>Forks</h3>

<strong>8</strong>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland/sample-scene-static-xml

# Change to URL: https://github.com/decentraland-scenes/Hypno-wheels

# URL: https://github.com/decentraland-scenes/Hypno-wheels

<title>GitHub - decentraland-scenes/Hypno-wheels: This simple scene features a couple of wheels that you can spin by clicking them.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>This simple scene features a couple of wheels that you can spin by clicking them.</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/Hypno-wheels</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>2</strong>

<strong>1</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>23</strong>

<h2>Files</h2>

<button>View code</button>

<h2>Hypno wheels</h2>

<p>This simple scene features a couple of wheels that you can spin by clicking them.</p>

<p>Read the</p>

<p>about this scene</p>

<p>This scene shows you:</p>

<li>How to add 3D models</li>

<li>How to rotate an entity</li>

<li>How to handle click events</li>

<li>How to apply textures to primitive shapes</li>

<li>How to create custom components to store custom data</li>

<li>How to use systems to make gradual changes on every frame</li>

<li>How to use component groups to keep track of multiple entities</li>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$:  dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<strong>Scene Usage</strong>

<p>Click a wheel to make it spin. The more times you click it, the faster it spins.</p>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<p>If something doesnât work, please</p>

<p>.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>This simple scene features a couple of wheels that you can spin by clicking them.</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>3</strong>

<h3>Watchers</h3>

<strong>3</strong>

<h3>Forks</h3>

<strong>1</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/Shark-animation

# URL: https://github.com/decentraland-scenes/Shark-animation

<title>GitHub - decentraland-scenes/Shark-animation: This simple scene shows how to add animations to a `GLTFComponent` and handle click events.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>This simple scene shows how to add animations to a `GLTFComponent` and handle click events.</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/Shark-animation</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>4</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>27</strong>

<h2>Files</h2>

<button>View code</button>

<h2>Shark animation</h2>

<p>This simple scene shows how to add animations to a</p>

<code>GLTFComponent</code>

<p>and handle click events.</p>

<p>This scene shows you:</p>

<li>How to add 3D models</li>

<li>How to play animations from a 3D model</li>

<li>How to toggle animations on or off from a 3D model</li>

<li>How to handle click events on an entity</li>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$:  dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<strong>Scene Usage</strong>

<p>Click on the shark to toggle the</p>

<code>bite</code>

<p>animation on and off. The</p>

<code>swim</code>

<p>animation should be always on.</p>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<p>If something doesnât work, please</p>

<p>.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>This simple scene shows how to add animations to a `GLTFComponent` and handle click events.</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>3</strong>

<h3>Watchers</h3>

<strong>5</strong>

<h3>Forks</h3>

<strong>1</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/Open-door

# URL: https://github.com/decentraland-scenes/Open-door

<title>GitHub - decentraland-scenes/Open-door: A simple interactive scene with a door that can be opened and closed.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A simple interactive scene with a door that can be opened and closed.</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/Open-door</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>3</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>23</strong>

<h2>Files</h2>

<button>View code</button>

<h2>Open the door</h2>

<p>A simple interactive scene with a door that can be opened and closed.</p>

<p>This scene shows you:</p>

<li>How to add primitive shapes and apply materials to them</li>

<li>How to handle click events</li>

<li>How to use the</li>

<li>to rotate an entity gradually</li>

<li>How to use the toggle component from the utils library to alternate something between two states</li>

<li>How to arrange entities into parents and children</li>

<li>How to rotate an entity around an arbitrary pivot point</li>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$:  dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<strong>Scene Usage</strong>

<p>Click on the door to open and close it.</p>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<p>If something doesnât work, please</p>

<p>.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>A simple interactive scene with a door that can be opened and closed.</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>3</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/Sliding-door

# URL: https://github.com/decentraland-scenes/Sliding-door

<title>GitHub - decentraland-scenes/Sliding-door: A simple interactive scene with a two-sided door that can be opened by clicking.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A simple interactive scene with a two-sided door that can be opened by clicking.</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/Sliding-door</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>2</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>21</strong>

<h2>Files</h2>

<button>View code</button>

<h2>Sliding doors</h2>

<p>A simple interactive scene with a two-sided door that can be opened by clicking.</p>

<p>This scene shows you:</p>

<li>How to add primitive shapes and apply materials to them</li>

<li>How to handle click events</li>

<li>How to use the</li>

<li>to move an entity gradually</li>

<li>How to use the toggle component from the utils library to alternate something between two states</li>

<li>How to arrange entities into parents and children</li>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$:  dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<strong>Scene Usage</strong>

<p>Click on the door to open both sides at once.</p>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<p>If something doesnât work, please</p>

<p>.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>A simple interactive scene with a two-sided door that can be opened by clicking.</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>1</strong>

<h3>Watchers</h3>

<strong>4</strong>

<h3>Forks</h3>

<strong>1</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/Jukebox

# URL: https://github.com/decentraland-scenes/Jukebox

<title>GitHub - decentraland-scenes/Jukebox: A scene where you can play different songs by pressing buttons on a jukebox.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A scene where you can play different songs by pressing buttons on a jukebox.</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/Jukebox</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>4</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>29</strong>

<h2>Files</h2>

<button>View code</button>

<h2>Jukebox</h2>

<p>A scene where you can play different songs by pressing buttons on a jukebox.</p>

<p>This scene shows you</p>

<li>How to play audio from a file</li>

<li>How to use systems to move entities gradually</li>

<li>How to use a</li>

<code>Lerp()</code>

<li>function to gradually move something from a starting point to an ending point over a given time</li>

<li>How to handle click events</li>

<li>How to arrange entities into parents and children to position them relative to each other</li>

<li>How to create custom components to store custom data</li>

<li>How to use component groups to handle multiple entities</li>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$:  dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<strong>Scene Usage</strong>

<p>Click the buttons on the jukebox to select different songs. Any other currently playing song is stopped and is button is unpressed.</p>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<p>If something doesnât work, please</p>

<p>.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>A scene where you can play different songs by pressing buttons on a jukebox.</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>1</strong>

<h3>Watchers</h3>

<strong>3</strong>

<h3>Forks</h3>

<strong>3</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/Dance-floor

# URL: https://github.com/decentraland-scenes/Dance-floor

<title>GitHub - decentraland-scenes/Dance-floor: A scene with animations, sound, and tiles on the floor that randomly change color to the beat.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A scene with animations, sound, and tiles on the floor that randomly change color to the beat.</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/Dance-floor</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>17</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Dance floor</h1>

<p>A scene with animations, sound, and tiles on the floor that randomly change color to the beat.</p>

<p>This scene shows you:</p>

<li>How to play music</li>

<li>How to add a 3D model</li>

<li>How to play animations from a 3D model</li>

<li>How to change the materials on a primitive shape</li>

<li>How to handle synchronized changes of several entities through a system</li>

<li>How to create custom components</li>

<li>How to use component groups to manage multiple entities</li>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$:  dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<p>If something doesnât work, please</p>

<p>.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>A scene with animations, sound, and tiles on the floor that randomly change color to the beat.</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>6</strong>

<h3>Watchers</h3>

<strong>3</strong>

<h3>Forks</h3>

<strong>9</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/Memory-game

# URL: https://github.com/decentraland-scenes/Memory-game

<title>GitHub - decentraland-scenes/Memory-game: A Simon Says game, with click interactions and sequenced actions. The game generates a random sequence of colors and you must click buttons to match those.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A Simon Says game, with click interactions and sequenced actions. The game generates a random sequence of colors and you must click buttons to match those.</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/Memory-game</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>2</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>20</strong>

<h2>Files</h2>

<button>View code</button>

<h2>Memory game</h2>

<p>A Simon Says game, with click interactions and sequenced actions. The game generates a random sequence of colors and you must click buttons to match those.</p>

<p>This scene shows you:</p>

<li>How to change materials on a primitive shape</li>

<li>How to handle click events</li>

<li>How to use custom components to store custom data</li>

<li>How to use component groups to handle various entities</li>

<li>How to use a system to handle a game's rules and logic</li>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$:  dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<strong>Scene Usage</strong>

<p>Click the button in the center to start a game. Repeat the sequence of colors by clicking the colored panels. If you make a mistake, you must start again.</p>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<p>If something doesnât work, please</p>

<p>.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>A Simon Says game, with click interactions and sequenced actions. The game generates a random sequence of colors and you must click buttons to match those.</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>3</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/Hummingbirds

# URL: https://github.com/decentraland-scenes/Hummingbirds

<title>GitHub - decentraland-scenes/Hummingbirds: A scene where hummingbirds spawn when you click a tree. Each bird moves on its own to random positions.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A scene where hummingbirds spawn when you click a tree. Each bird moves on its own to random positions.</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/Hummingbirds</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>3</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>29</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Hummingbird sample scene</h1>

<p>A scene where hummingbirds spawn when you click a tree. Each bird moves on its own to random positions.</p>

<p>This scene shows you:</p>

<li>How to call multiple animations in a 3D model</li>

<li>How to play animations on a 3D model without looping them</li>

<li>How to spawn new entities</li>

<li>How to build a system that randomly moves an entity around the scene</li>

<li>How to build a system that handles the movement of a changing number of entities</li>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$:  dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<strong>Scene Usage</strong>

<p>Click on the tree to make a bird appear and start flying randomly around the scene. Each time you click the tree, a new bird appears until a maximum number is reached.</p>

<p>If something doesnât work, please</p>

<p>.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>A scene where hummingbirds spawn when you click a tree. Each bird moves on its own to random positions.</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>5</strong>

<h3>Watchers</h3>

<strong>3</strong>

<h3>Forks</h3>

<strong>1</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/Gnark-patrol

# URL: https://github.com/decentraland-scenes/Gnark-patrol

<title>GitHub - decentraland-scenes/Gnark-patrol: A scene that shows a character walking along a fixed path, using lerp over each segment of the path. If you approach it, it will switch to yelling at you.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A scene that shows a character walking along a fixed path, using lerp over each segment of the path. If you approach it, it will switch to yelling at you.</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/Gnark-patrol</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>5</strong>

<strong>8</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>41</strong>

<h2>Files</h2>

<button>View code</button>

<h2>Gnark patrolling</h2>

<p>A scene that shows a character walking along a fixed path, using lerp over each segment of the path. If you approach it, it will switch to yelling at you.</p>

<p>This scene shows you:</p>

<li>How to add 3D models to a scene and call their animations</li>

<li>How to use a system to make an NPC walk around a predetermined path</li>

<li>How to check the proximity of a player to an NPC and react</li>

<li>How to rotate an entity to face the player</li>

<li>How to create a custom component to store custom data</li>

<p>Read a tutorial blog post about this scene:</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$:  dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<strong>Scene Usage</strong>

<p>Gnark walks in circles, patrolling his temple. If you approach him too much, he will face you and scream a battle cry!</p>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<p>If something doesnât work, please</p>

<p>.</p>

<h2>3D models</h2>

<p>The 3D model for the character used in the scene is an asset courtesy of</p>

<p>. The model is not free to use, but with the coupon code</p>

<code>DecentralandKing</code>

<p>you can obtain it with a 100% discount on their site.</p>

<p>Other 3D models in this scene are developed by Decentraland's art team and free to use under the Apache 2 licence.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>A scene that shows a character walking along a fixed path, using lerp over each segment of the path. If you approach it, it will switch to yelling at you.</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>4</strong>

<h3>Forks</h3>

<strong>2</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/Weather-simulation

# URL: https://github.com/decentraland-scenes/Weather-simulation

<title>GitHub - decentraland-scenes/Weather-simulation: A scene that checks a weather API for the weather in a location and displays that weather condition, showing rain, thunder or snowflakes Use real weather data from different locations by changing the coordinates, or change the value of the âfakeWeatherâ variable to see different weather conditions manifest.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A scene that checks a weather API for the weather in a location and displays that weather condition, showing rain, thunder or snowflakes Use real weather data from different locations by changing the coordinates, or change the value of the âfakeWeatherâ variable to see different weather conditions manifest.</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/Weather-simulation</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>3</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>18</strong>

<h2>Files</h2>

<button>View code</button>

<h2>Weather API</h2>

<p>A scene that checks a weather API for the weather in a location and displays that weather condition, showing rain, thunder or snowflakes

Use real weather data from different locations by changing the coordinates, or change the value of the âfakeWeatherâ variable to see different weather conditions manifest.</p>

<p>This scene shows you:</p>

<li>How to call a REST API and parse a JSON response</li>

<li>How to conditionally render different scenarios based on the API's responses</li>

<li>How to simulate rain by moving multiple entities down and recycling them</li>

<li>How to sumulate snow by slowly moving arnd rotating multiple entities down and recyling them</li>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$:  dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<strong>Scene Usage</strong>

<p>You need create an account on the the</p>

<p>. Then, replace the values of the fields</p>

<code>appId</code>

<p>and</p>

<code>APIkey</code>

<p>with your own credentials.</p>

<p>You can also replace the values of</p>

<code>lat</code>

<p>and</p>

<code>lon</code>

<p>to access weather data from a different location. By default they're set to point to the city of Buenos Aires.</p>

<p>Modify the value of</p>

<code>fakeWeather</code>

<p>to see different weather conditions independently of what the real weather is. For example, if you set it to "snow" you will see snow. If</p>

<code>fakeWeather = null</code>

<p>, the scene will call the weather API with your credentials.</p>

<p>You can also modify</p>

<code>dropSpeed</code>

<p>and</p>

<code>flakeSpeed</code>

<p>to change the speed at which raindrops or snowflakes fall. This speed is the amount of milliseconds it takes them to fall.</p>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<p>If something doesnât work, please</p>

<p>.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>A scene that checks a weather API for the weather in a location and displays that weather condition, showing rain, thunder or snowflakes Use real weather data from different locations by changing the coordinates, or change the value of the âfakeWeatherâ variable to see different weather conditions manifest.</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>8</strong>

<h3>Watchers</h3>

<strong>4</strong>

<h3>Forks</h3>

<strong>5</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/Remote-door

# URL: https://github.com/decentraland-scenes/Remote-door

<title>GitHub - decentraland-scenes/Remote-door: A scene that uses a server and a REST API to sync a scene state amongst multiple users. Itâs built around the basic âopen the doorâ example.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A scene that uses a server and a REST API to sync a scene state amongst multiple users. Itâs built around the basic âopen the doorâ example.</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/Remote-door</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>15</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Remote server door</h1>

<p>A scene that uses a server and a REST API to sync a scene state amongst multiple users. Itâs built around the basic âopen the doorâ example.</p>

<li>Create a REST server</li>

<li>Call REST API</li>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command</p>

<pre>npm i -g decentraland</pre>

<p>For a more details, follow the steps in the</p>

<p>.</p>

<strong>Previewing the scene</strong>

<p>Once you've installed the CLI, download this example and navigate to its directory from your terminal or command prompt.</p>

<h4>Run the REST server</h4>

<p>(In another terminal window)</p>

<pre>server</pre>

<pre>npm i</pre>

<pre>npm run build</pre>

<pre>npm start</pre>

<h4>Run the scene preview</h4>

<pre>scene</pre>

<pre>dcl start</pre>

<p>Open multiple browser tabs by copying the preview URL. Interact with the door on one tab to see that it also changes on other tabs as well.</p>

<p>Any dependencies are installed and then the CLI will open the scene in a new browser tab automatically.</p>

<strong>Usage</strong>

<p>Click on the door to open or close it. Other users should see the door change state as well.</p>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>A scene that uses a server and a REST API to sync a scene state amongst multiple users. Itâs built around the basic âopen the doorâ example.</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>2</strong>

<h3>Watchers</h3>

<strong>3</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/Remote-mural

# URL: https://github.com/decentraland-scenes/Remote-mural

<title>GitHub - decentraland-scenes/Remote-mural: A scene that uses a server and a REST API to sync a scene state amongst multiple users. You can paint pixels in a mural that other users can see. The colors of each pixel are stored in a remote server.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A scene that uses a server and a REST API to sync a scene state amongst multiple users. You can paint pixels in a mural that other users can see. The colors of each pixel are stored in a remote server.</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/Remote-mural</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>23</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Remote mural</h1>

<p>A scene that uses a server and a REST API to sync a scene state amongst multiple users. You can paint pixels in a mural that other users can see. The colors of each pixel are stored in a remote server.</p>

<li>Create a REST server</li>

<li>Call REST API</li>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command</p>

<pre>npm i -g decentraland</pre>

<p>For a more details, follow the steps in the</p>

<p>.</p>

<strong>Previewing the scene</strong>

<p>Once you've installed the CLI, download this example and navigate to its directory from your terminal or command prompt.</p>

<h4>Run the REST server</h4>

<p>(In another terminal window)</p>

<pre>server</pre>

<pre>npm install</pre>

<pre>npm run build</pre>

<pre>npm start</pre>

<h4>Run the scene preview</h4>

<pre>scene</pre>

<pre>npm install</pre>

<pre>dcl start</pre>

<p>Open multiple browser tabs by copying the preview URL. Interact with the door on one tab to see that it also changes on other tabs as well.</p>

<p>Any dependencies are installed and then the CLI will open the scene in a new browser tab automatically.</p>

<strong>Usage</strong>

<p>Click on a color on the palette on the right. Once a color is selected, you can paint the pixels on the wall with that color. Other users will see the same wall, painted with the same colors.</p>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>A scene that uses a server and a REST API to sync a scene state amongst multiple users. You can paint pixels in a mural that other users can see. The colors of each pixel are stored in a remote server.</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>3</strong>

<h3>Forks</h3>

<strong>5</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/Block-dog

# URL: https://github.com/decentraland-scenes/Block-dog

<title>GitHub - decentraland-scenes/Block-dog: A scene with a simple AI character that chooses its own actions and follows orders.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A scene with a simple AI character that chooses its own actions and follows orders.</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/Block-dog</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>2</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>24</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Block Dog</h1>

<p>A scene with a simple AI character. It randomly chooses what action to take: follow you, sit or remain idle. You can also tell it to sit or stand up by clicking it, or tell it to drink water by clicking its bowl.</p>

<p>This scene shows you:</p>

<li>How to handle multple animations on a 3D model</li>

<li>How to create a basic AI, giving an NPC a basic state-machine behavior</li>

<li>How to use randomness to determine autonomous behavior of a character</li>

<li>How to override random behaviour with specific commands</li>

<li>How to make an entity follow the player's position</li>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$:  dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<strong>Scene Usage</strong>

<li>The dog has autonomous behavior and randomly sits and stands up on its own.</li>

<li>If you click the dog, it switches from standing up to sitting down.</li>

<li>If you click the water bowl, it walks towards it and drinks.</li>

<li>If you step inside the bounds of the scene, the dog follows you and sits in front of you.</li>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<p>If something doesnât work, please</p>

<p>.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>A scene with a simple AI character that chooses its own actions and follows orders.</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>2</strong>

<h3>Watchers</h3>

<strong>3</strong>

<h3>Forks</h3>

<strong>2</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/Tower-defense

# URL: https://github.com/decentraland-scenes/Tower-defense

<title>GitHub - decentraland-scenes/Tower-defense: A fully-fledged game where a random 2d path is generated along which enemies walk, and where traps are randomly placed. You need to activate the traps as the enemies advance along the path to kill them. Itâs all about timing.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A fully-fledged game where a random 2d path is generated along which enemies walk, and where traps are randomly placed. You need to activate the traps as the enemies advance along the path to kill them. Itâs all about timing.</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/Tower-defense</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>2</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>21</strong>

<h2>Files</h2>

<button>View code</button>

<h2>Tower defense game (WIP)</h2>

<p>A fully-fledged game where a random 2d path is generated along which enemies walk, and where traps are randomly placed. You need to activate the traps as the enemies advance along the path to kill them. Itâs all about timing.</p>

<p>This scen shows you:</p>

<li>How to handle the reusing of multiple entities using pools</li>

<li>How to generate a random path that fulfills certain conditions</li>

<li>How to move a character along a predetermined path</li>

<li>How to keep a game's logic encapsulated in game objects, each with its own state and methods</li>

<p>Note: This scene currently has bugs that need fixing. It still serves to show certain best practices.</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$:  dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<strong>Scene Usage</strong>

<p>Click the button on the rock to start a new game. Blob monsters will start to appear and walk along the path. Kill them by triggering both levers on a trap. Traps are active for a short period of time, so be careful with the timing. Once a trap is activated, another appears on a random spot along the path.</p>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<p>If something doesnât work, please</p>

<p>.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>A fully-fledged game where a random 2d path is generated along which enemies walk, and where traps are randomly placed. You need to activate the traps as the enemies advance along the path to kill them. Itâs all about timing.</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>1</strong>

<h3>Watchers</h3>

<strong>3</strong>

<h3>Forks</h3>

<strong>1</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/Castaway-2048

# URL: https://github.com/decentraland-scenes/Castaway-2048

<title>GitHub - decentraland-scenes/Castaway-2048: A fully fledged game, based on the popular game 2048.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A fully fledged game, based on the popular game 2048.</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/Castaway-2048</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>3</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>35</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Castaway 2048</h1>

<p>A fully fledged game, based on the popular game 2048, where the values are represented by a series of gems of increasing values. Click and drag to displace the gems on the board and merge them into greater values till you reach 2048.</p>

<p>This scene shows you</p>

<li>How to capture global mouse events and detect swipes in different directions</li>

<li>How to handle the spawning and recycling of entities with an entity pool</li>

<li>How to handle moving of various entities over positions on a grid</li>

<li>How to use component groups to treat many entities of a same type in the same ways</li>

<li>How to create custom components to store custom data</li>

<li>How to use systems to carry out changes in the game</li>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$:  dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<strong>Scene Usage</strong>

<p>Click the treasure chest to open it or to reset the game.</p>

<p>Click and drag in a direction to move all the gems in that direction. If two identical gems are merged, they grow into a more valuable one, keep merging them until you reach one of 2048 value.</p>

<p>If all the spaces are full and you can't free them by merging gems, you loose.</p>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<p>If something doesnât work, please</p>

<p>.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>A fully fledged game, based on the popular game 2048.</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>1</strong>

<h3>Watchers</h3>

<strong>3</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland/communications-server

# URL: https://github.com/decentraland/communications-server

<title>GitHub - decentraland/communications-server: ðCommunications Server</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>ðCommunications Server</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/communications-server</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>2</strong>

<strong>1</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>57</strong>

<h2>Files</h2>

<button>View code</button>

<p>Decentraland's communication server implementation</p>

<h1>How to work on this project</h1>

<code>npm i</code>

<li>to install the dependencies</li>

<code>npm link</code>

<li>to link the project</li>

<code>npm build</code>

<li>to build</li>

<code>make test</code>

<li>to run the tests</li>

<h2>Copyright info</h2>

<p>This repository is protected with a standard Apache 2 license. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>ðCommunications Server</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>3</strong>

<h3>Watchers</h3>

<strong>21</strong>

<h3>Forks</h3>

<strong>5</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland/MANA-community-fund-learning-content

# URL: https://github.com/decentraland/MANA-community-fund-learning-content

<title>GitHub - decentraland/MANA-community-fund-learning-content: Offer bounties in MANA to developers that create educational content: tutorials & scene samples</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Offer bounties in MANA to developers that create educational content: tutorials & scene samples</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/MANA-community-fund-learning-content</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>35</strong>

<h2>Files</h2>

<button>View code</button>

<h1>MANA-community-fund-learning-content</h1>

<p>Offer bounties in MANA to developers that create educational content (tutorials & scene samples) and host community meetups.</p>

<h2>Example Workshop Materials</h2>

<li>Example</li>

<li>with helpful links</li>

<h2>About</h2>

<p>Offer bounties in MANA to developers that create educational content: tutorials & scene samples</p>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>10</strong>

<h3>Watchers</h3>

<strong>7</strong>

<h3>Forks</h3>

<strong>8</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland/DecentralandUnityPlugin

# URL: https://github.com/decentraland/DecentralandUnityPlugin

<title>GitHub - decentraland/DecentralandUnityPlugin</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/DecentralandUnityPlugin</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>199</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Decentraland Unity Exporter</h1>

<h2>2 Workflows to Choose</h2>

<h3>1. Export a Complete DCL Project</h3>

<p>If you are going to preview the scene on your computer, or deploy the scene to IPFS, you should go this way, follow this article.</p>

<p>This workflow includes all features of the next one.</p>

<h3>2. Export Only Scene Files and Publish to Now.sh</h3>

<p>If you don't want to install DCL SDK or deal with complicated node.js environment, this is a best way for you. You can publish your scene and show it to others.</p>

<p>The only thing you need to do is installing Unity and Now.sh.</p>

<p>Follow</p>

<p>to get started.</p>

<h2>Introduction: What can you do</h2>

<h3>1. Export these elements</h3>

<p>Box</p>

<p>Sphere (UV is not correct yet)</p>

<p>Plane</p>

<p>Cylinder</p>

<p>Cone (UV is not correct yet)</p>

<p>TextMesh (custom font is not supported)</p>

<p>Standard Materials</p>

<p>Other models will be exported as glTF models (animations are not supported)</p>

<p>Lights are not supported</p>

<strong>Note</strong>

<p>: Sphere, Cylinder and Cone have a lot of triangles that might exceed dcl limit, so use them carefully.</p>

<strong>Note</strong>

<p>: Non-scene assets (e.g. models, materials, textures) should not have same names though duplicated names are available in different folders.</p>

<h3>2. Help you check whether you obey the scene limitation</h3>

<p>All potential errors will be warned right in Unity.</p>

<h3>3. Create & preview a local scene</h3>

<p>If you don't want to use command line tools.</p>

<h3>4. Edit the land info</h3>

<p>e.g. Parcel coordinates, ETH address, Owner's name & email</p>

<h2>Installation Guide</h2>

<p>You should prepare these tools on your own:</p>

<p>Then, download the Exporter which is inside a Unity Package.</p>

<h2>Exporter Guide</h2>

<h3>Open the exporter and create a Unity scene</h3>

<p>First, create a Unity project, better empty.</p>

<p>Then drag the .unitypackage file into Unity or use "Import Assets.." in Unity. That will extract all assets into your Unity project.</p>

<p>After a while, you should see a new tab in the menu bar like below.</p>

<p>Click the "Scene Exporter" will open the exporter.</p>

<strong>Note:</strong>

<p>an auto-generated GameObject called ".dcl" will be created in the hierarchy. Don't edit it.</p>

<p>You can create a new scene or open the sample scene:</p>

<p>The exporter looks like this:</p>

<h3>Setup node.js environment for Unity (Mac Only)</h3>

<p>On Mac, you need to run a script to let the</p>

<code>Init Project</code>

<p>and</p>

<code>Start Project</code>

<p>functions work. Just double-click the</p>

<code>set_path.command</code>

<p>file either in Unity or in Finder.</p>

<p>A terminal window will open saying the process is completed. Close it.</p>

<h3>Input land infomation</h3>

<p>Edit your parcels' coordinates in this format:</p>

<code>12,-21

12,-22

13,-21

13,-22

...</code>

<strong>The first line will be the "base" parcel and set as the center in your scene.</strong>

<p>You can also fill up the Owner Info part if you want to publish the scene.</p>

<h3>Create shapes</h3>

<p>You must use the specific GameObjects to refer to the DCL primitives. To create a DCL primitive, you need to go to the following menu.</p>

<p>If you want to convert a lot of Unity primitives into DCL primitives, there is a 'Convert' function in Decentraland tab in the menubar.</p>

<em>Why don't we use Unity primitves? Because the primitives between Unity and DCL have a little difference. For example, the Unity Cube and the DCL Box have different UV map, that will make your scene look different in two platforms.</em>

<p>Then, build your world as you like.</p>

<p>You can use models from outer model files (Unity does not support importing glTF, but we can export things as glTF). However, only the Unity Standard Shader is supported to export. That is enough to make a nice scene.</p>

<p>Most properties of the Standard Material can be well exported, but things might still look a bit different in DCL. We will improve the consistency all the time.</p>

<h3>Important notice about non-primitives</h3>

<p>The exporter traverses the whole scene. When it finds a non-primitive model, it will pack the model all the model's children and export one gltf file. That means, GameObjects under a non-primitive model will not generate their own node, even if they are primitives themselves. Instead, their data will be contained in the parent's gltf file.</p>

<h3>Before export</h3>

<p>Before export, you should check the statistics part. That shows some important indexes with their limitations. If something is wrong, you will see bright yellow warnings.</p>

<p>Then, you can also go through the hierarchy view where will tell you what type of node will be generated from each GameObject.</p>

<strong>Input or select the path of the folder to export files.</strong>

<strong>If you have not initialized a DCL project in the selected folder, you might want to create one. Just click the</strong>

<code>Init Project</code>

<strong>button.</strong>

<p>This has the same effect as executing 'dcl init' in command line tool.</p>

<p>(If you are on Mac and the button does not work, go check</p>

<p>)</p>

<h3>Export</h3>

<p>2 files and 1 folder will be exported and all old files will be overridden:</p>

<p>scene.tsx</p>

<p>scene.json</p>

<p>unity_assets/(.gltf and textures)</p>

<p>Click "Export" button to export. If success, a log will be shown in Unity console.</p>

<p>Finally, you can click 'Run Project' to see it in the browser (need to wait some seconds).</p>

<em>If you want to publish the scene to IPFS, you should do it in the command line.</em>

<h2>More Tools to Learn</h2>

<strong>ProBuilder</strong>

<p>is a very famous 3D building tool in Unity Asset Store. It is very convenient for level design or prototyping and can be a substitution to 3D modeling software like 3DS MAX. And, it is free now!</p>

<h2>Special Thanks to</h2>

<h3>Support from Decentraland Team</h3>

<p>Ari Meilich</p>

<p>Matias Bargas</p>

<p>Chris Chapman</p>

<p>Jayson Hu</p>

<p>Diff</p>

<h3>Test Users</h3>

<p>æ¶ååæµ</p>

<p>ä¸å¼</p>

<h3>Unity-glTF Tools</h3>

<h1>Donations</h1>

<h4>ETH/MANA/LAND/ERC20...</h4>

<p>0x1a38ac06099D648Bb14418D61956133a3d0E1f1C</p>

<h4>BTC</h4>

<p>1JEFCP4hqa3Gd7aQ5unWoLP6S6mD17K9HQ</p>

<p>In this tutorial,you can learn how to set PATH and do interaction with Terminal Application.</p>

<h2>About</h2>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>3</strong>

<h3>Watchers</h3>

<strong>7</strong>

<h3>Forks</h3>

<strong>9</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-unity-exporter

# Change to URL: https://github.com/support-from-decentraland-team

# Change to URL: https://github.com/decentraland/monaco-typescript

# URL: https://github.com/decentraland/monaco-typescript

<title>GitHub - decentraland/monaco-typescript: TypeScript/JavaScript language support for the Monaco Editor, customized for Decentraland</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>TypeScript/JavaScript language support for the Monaco Editor, customized for Decentraland</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/monaco-typescript</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>19</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>117</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Monaco TypeScript</h1>

<p>Simple TypeScript and JavaScript language support for the Monaco Editor.</p>

<em>Note</em>

<p>that this project focuses on single-file scenarios and that things like project-isolation, cross-file-features like Rename etc. are</p>

<em>outside</em>

<p>the scope of this project and not supported.</p>

<h2>Issues</h2>

<p>Please file issues concerning</p>

<code>monaco-typescript</code>

<p>in the</p>

<code>monaco-editor</code>

<p>.</p>

<h2>Installing</h2>

<p>This npm module is bundled and distributed in the</p>

<p>npm module.</p>

<h2>Development</h2>

<code>git clone https://github.com/Microsoft/monaco-typescript</code>

<code>cd monaco-typescript</code>

<code>npm install .</code>

<code>npm run watch</code>

<li>open</li>

<code>$/monaco-typescript/test/index.html</code>

<li>in your favorite browser.</li>

<h2>Updating TypeScript</h2>

<li>change typescript's version in</li>

<code>package.json</code>

<li>.</li>

<li>execute</li>

<code>npm install .</code>

<li>execute</li>

<code>npm run import-typescript</code>

<li>adopt new APIs</li>

<h2>Code of Conduct</h2>

<p>This project has adopted the</p>

<p>. For more information see the</p>

<p>or contact</p>

<p>with any additional questions or comments.</p>

<h2>License</h2>

<h2>About</h2>

<p>TypeScript/JavaScript language support for the Monaco Editor, customized for Decentraland</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>1</strong>

<h3>Watchers</h3>

<strong>9</strong>

<h3>Forks</h3>

<strong>101</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland/jekyll-feed

# URL: https://github.com/decentraland/jekyll-feed

<title>GitHub - decentraland/jekyll-feed: :memo: A Jekyll plugin to generate an Atom (RSS-like) feed of your Jekyll posts</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>ð A Jekyll plugin to generate an Atom (RSS-like) feed of your Jekyll posts</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/jekyll-feed</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>4</strong>

<strong>26</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>354</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Jekyll Feed plugin</h1>

<p>A Jekyll plugin to generate an Atom (RSS-like) feed of your Jekyll posts</p>

<h2>Installation</h2>

<p>Add this line to your site's Gemfile:</p>

<p>And then add this line to your site's</p>

<code>_config.yml</code>

<p>:</p>

<pre>:

-</pre>

<g-emoji>â ï¸</g-emoji>

<p>If you are using Jekyll < 3.5.0 use the</p>

<code>gems</code>

<p>key instead of</p>

<code>plugins</code>

<p>.</p>

<h2>Usage</h2>

<p>The plugin will automatically generate an Atom feed at</p>

<code>/feed.xml</code>

<p>.</p>

<h3>Optional configuration options</h3>

<p>The plugin will automatically use any of the following configuration variables, if they are present in your site's</p>

<code>_config.yml</code>

<p>file.</p>

<code>title</code>

<li>or</li>

<code>name</code>

<li>- The title of the site, e.g., "My awesome site"</li>

<code>description</code>

<li>- A longer description of what your site is about, e.g., "Where I blog about Jekyll and other awesome things"</li>

<code>url</code>

<li>- The URL to your site, e.g.,</li>

<code>http://example.com</code>

<li>. If none is provided, the plugin will try to use</li>

<code>site.github.url</code>

<li>.</li>

<code>author</code>

<li>- Global author information (see below)</li>

<h3>Already have a feed path?</h3>

<p>Do you already have an existing feed someplace other than</p>

<code>/feed.xml</code>

<p>, but are on a host like GitHub Pages that doesn't support machine-friendly redirects? If you simply swap out</p>

<code>jekyll-feed</code>

<p>for your existing template, your existing subscribers won't continue to get updates. Instead, you can specify a non-default path via your site's config.</p>

<pre>:</pre>

<pre>:</pre>

<p>To note, you shouldn't have to do this unless you already have a feed you're using, and you can't or wish not to redirect existing subscribers.</p>

<h3>Optional front matter</h3>

<p>The plugin will use the following post metadata, automatically generated by Jekyll, which you can override via a post's YAML front matter:</p>

<code>date</code>

<code>title</code>

<code>excerpt</code>

<code>id</code>

<code>category</code>

<code>tags</code>

<p>Additionally, the plugin will use the following values, if present in a post's YAML front matter:</p>

<code>image</code>

<p>- URL of an image that is representative of the post (can also be passed as</p>

<code>image.path</code>

<p>)</p>

<code>author</code>

<p>- The author of the post, e.g., "Dr. Jekyll". If none is given, feed readers will look to the feed author as defined in</p>

<code>_config.yml</code>

<p>. Like the feed author, this can also be an object or a reference to an author in</p>

<code>_data/authors.yml</code>

<p>(see below).</p>

<h3>Author information</h3>

<em>TL;DR: In most cases, put</em>

<code>author: [your name]</code>

<em>in the document's front matter, for sites with multiple authors. If you need something more complicated, read on.</em>

<p>There are several ways to convey author-specific information. Author information is found in the following order of priority:</p>

<li>An</li>

<code>author</code>

<li>object, in the documents's front matter, e.g.:</li>

<pre>:</pre>

<pre>:</pre>

<li>An</li>

<code>author</code>

<li>object, in the site's</li>

<code>_config.yml</code>

<li>, e.g.:</li>

<pre>:</pre>

<pre>:</pre>

<code>site.data.authors[author]</code>

<li>, if an author is specified in the document's front matter, and a corresponding key exists in</li>

<code>site.data.authors</code>

<li>. E.g., you have the following in the document's front matter:</li>

<pre>:</pre>

<p>And you have the following in</p>

<code>_data/authors.yml</code>

<p>:</p>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<p>In the above example, the author</p>

<code>benbalter</code>

<p>'s Twitter handle will be resolved to</p>

<code>@jekyllrb</code>

<p>. This allows you to centralize author information in a single</p>

<code>_data/authors</code>

<p>file for site with many authors that require more than just the author's username.</p>

<em>Pro-tip: If</em>

<code>authors</code>

<em>is present in the document's front matter as an array (and</em>

<code>author</code>

<em>is not), the plugin will use the first author listed.</em>

<li>An author in the document's front matter (the simplest way), e.g.:</li>

<pre>:</pre>

<li>An author in the site's</li>

<code>_config.yml</code>

<li>, e.g.:</li>

<pre>:</pre>

<h3>Meta tags</h3>

<p>The plugin exposes a helper tag to expose the appropriate meta tags to support automated discovery of your feed. Simply place</p>

<code>{% feed_meta %}</code>

<p>someplace in your template's</p>

<code><head></code>

<p>section, to output the necessary metadata.</p>

<h3>SmartyPants</h3>

<p>The plugin uses</p>

<code>smartify</code>

<p>for processing the site title and post titles. This will translate plain ASCII punctuation into "smart" typographic punctuation. This will not render or strip any Markdown you may be using in a title.</p>

<p>Jekyll's</p>

<code>smartify</code>

<p>filter uses</p>

<p>as a processor.  Accordingly, if you do not want "smart" typographic punctuation, disabling them in kramdown in your</p>

<code>_config.yml</code>

<p>will disable them in your feed. For example:</p>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<h3>Custom styling</h3>

<p>Want to style what your feed looks like in the browser? Simply add an XSLT at</p>

<code>/feed.xslt.xml</code>

<p>and Jekyll Feed will link to the stylesheet.</p>

<h2>Why Atom, and not RSS?</h2>

<p>Great question. In short, Atom is a better format. Think of it like RSS 3.0. For more information, see</p>

<p>.</p>

<h2>Categories</h2>

<p>Jekyll Feed can generate feeds for each category. Simply define which categories you'd like feeds for in your config:</p>

<pre>:</pre>

<pre>:

-</pre>

<pre>-</pre>

<h2>Collections</h2>

<p>Jekyll Feed can generate feeds for collections other than the Posts collection. This works best for chronological collections (e.g., collections with dates in the filenames). Simply define which collections you'd like feeds for in your config:</p>

<pre>:</pre>

<pre>:

-</pre>

<p>By default, collection feeds will be outputted to</p>

<code>/feed/<COLLECTION>.xml</code>

<p>. If you'd like to customize the output path, specify a collection's custom path as follows:</p>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<p>Finally, collections can also have category feeds which are outputted as</p>

<code>/feed/<COLLECTION>/<CATEGORY>.xml</code>

<p>. Specify categories like so:</p>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:

-</pre>

<pre>-</pre>

<h2>Contributing</h2>

<li>Fork it (</li>

<li>)</li>

<li>Create your feature branch (</li>

<code>git checkout -b my-new-feature</code>

<li>)</li>

<li>Commit your changes (</li>

<code>git commit -am 'Add some feature'</code>

<li>)</li>

<li>Push to the branch (</li>

<code>git push origin my-new-feature</code>

<li>)</li>

<li>Create a new Pull Request</li>

<h2>About</h2>

<p>ð A Jekyll plugin to generate an Atom (RSS-like) feed of your Jekyll posts</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>1</strong>

<h3>Watchers</h3>

<strong>3</strong>

<h3>Forks</h3>

<strong>214</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland/ipfs-node

# URL: https://github.com/decentraland/ipfs-node

<title>GitHub - decentraland/ipfs-node: ð½ A proxy to connect to the IPFS network</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>ð½ A proxy to connect to the IPFS network</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/ipfs-node</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>5</strong>

<strong>1</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>76</strong>

<h2>Files</h2>

<button>View code</button>

<h1>IPFS Upload node</h1>

<p>This is a node.js express app that uses the go-ipfs client (the js-ipfs client</p>

<p>the DHT yet) to upload scenes to our IPFS node.</p>

<h2>Public API</h2>

<th>Endpoint</th>

<th>Method</th>

<th>Response</th>

<td>api/pin/:peerId/:x/:y</td>

<td>POST</td>

<td>{ data: object }</td>

<td>api/resolve/:x/:y</td>

<td>GET</td>

<td>{ url: { ipns: string, ipfs: string, dependencies: array } }</td>

<td>api/get/:ipfs/:file*</td>

<td>GET</td>

<td>file</td>

<h2>Debugging</h2>

<p>You can always check commands manually, get into the container:</p>

<code>docker exec it ipfs-node bash</code>

<p>The command api is documented</p>

<p>.</p>

<h2>Test environment</h2>

<p>You need to create your own source of assets and publish it. Let's say to create a 2 level deep folder structure like:</p>

<li>sample</li>

<li>child1</li>

<li>text.txt</li>

<li>child2.txt</li>

<p>You can upload publish your assets like:</p>

<code>ipfs add -r ./sample</code>

<p>This will return a list of hashes per element, take the main one from the parent directory.</p>

<pre>ipfs name publish QmUt8guW4C7zDZ7WHociwudbfs83zMZ7Rkxrjkoeg3QupX</pre>

<p>Et voila! votre ipfs hash is up. Now you can query ipns hashes and dependencies using the API.

Assuming</p>

<code>QmexQCWwaEdEDWrMArR2T2g3V4RGvXXiXj6HgWfRBCumDK</code>

<p>is the node peerId

and there is an IPNS  inside the parcel (1,2)</p>

<pre>{</pre>

<pre>:</pre>

<pre>}</pre>

<pre>{</pre>

<pre>:</pre>

<pre>}</pre>

<pre>{</pre>

<pre>:</pre>

<pre>}</pre>

<p>Get the hashes related to a parcel</p>

<pre>{</pre>

<pre>:</pre>

<pre>,</pre>

<pre>: {</pre>

<pre>:</pre>

<pre>,</pre>

<pre>:</pre>

<pre>,</pre>

<pre>: [

{</pre>

<pre>:</pre>

<pre>,</pre>

<pre>:</pre>

<pre>,</pre>

<pre>:</pre>

<pre>},

{</pre>

<pre>:</pre>

<pre>,</pre>

<pre>:</pre>

<pre>,</pre>

<pre>:</pre>

<pre>},

{</pre>

<pre>:</pre>

<pre>,</pre>

<pre>:</pre>

<pre>,</pre>

<pre>:</pre>

<pre>},

{</pre>

<pre>:</pre>

<pre>,</pre>

<pre>:</pre>

<pre>,</pre>

<pre>:</pre>

<pre>}

]

}

}</pre>

<pre>{</pre>

<pre>:</pre>

<pre>}</pre>

<pre>{</pre>

<pre>:</pre>

<pre>}</pre>

<p>Get a file</p>

<pre>{</pre>

<pre>:</pre>

<pre>}</pre>

<p>Notice you cannot get node, only leaf.</p>

<h2>Usage with docker</h2>

<h3>Development</h3>

<code>npm run docker:build

npm run docker:run</code>

<h3>AWS</h3>

<code>npm run docker:build

npm run docker:aws:run</code>

<h2>Version</h2>

<p>2.0.0 - Refactor API gateways.</p>

<h2>About</h2>

<p>ð½ A proxy to connect to the IPFS network</p>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>24</strong>

<h3>Watchers</h3>

<strong>27</strong>

<h3>Forks</h3>

<strong>10</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland/sample-scene-dog-cat-mouse-cheese

# URL: https://github.com/decentraland/sample-scene-dog-cat-mouse-cheese

<title>GitHub - decentraland/sample-scene-dog-cat-mouse-cheese</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/sample-scene-dog-cat-mouse-cheese</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>2</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>31</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Decentraland Dog Cat Mouse Cheese</h1>

<p>This example, that's described in greater detail in a</p>

<p>shows how to build a more complex scene that involves predators and prays, which can interchangably be mice, cats or dogs. Each animal has a stack-based finite state machine (FSM) to manage its AI. Each animal uses the a* path finding algorythm to find its way around obstacles and othe animals.</p>

<p>: this link takes you to a copy of the scene deployed to a remote server where you can interact with it. You can also achieve the same by following the steps below and running it locally.</p>

<h2>Getting started</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command</p>

<pre>npm i -g decentraland</pre>

<p>For a more details, follow the steps in the</p>

<p>.</p>

<strong>Previewing the scene</strong>

<p>Once you've installed the CLI, download this example and navigate to its directory from your terminal or command prompt.</p>

<em>from the scene directory:</em>

<code>$:  dcl preview</code>

<p>Any dependencies are installed and then the CLI will open the scene in a new browser tab automatically.</p>

<h2>About</h2>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>1</strong>

<h3>Watchers</h3>

<strong>8</strong>

<h3>Forks</h3>

<strong>7</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-dog-cat-mouse-cheese

# Change to URL: https://github.com/decentraland/documentation-kr

# URL: https://github.com/decentraland/documentation-kr

<title>GitHub - decentraland/documentation-kr: ð What is Decentraland?</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>ð What is Decentraland?</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/documentation-kr</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>90</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Decentraland documentation</h1>

<h2>Setup</h2>

<li>Add your site and author details in</li>

<code>_config.yml</code>

<li>.</li>

<li>Add your Google Analytics, Disqus and MailChimp keys to</li>

<code>_config.yml</code>

<li>.</li>

<li>Get a workflow going to see your site's output (with</li>

<li>or Jekyll locally).</li>

<h2>Develop</h2>

<p>Base was built with</p>

<p>version 3.4.3, but should support newer versions as well.</p>

<p>Install the dependencies with</p>

<p>:</p>

<pre>$ bundle install</pre>

<p>Run</p>

<code>jekyll</code>

<p>commands through Bundler to ensure you're using the right versions:</p>

<pre>$ bundle</pre>

<pre>jekyll serve --incremental</pre>

<h2>Editing</h2>

<p>Base is already optimised for adding, updating and removing tutorials, navigation, footer and FAQ information in CloudCannon.</p>

<p>The sticky sidebar in tutorials in populated by pulling out</p>

<code><h2></code>

<p>elements from the content.</p>

<h3>Posts</h3>

<li>Add, update or remove a post in the</li>

<em>Posts</em>

<li>collection.</li>

<li>The tutorials page is organised by categories.</li>

<li>Change the defaults when new posts are created in</li>

<code>_posts/_defaults.md</code>

<li>.</li>

<h3>Post Series</h3>

<p>To create a new series:</p>

<li>Add a new document to the</li>

<code>sets</code>

<li>collection.</li>

<li>Set the</li>

<code>title</code>

<li>and</li>

<code>description</code>

<li>.</li>

<p>To add a tutorial/post to a series:</p>

<li>Add a</li>

<code>set</code>

<li>field to the tutorial front matter which points to the file name of the desired set without the</li>

<code>.md</code>

<li>extention. e.g. If I have a set at</li>

<code>_sets/getting-started.md</code>

<li>I would use this in my tutorial front matter:</li>

<code>set: getting-started</code>

<li>.</li>

<li>Add a</li>

<code>set_order</code>

<li>field to the tutorial front matter and specify a number. This is the tutorials order in the set.</li>

<h3>Navigation</h3>

<li>Exposed as a data file to give clients better access.</li>

<li>Set in the</li>

<em>Data</em>

<li>/</li>

<em>Navigation</em>

<li>section.</li>

<h3>Footer</h3>

<li>Exposed as a data file to give clients better access.</li>

<li>Set in the</li>

<em>Data</em>

<li>/</li>

<em>Footer</em>

<li>section.</li>

<p>Base template was made by</p>

<p>, the Cloud CMS for Jekyll.</p>

<h2>About</h2>

<p>ð What is Decentraland?</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>1</strong>

<h3>Watchers</h3>

<strong>20</strong>

<h3>Forks</h3>

<strong>5</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland/dapp-boilerplate

# URL: https://github.com/decentraland/dapp-boilerplate

<title>GitHub - decentraland/dapp-boilerplate: Decentraland's ÃApps Boilerplate</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Decentraland's ÃApps Boilerplate</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/dapp-boilerplate</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>2</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>32</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Decentraland Dapps Boilerplate</h1>

<h2>How to use</h2>

<pre>$ npm install</pre>

<pre>$ createuser dapp_user

$ createdb -O dapp_user super_dapp

$ npm run migrate up

$ npm start</pre>

<h2>ENV example</h2>

<strong>src/</strong>

<code>NODE_ENV=development

SERVER_PORT=5000

CONNECTION_STRING="postgres://localhost:5432/super_app"

# Ropsten

MANA_TOKEN_CONTRACT_ADDRESS=0x2a8fd99c19271f4f04b1b7b9c4f7cf264b626edb

LAND_REGISTRY_CONTRACT_ADDRESS=0x7a73483784ab79257bb11b96fd62a2c3ae4fb75b

# Mainnet

# LAND_REGISTRY_CONTRACT_ADDRESS=0xf87e31492faf9a91b02ee0deaad50d51d56d5d4d

# MANA_TOKEN_CONTRACT_ADDRESS=0x0f5d2fb29fb7d3cfee444a200298f468908cc942</code>

<strong>webapp/</strong>

<code>NODE_PATH=src/

NODE_ENV=development

REACT_APP_PROVIDER_URL=https://ropsten.infura.io/

REACT_APP_API_URL=http://localhost:5000

# Ropsten

REACT_APP_LAND_REGISTRY_CONTRACT_ADDRESS=0x7a73483784ab79257bb11b96fd62a2c3ae4fb75b

REACT_APP_MANA_TOKEN_CONTRACT_ADDRESS=0x2a8fd99c19271f4f04b1b7b9c4f7cf264b626edb

# Mainnet

# REACT_APP_LAND_REGISTRY_CONTRACT_ADDRESS=0xf87e31492faf9a91b02ee0deaad50d51d56d5d4d

# REACT_APP_MANA_TOKEN_CONTRACT_ADDRESS=0x0f5d2fb29fb7d3cfee444a200298f468908cc942</code>

<h2>About</h2>

<p>Decentraland's ÃApps Boilerplate</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>17</strong>

<h3>Watchers</h3>

<strong>19</strong>

<h3>Forks</h3>

<strong>7</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-dapps-boilerplate

# Change to URL: https://github.com/decentraland/nifty-gg

# URL: https://github.com/decentraland/nifty-gg

<title>GitHub - decentraland/nifty-gg</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/nifty-gg</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>57</strong>

<h2>Files</h2>

<button>View code</button>

<h2>About</h2>

<h3>Stars</h3>

<strong>2</strong>

<h3>Watchers</h3>

<strong>22</strong>

<h3>Forks</h3>

<strong>6</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland/eth-health

# URL: https://github.com/decentraland/eth-health

<title>GitHub - decentraland/eth-health: ð¥Health checks for ETH nodes</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>ð¥Health checks for ETH nodes</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/eth-health</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>15</strong>

<h2>Files</h2>

<button>View code</button>

<h2>About</h2>

<p>ð¥Health checks for ETH nodes</p>

<h3>Stars</h3>

<strong>3</strong>

<h3>Watchers</h3>

<strong>4</strong>

<h3>Forks</h3>

<strong>4</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland/cli-e2e

# URL: https://github.com/decentraland/cli-e2e

<title>GitHub - decentraland/cli-e2e: End to end tests for the CLI</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>End to end tests for the CLI</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/cli-e2e</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>7</strong>

<h2>Files</h2>

<button>View code</button>

<h2>About</h2>

<p>End to end tests for the CLI</p>

<h3>Stars</h3>

<strong>3</strong>

<h3>Watchers</h3>

<strong>4</strong>

<h3>Forks</h3>

<strong>4</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland/vorpal

# URL: https://github.com/decentraland/vorpal

<title>GitHub - decentraland/vorpal: Node's framework for interactive CLIs</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Node's framework for interactive CLIs</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/vorpal</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>3</strong>

<strong>61</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>454</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Vorpal</h1>

<p>Conquer the command-line.</p>

<code>(O)

<M

o          <M

/| ......  /:M\------------------------------------------------,,,,,,

(O)[ vorpal ]::@+}==========================================------------>

\| ^^^^^^  \:W/------------------------------------------------''''''

o          <W

<W

(O)</code>

<p>Vorpal is Node's first framework for building interactive CLI applications. With a simple and powerful API, Vorpal opens the door to a new breed of rich, immersive CLI environments like</p>

<p>and</p>

<p>.</p>

<h2>Notice</h2>

<p>This is now an</p>

<p>project. I am not able to invest a significant amount of time into maintaining Vorpal and so am looking for volunteers who would like to be active maintainers of the project. If you are interested, shoot me a note.</p>

<h2>Contents</h2>

<h2>Introduction</h2>

<p>Inspired by and based on</p>

<p>, Vorpal is a framework for building immersive CLI applications built on an interactive prompt provided by</p>

<p>. Vorpal launches Node into an isolated CLI environment and provides a suite of API commands and functionality including:</p>

<li>Simple, powerful command creation</li>

<li>Supports optional, required and variadic arguments and options</li>

<li>Piped commands</li>

<li>Persistent command history</li>

<li>Built-in help</li>

<li>Built-in tabbed auto-completion</li>

<li>Command-specific auto-completion</li>

<li>Customizable prompts</li>

<li>Extensive terminal control</li>

<li>Custom event listeners</li>

<li>And more</li>

<p>Vorpal supports</p>

<p>, which empower it to do awesome things such as</p>

<p>,</p>

<p>or supporting a</p>

<p>.</p>

<p>Made with â¤ï¸ by</p>

<p>.</p>

<h2>Getting Started</h2>

<h5>Quick Start</h5>

<p>Install</p>

<code>vorpal</code>

<p>into your project:</p>

<pre>$ npm install vorpal --save</pre>

<p>Create a</p>

<code>.js</code>

<p>file and add the following:</p>

<p>This creates an instance of Vorpal, adds a command which logs "bar", sets the prompt delimiter to say "myapp$", and shows the prompt.</p>

<p>Run your project file. Your Node app has become a CLI:</p>

<pre>$ node server.js

myapp~$</pre>

<p>Try out your "foo" command.</p>

<pre>myapp~$ foo

bar

myapp~$</pre>

<p>Now type "help" to see Vorpal's built in commands in addition to "foo":</p>

<pre>myapp~$</pre>

<pre>Commands</pre>

<pre>[command]    Provides</pre>

<pre>a given command.</pre>

<pre>[options]    Exits instance of Vorpal.

foo               Outputs</pre>

<pre>.

myapp~$</pre>

<p>There's the basics. Once you get the hang of it,</p>

<p>or read on to learn what else Vorpal can do.</p>

<h5>Community</h5>

<p>Questions? Use the</p>

<code>vorpal.js</code>

<p>StackOverflow tag for fast answers that help others, or jump into chat on Gitter.</p>

<code>vorpal.command</code>

<code>command.description</code>

<code>command.alias</code>

<code>command.parse</code>

<code>command.option</code>

<code>command.hidden</code>

<code>command.remove</code>

<code>command.help</code>

<code>command.autocomplete</code>

<code>command.action</code>

<code>command.cancel</code>

<code>vorpal.mode</code>

<code>mode.delimiter</code>

<code>mode.init</code>

<code>mode.action</code>

<code>vorpal.catch</code>

<code>commandInstance.log</code>

<code>commandInstance.prompt</code>

<code>commandInstance.delimiter</code>

<code>ui.delimiter</code>

<code>ui.input</code>

<code>ui.imprint</code>

<code>ui.submit</code>

<code>ui.cancel</code>

<code>ui.imprint</code>

<code>ui.redraw</code>

<code>ui.redraw.clear</code>

<code>ui.redraw.done</code>

<code>.parse</code>

<code>.delimiter</code>

<code>.show</code>

<code>.find</code>

<code>.exec</code>

<code>.execSync</code>

<code>.log</code>

<code>.history</code>

<code>.localStorage</code>

<code>.help</code>

<code>.pipe</code>

<code>.use</code>

<h2>Extensions</h2>

<p>You can build your own Vorpal commands and extensions.</p>

<h2>Why Vorpal?</h2>

<code>One, two! One, two! and through and through

The vorpal blade went snicker-snack!

He left it dead, and with its head

He went galumphing back.

Lewis Carroll, Jabberwocky</code>

<h5>Life Goals:</h5>

<s>Build a popular framework based on the</s>

<s>poem.</s>

<h2>License</h2>

<p>MIT Â©</p>

<h2>About</h2>

<p>Node's framework for interactive CLIs</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>2</strong>

<h3>Watchers</h3>

<strong>3</strong>

<h3>Forks</h3>

<strong>314</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland/ledger-wallet-provider

# URL: https://github.com/decentraland/ledger-wallet-provider

<title>GitHub - decentraland/ledger-wallet-provider: Ledger Nano S wallet provider for the Web3 ProviderEngine</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Ledger Nano S wallet provider for the Web3 ProviderEngine</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/ledger-wallet-provider</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>5</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>157</strong>

<h2>Files</h2>

<button>View code</button>

<h1>LedgerWalletProvider</h1>

<p>The LedgerWalletProvider lets your dapp communicate directly with a user's</p>

<p>using the</p>

<p>developed by Metamask.</p>

<p>Instead of setting your web3's provider to an HttpProvider or IpcProvider, you can create a custom provider using the</p>

<p>and tell it to use LedgerWalletProvider for all id management requests (e.g getAccounts, approveTransaction and signTransaction). This way, your users can confirm your dapp's transactions directly from their Ledger Nano S!</p>

<h1>Requirements</h1>

<p>In order for your dapp to play nicely with the LedgerWallet over U2F, it will need to be served over https. In addition to this, your browser must support U2F. Firefox users can use this</p>

<p>. If on chrome or opera, LedgerWalletProvider will automatically polyfill U2F support for you.</p>

<h1>Installation</h1>

<code>npm install ledger-wallet-provider --save</code>

<h1>Usage</h1>

<p>In order to have a working provider you can pass to your web3, you will need these additional dependencies installed:</p>

<code>npm install web3-provider-engine --save</code>

<code>npm install web3 --save</code>

<p>In your project, add the following:</p>

<code>var Web3 = require('web3');

var ProviderEngine = require('web3-provider-engine');

var RpcSubprovider = require('web3-provider-engine/subproviders/rpc');

var LedgerWalletSubproviderFactory = require('ledger-wallet-provider').default;

var engine = new ProviderEngine();

var web3 = new Web3(engine);

var ledgerWalletSubProvider = async LedgerWalletSubproviderFactory();

engine.addProvider(ledgerWalletSubProvider);

engine.addProvider(new RpcSubprovider({rpcUrl: '/api'})); // you need RPC endpoint

engine.start();

web3.eth.getAccounts(console.log);</code>

<p>To change derivation path that will be used to derive private/public keys on your nano, modify snippet above as follows</p>

<code>var derivation_path = "44'/60'/103'/0'";

var ledgerWalletSubProvider = async LedgerWalletSubproviderFactory(derivation_path);</code>

<p>All paths must start with</p>

<code>44'/60'</code>

<p>or</p>

<code>44'/61'</code>

<p>.</p>

<strong>Note:</strong>

<p>In order to send requests to the Ledger wallet, the user must have done the following:</p>

<li>Plugged-in their Ledger Wallet Nano S</li>

<li>Input their 4 digit pin</li>

<li>Navigated to the Ethereum app on their device</li>

<li>Enabled 'browser' support from the Ethereum app settings</li>

<p>It is your responsibility to show the user a friendly message, instructing them to do so. In order to detect when they have completed these steps, you can poll</p>

<code>web3.eth.getAccounts</code>

<p>which will return</p>

<code>undefined</code>

<p>until the Ledger Wallet is accessible.</p>

<p>If you would like to detect whether or not a user's browser supports U2F, you can call the</p>

<code>isSupported</code>

<p>convenience method on the</p>

<code>ledgerWalletSubProvider</code>

<p>:</p>

<code>var LedgerWalletSubproviderFactory = require('ledger-wallet-provider').default;

var ledgerWalletSubProvider = LedgerWalletSubproviderFactory();

ledgerWalletSubProvider.isSupported()

.then(function(isSupported) {

console.log(isSupported ? 'Yes' : 'No');

});</code>

<p>This might be helpful if you want to conditionally show Ledger Nano S support to users who could actually take advantage of it.</p>

<h1>Development</h1>

<h2>Running tests</h2>

<p>Currently we provide only kind of end to end tests. As we are testing integration with physical device it has to be manual process.

There are following steps:</p>

<h3>Obtain dependencies</h3>

<p>Run</p>

<code>yarn</code>

<p>command.</p>

<h3>Prepare</h3>

<code>config.js</code>

<p>Copy</p>

<code>config.js.example</code>

<p>to</p>

<code>config.js</code>

<p>and edit it setting up your Nano's public keys. You can obtain them using</p>

<p>.</p>

<h3>Run ganche-cli (former testrpc)</h3>

<p>Run</p>

<code>yarn ganache</code>

<p>command.</p>

<h3>Transfer test ether to Nano accounts that will be used in tests</h3>

<p>Run</p>

<code>yarn test-e2e-setup</code>

<p>command.</p>

<h3>Run tests using node</h3>

<p>Change Nano's settings - disable browser support.</p>

<p>Run</p>

<code>yarn test-e2e-node</code>

<p>command.</p>

<h3>Run tests in browser</h3>

<p>Change Nano's settings - enable browser support.</p>

<p>Run</p>

<code>yarn test-e2e-web</code>

<p>command

Browser should open on url</p>

<code>https://localhost:8080</code>

<p>. Open dev console (</p>

<code>F12</code>

<p>) and check console for errors.</p>

<h2>About</h2>

<p>Ledger Nano S wallet provider for the Web3 ProviderEngine</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>2</strong>

<h3>Watchers</h3>

<strong>4</strong>

<h3>Forks</h3>

<strong>43</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland/editor-legacy

# URL: https://github.com/decentraland/editor-legacy

<title>GitHub - decentraland/editor-legacy: ð Collaborative real-time edition of parcel scenes, with IPFS uploading. Based on aframe-inspector</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>ð Collaborative real-time edition of parcel scenes, with IPFS uploading. Based on aframe-inspector</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/editor-legacy</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>27</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>852</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Decentraland Parcel Editor</h1>

<p>Edit a scene in real time with other users.</p>

<li>WebRTC Connections are created between users to sync any changes on the same scene</li>

<li>Audio and text chat is available for all concurrent users</li>

<li>The save button in the top-left corner uploads the scene to IPFS to continue working on it later</li>

<p>Next steps:</p>

<li>Uploading a parcel definition to the testnet</li>

<li>contract</li>

<p>This is based on A-Frame's visual inspector tool for scenes. To preview the scene in first person, press</p>

<code><ctrl> + <alt> + i</code>

<p>. Make sure to check out A-Frame's</p>

<h2>Local Development</h2>

<pre>git clone git@github.com:decentraland/editor.git</pre>

<pre>editor

git submodule init

git submodule update</pre>

<p>Create file named</p>

<code>docker-compose.override.yaml</code>

<p>, copy and paste this gist of code into it and save (we do this to override environment variables):</p>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:

-</pre>

<pre>docker-compose build

docker-compose up

npm install

npm run build</pre>

<p>Then load the server on</p>

<code>https://localhost:4444/</code>

<p>.</p>

<h2>Deployment</h2>

<p>To deploy to</p>

<code>editor.decentraland.org</code>

<p>:</p>

<code>ssh ubuntu@editor.decentraland.org</code>

<code>cd editor</code>

<code>git pull</code>

<code>cd ..</code>

<code>sudo docker-compose down && sudo docker-compose build && sudo docker-compose up -d</code>

<p>Branches are auto deployed to</p>

<code>editor.decentraland.today/branch/<branchname>/index.html</code>

<h2>About</h2>

<p>ð Collaborative real-time edition of parcel scenes, with IPFS uploading. Based on aframe-inspector</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>54</strong>

<h3>Watchers</h3>

<strong>30</strong>

<h3>Forks</h3>

<strong>15</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-parcel-editor

# Change to URL: https://github.com/decentraland/stoneage-browser

# Change to URL: https://github.com/decentraland/voting

# URL: https://github.com/decentraland/voting

<title>GitHub - decentraland/voting: ð³ERC-20 Based Off-chain Voting</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>ð³ERC-20 Based Off-chain Voting</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/voting</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>9</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>65</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Voting</h1>

<h2>API description</h2>

<th>route</th>

<th>method</th>

<th>description</th>

<strong>/{subject}</strong>

<td>GET</td>

<td>Query a subject</td>

<strong>/{subject}/list</strong>

<td>GET</td>

<td>Query all current active subjects</td>

<strong>/{subject}</strong>

<td>GET</td>

<td>Query all the votes for a subject</td>

<strong>/{subject}/votes</strong>

<td>GET</td>

<td>Query all the votes for a subject</td>

<strong>/{subject}</strong>

<td>GET</td>

<td>Query all the votes for a subject</td>

<strong>/{subject}/votes</strong>

<td>POST</td>

<td>Create or update a vote</td>

<h3>Votes</h3>

<p>Sample of body payload:</p>

<code>{

'id': 'e728dfa3-974a-43f5-aaf7-b67135c70d27',

'image': 'type sample',

'title': 'no',

'description': 'some description',

'address_count': 0,

'votes_weight': 0,

'yes_weight': 0,

'abstentions_weight': 0,

'no_weight': 0,

'yes_count': 0,

'abstentions_count': 0,

'no_count': 0

}</code>

<h1>Development</h1>

<h2>Server</h2>

<h3>Database</h3>

<li>Create a database call</li>

<code>voting_schema</code>

<li>with postgres</li>

<li>Go to config/config.json, edit</li>

<code>development</code>

<li>object with your username and password</li>

<li>Install</li>

<code>sequelize-cli</code>

<li>running</li>

<code>npm install sequelize-cli -g</code>

<li>Once the server is up and running run:</li>

<code>sequelize db:seed:all</code>

<li>to create test data</li>

<h3>Up and Run the server</h3>

<code>cd server

npm install

npm run start</code>

<h2>Webapp</h2>

<h3>Development</h3>

<code>cd webapp

npm install

npm run start</code>

<h3>Build</h3>

<code>npm run build</code>

<h2>About</h2>

<p>ð³ERC-20 Based Off-chain Voting</p>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>4</strong>

<h3>Watchers</h3>

<strong>22</strong>

<h3>Forks</h3>

<strong>6</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland/provider-engine

# URL: https://github.com/decentraland/provider-engine

<title>GitHub - decentraland/provider-engine: zero client provider engine</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>zero client provider engine</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/provider-engine</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>26</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>601</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Web3 ProviderEngine</h1>

<p>Web3 ProviderEngine is a tool for composing your own</p>

<p>.</p>

<p>Status: WIP - expect breaking changes and strange behaviour</p>

<h3>Composable</h3>

<p>Built to be modular - works via a stack of 'sub-providers' which are like normal web3 providers but only handle a subset of rpc methods.</p>

<p>The subproviders can emit new rpc requests in order to handle their own;  e.g.</p>

<code>eth_call</code>

<p>may trigger</p>

<code>eth_getAccountBalance</code>

<p>,</p>

<code>eth_getCode</code>

<p>, and others.

The provider engine also handles caching of rpc request results.</p>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>...</pre>

<pre>:</pre>

<pre>...</pre>

<pre>:</pre>

<pre>...</pre>

<pre>:</pre>

<h3>Built For Zero-Clients</h3>

<p>The</p>

<p>was not designed to have one node service many clients.

However a smaller, lighter subset of the JSON RPC can be used to provide the blockchain data that an Ethereum 'zero-client' node would need to function.

We handle as many types of requests locally as possible, and just let data lookups fallback to some data source ( hosted rpc, blockchain api, etc ).

Categorically, we donât want / canât have the following types of RPC calls go to the network:</p>

<li>id mgmt + tx signing (requires private data)</li>

<li>filters (requires a stateful data api)</li>

<li>vm (expensive, hard to scale)</li>

<h3>Change Log</h3>

<h5>13.0.0</h5>

<li>txs included in blocks via</li>

<code>eth-block-tracker</code>

<li>@2.0.0</li>

<h5>12.0.0</h5>

<li>moved block polling to</li>

<code>eth-block-tracker</code>

<li>.</li>

<h5>11.0.0</h5>

<li>zero.js - replaced http subprovider with fetch provider (includes polyfill for node).</li>

<h5>10.0.0</h5>

<li>renamed HookedWalletSubprovider</li>

<code>personalRecoverSigner</code>

<li>to</li>

<code>recoverPersonalSignature</code>

<h5>9.0.0</h5>

<code>pollingShouldUnref</code>

<li>option now defaults to false</li>

<h3>Current RPC method support:</h3>

<h5>static</h5>

<li>web3_clientVersion</li>

<li>net_version</li>

<li>net_listening</li>

<li>net_peerCount</li>

<li>eth_protocolVersion</li>

<li>eth_hashrate</li>

<li>eth_mining</li>

<li>eth_syncing</li>

<h5>filters</h5>

<li>eth_newBlockFilter</li>

<li>eth_newPendingTransactionFilter</li>

<li>eth_newFilter</li>

<li>eth_uninstallFilter</li>

<li>eth_getFilterLogs</li>

<li>eth_getFilterChanges</li>

<h5>accounts manager</h5>

<li>eth_coinbase</li>

<li>eth_accounts</li>

<li>eth_sendTransaction</li>

<li>eth_sign</li>

<h5>vm</h5>

<li>eth_call</li>

<li>eth_estimateGas</li>

<h5>db source</h5>

<li>db_putString</li>

<li>db_getString</li>

<li>db_putHex</li>

<li>db_getHex</li>

<h5>compiler</h5>

<li>eth_getCompilers</li>

<li>eth_compileLLL</li>

<li>eth_compileSerpent</li>

<li>eth_compileSolidity</li>

<h5>shh gateway</h5>

<li>shh_version</li>

<li>shh_post</li>

<li>shh_newIdentity</li>

<li>shh_hasIdentity</li>

<li>shh_newGroup</li>

<li>shh_addToGroup</li>

<h5>data source ( fallback to rpc )</h5>

<li>eth_gasPrice</li>

<li>eth_blockNumber</li>

<li>eth_getBalance</li>

<li>eth_getBlockByHash</li>

<li>eth_getBlockByNumber</li>

<li>eth_getBlockTransactionCountByHash</li>

<li>eth_getBlockTransactionCountByNumber</li>

<li>eth_getCode</li>

<li>eth_getStorageAt</li>

<li>eth_getTransactionByBlockHashAndIndex</li>

<li>eth_getTransactionByBlockNumberAndIndex</li>

<li>eth_getTransactionByHash</li>

<li>eth_getTransactionCount</li>

<li>eth_getTransactionReceipt</li>

<li>eth_getUncleByBlockHashAndIndex</li>

<li>eth_getUncleByBlockNumberAndIndex</li>

<li>eth_getUncleCountByBlockHash</li>

<li>eth_getUncleCountByBlockNumber</li>

<li>eth_sendRawTransaction</li>

<li>eth_getLogs ( not used in web3.js )</li>

<h5>( not supported )</h5>

<li>eth_getWork</li>

<li>eth_submitWork</li>

<li>eth_submitHashrate ( not used in web3.js )</li>

<h2>About</h2>

<p>zero client provider engine</p>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>4</strong>

<h3>Watchers</h3>

<strong>5</strong>

<h3>Forks</h3>

<strong>364</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland/bounties

# URL: https://github.com/decentraland/bounties

<title>decentraland/bounties Â· GitHub</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<tool-tip>Additional navigation options</tool-tip>

<h3>This repository is empty.</h3>

<p>Care to check out the</p>

<p>while you wait?</p>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland/auction

# URL: https://github.com/decentraland/auction

<title>GitHub - decentraland/auction: ð Source code for Decentraland's Terraform Auction</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>ð Source code for Decentraland's Terraform Auction</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/auction</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>27</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>798</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Auction</h1>

<h1>How to run</h1>

<p>Start the docker containers</p>

<code>npm run docker:dev:build

npm run docker:dev:run</code>

<p>Setup the database (first time)</p>

<code>npm run docker:initdb</code>

<h1>Process</h1>

<h2>Initialization of state</h2>

<p>Read a dump of address => Balance</p>

<p>Read a description of parcels to be auctioned</p>

<p>Read timestamp of start</p>

<p>Store initial states in database</p>

<h2>Read state of a parcel</h2>

<li>Input: x, y</li>

<li>Output: ParcelState</li>

<h2>Upload a bid group</h2>

<p>Input: signed message</p>

<li>recover address from signed message</li>

<p>Validation of bid group</p>

<li>uuid does not exist</li>

<li>prevhash/nonce accordingly</li>

<li>timestamp > prev user's bid timestamp</li>

<p>Validation of each bid</p>

<li>store temp variable with balance</li>

<li>fetch current state for all parcels involved</li>

<li>for each bid:</li>

<li>check validity:</li>

<li>x, y in range</li>

<li>enough balance</li>

<li>parcel autcion did not end</li>

<li>bid > 1.1 * current bid</li>

<li>if invalid, create receipt of error and return</li>

<li>Create new parcelstate:</li>

<li>current amount</li>

<li>current bidgroup+bidindex</li>

<li>current address</li>

<li>auction ends</li>

<li>Update in-memory state of the parcel</li>

<li>Update database</li>

<li>update temp balance</li>

<li>AddressState: decrease balance</li>

<li>AddressState: update latest bidgroup</li>

<h2>Verification</h2>

<li>Initialization: Same as setup</li>

<li>Bulk processing of all BidGroups received</li>

<li>For each BidReceipt: fetch BidGroup, apply state change</li>

<li>Dump Final state for each parcel</li>

<h1>API</h1>

<p>AddressState fetch by address</p>

<li>/simple (without all bidgroups, to sign with current last id)</li>

<li>/full contains all BidGroups</li>

<p>ParcelState fetch by id</p>

<li>history of bids</li>

<p>ParcelState group fetch</p>

<li>input: array of (x,y) o id (hash of x,y)</li>

<p>Parcel Range query:</p>

<li>input: min x, max x, min y, max y</li>

<p>Submit BidGroup</p>

<p>Get all BidReceipts</p>

<h3>Closing notes</h3>

<p>Remember that for the auction font to work, you need to have a wallet provider like</p>

<p>installed, and that your wallet address should be present on the</p>

<code>address_states</code>

<p>table (and by extension, on the terraform app).

You can mock all of this by inserting the necessary row into that table (with an amount).</p>

<h2>About</h2>

<p>ð Source code for Decentraland's Terraform Auction</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>31</strong>

<h3>Watchers</h3>

<strong>25</strong>

<h3>Forks</h3>

<strong>11</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland/ethalarm

# URL: https://github.com/decentraland/ethalarm

<title>GitHub - decentraland/ethalarm: â° Get notifications whenever an Ethereum smart contract triggers an event.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>â° Get notifications whenever an Ethereum smart contract triggers an event.</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/ethalarm</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>109</strong>

<h2>Files</h2>

<button>View code</button>

<h1>ethalarm</h1>

<p>Get notified of events triggered by Ethereum contracts.</p>

<h2>Running</h2>

<p>Run the server using:</p>

<code>npm install

npm start</code>

<p>Now, go to</p>

<p>and the frontend should be displayed to you.</p>

<h2>TODO</h2>

<li>Add some security to</li>

<code>fetch</code>

<li>Optimize scanner so it doesn't read the whole database each time</li>

<li>Add tests</li>

<h2>API</h2>

<code>POST /alarms</code>

<p>Creates a new alarm, based on data posted through a JSON.

To activate email alerts, an email should be dispatched to the user with a unique hash that should be confirmed (see the</p>

<code>POST /emails/:email/confirmation</code>

<p>endpoint).</p>

<p>The request content should follow this</p>

<p>:</p>

<code>{

"id": "https://github.com/decentraland/eventlog#POST-Request",

"$schema": "http://json-schema.org/draft-06/schema#",

"description": "Schema for a POST request to /alarm",

"type": "object",

"required": [ "address", "abi", "events", "confirmations" ],

"properties": {

"address": {

"description": "The contract's address",

"type": "string"

},

"abi": {

"description": "The contract's ABI",

"type": "string"

},

"events": {

"description": "List of event names to watch for",

"type": "array",

"items": { "type": "string" }

},

"hook": {

"description": "The URL to query when a new event is generated",

"type": "string"

},

"email": {

"description": "Email to send a notification",

"type": "string"

},

"confirmations": {

"description": "Amount of confirmations to wait before notifying",

"type": "number"

}

}

}</code>

<p>Example request body:</p>

<code>{

"address": "0xcca95e580bbbd04851ebfb85f77fd46c9b91f11c",

"events": ["LockedBalance"],

"hook": "https://decentraland.org/",

"confirmations": 6,

"abi": "[{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"}],\"name\":\"setTargetContract\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalLocked\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_acceptingDeposits\",\"type\":\"bool\"}],\"name\":\"changeContractState\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"mana\",\"type\":\"uint256\"}],\"name\":\"lockMana\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"manaToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"landClaim\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"lockedBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"acceptingDeposits\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"payable\":false,\"type\":\"constructor\"},{\"payable\":true,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"mana\",\"type\":\"uint256\"}],\"name\":\"LockedBalance\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"target\",\"type\":\"address\"}],\"name\":\"LandClaimContractSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"LandClaimExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_acceptingDeposits\",\"type\":\"bool\"}"

}</code>

<p>The response body for this method follows a simple schema:</p>

<code>{

"id": "https://github.com/decentraland/ethalarm#POST-Response",

"$schema": "http://json-schema.org/draft-06/schema#",

"description": "Schema for a POST response of /alarm",

"type": "object",

"properties": {

"ok": {

"description": "Whether the request was successfull or not",

"type": "bool"

},

"error": {

"description": "If there was an error, a human-readable error explaining it",

"type": "string"

},

"result": {

"type": "object",

"properties": {

"id": {

"description": "An ID to identify the recently created alarm",

"type": "string"

}

}

}

}

}</code>

<code>GET /alarms/:id</code>

<p>This method should return the data stored in the database for this alarm. It could also return information about triggered alerts for those alarms.</p>

<code>DELETE /alarms/:id</code>

<p>Stop watching the alarm referenced.</p>

<code>POST /confirmations/:hash</code>

<p>Confirmation to start sending emails for the given hash.</p>

<h2>About</h2>

<p>â° Get notifications whenever an Ethereum smart contract triggers an event.</p>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>56</strong>

<h3>Watchers</h3>

<strong>28</strong>

<h3>Forks</h3>

<strong>19</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland/ethereumjs-util

# URL: https://github.com/decentraland/ethereumjs-util

<title>GitHub - decentraland/ethereumjs-util: A collection of utility functions for Ethereum</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A collection of utility functions for Ethereum</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/ethereumjs-util</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>5</strong>

<strong>26</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>379</strong>

<h2>Files</h2>

<button>View code</button>

<h1>SYNOPSIS</h1>

<p>or #ethereumjs on freenode</p>

<p>A collection of utility functions for ethereum. It can be used in node.js or can be in the browser with browserify.</p>

<h1>API</h1>

<p>Most of the string manipulation methods are provided by</p>

<h1>LICENSE</h1>

<p>MPL-2.0</p>

<h2>About</h2>

<p>A collection of utility functions for Ethereum</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>2</strong>

<h3>Watchers</h3>

<strong>4</strong>

<h3>Forks</h3>

<strong>298</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland/eth-sig-util

# URL: https://github.com/decentraland/eth-sig-util

<title>GitHub - decentraland/eth-sig-util: A small collection of functions for signing ethereum data</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A small collection of functions for signing ethereum data</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/eth-sig-util</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>3</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>33</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Eth-Sig-Util</h1>

<p>A small collection of ethereum signing functions.</p>

<p>You can find usage examples</p>

<h2>Supported Signing Methods</h2>

<p>Currently there is only one supported signing protocol. More will be added as standardized.</p>

<li>Personal Sign (</li>

<code>personal_sign</code>

<li>)</li>

<h2>Installation</h2>

<code>npm install eth-sig-util --save</code>

<h2>Methods</h2>

<h3>concatSig(v, r, s)</h3>

<p>All three arguments should be provided as buffers.</p>

<p>Returns a continuous, hex-prefixed hex value for the signature, suitable for inclusion in a JSON transaction's data field.</p>

<h3>normalize(address)</h3>

<p>Takes an address of either upper or lower case, with or without a hex prefix, and returns an all-lowercase, hex-prefixed address, suitable for submitting to an ethereum provider.</p>

<h3>personalSign (privateKeyBuffer, msgParams)</h3>

<p>msgParams should have a</p>

<code>data</code>

<p>key that is hex-encoded data to sign.</p>

<p>Returns the prefixed signature expected for calls to</p>

<code>eth.personalSign</code>

<p>.</p>

<h3>recoverPersonalSignature (msgParams)</h3>

<p>msgParams should have a</p>

<code>data</code>

<p>key that is hex-encoded data unsigned, and a</p>

<code>sig</code>

<p>key that is hex-encoded and already signed.</p>

<p>Returns a hex-encoded sender address.</p>

<h3>signTypedData (privateKeyBuffer, msgParams)</h3>

<p>Signs typed data as per</p>

<p>.</p>

<p>Data should be under</p>

<code>data</code>

<p>key of</p>

<code>msgParams</code>

<p>. The method returns prefixed signature.</p>

<h3>recoverTypedSignature ({data, sig})</h3>

<p>Return address of a signer that did</p>

<code>signTypedData</code>

<p>.</p>

<p>Expects the same data that were used for signing.</p>

<code>sig</code>

<p>is a prefixed signature.</p>

<h3>typedSignatureHash (typedData)</h3>

<p>Return hex-encoded hash of typed data params according to</p>

<p>schema.</p>

<h3>extractPublicKey (msgParams)</h3>

<p>msgParams should have a</p>

<code>data</code>

<p>key that is hex-encoded data unsigned, and a</p>

<code>sig</code>

<p>key that is hex-encoded and already signed.</p>

<p>Returns a hex-encoded public key.</p>

<h2>About</h2>

<p>A small collection of functions for signing ethereum data</p>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>1</strong>

<h3>Watchers</h3>

<strong>4</strong>

<h3>Forks</h3>

<strong>262</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland/hexutil

# URL: https://github.com/decentraland/hexutil

<title>GitHub - decentraland/hexutil: Proof of concept for arranging tile zones in an hexagonal grid.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Proof of concept for arranging tile zones in an hexagonal grid.</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/hexutil</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>5</strong>

<h2>Files</h2>

<button>View code</button>

<h1>hexutil</h1>

<p>Proof of concept for arranging tile zones in an hexagonal grid.</p>

<h2>About</h2>

<p>Proof of concept for arranging tile zones in an hexagonal grid.</p>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>2</strong>

<h3>Watchers</h3>

<strong>3</strong>

<h3>Forks</h3>

<strong>5</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/orgs/decentraland/repositories?page=15

# URL: https://github.com/orgs/decentraland/repositories?page=15

<title>Decentraland Â· GitHub</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<h2>Repositories</h2>

<p>Proposals for Community Districts for the Terraform event</p>

<p>DEPRECATED: This codebase will not be mantained anymore, and formats are going to change when we move to the Decentraland Iron Age</p>

<p>DEPRECATED: Unity editor and browser for Decentraland Bronze Age</p>

<p>Contract for the Whitelist sale for Decentraland</p>

<p>Decentraland websites</p>

<p>Node for Decentraland Stone Age</p>

<em>15</em>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland/districts

# URL: https://github.com/decentraland/districts

<title>GitHub - decentraland/districts: Proposals for Community Districts for the Terraform event</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Proposals for Community Districts for the Terraform event</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/districts</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>6</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Decentraland Terraform Districts</h1>

<p>This repository holds the proposals for community districts. Land parcels will be assigned to groups of shared interests in the Terraform event.</p>

<p>For more information about the process, see</p>

<p>.</p>

<em>District Proposal Framework</em>

<p>When submitting a district, please include:</p>

<li>Title:</li>

<strong>Name of District</strong>

<li>Description:</li>

<strong>Discuss in a paragraph the details of your Proposal</strong>

<li>Project Lead:</li>

<strong>Name and Email</strong>

<li>Team:</li>

<strong>Name / Email / Roles of each committed team member</strong>

<li>(list no more than 5 members)</li>

<li>Goal:</li>

<strong>What does this District want to accomplish (i.e. generate revenue for its owners, act as a public gathering place, just be for fun)</strong>

<li>Category:</li>

<strong>Private / Public</strong>

<li>LAND Needed:</li>

<strong>How Much LAND will be required to successfully launch this District</strong>

<li>Startup Costs:</li>

<strong>How much (in USD) will be needed to fund building the District (pay for developers / designers / marketing)</strong>

<li>How will funds be raised:</li>

<strong>Explain how startup costs will be raised to complete and launch the District</strong>

<li>How will contributors see a return value:</li>

<strong>Explain why others would want to participate in this District</strong>

<li>Attachments / Designs / Budgets:</li>

<strong>Upload any supporting files.</strong>

<p>Many District proposals may be too early on in the development process to answer all of these questions but the idea is to establish a common rubric for submitting a proposal, to get contributors to start thinking about how they intend to execute on their projects and to give potential supporters an idea of how far along in the development process each particular proposal is. This will help them make a well informed decision in choosing which project to participate in.</p>

<h2>About</h2>

<p>Proposals for Community Districts for the Terraform event</p>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>115</strong>

<h3>Watchers</h3>

<strong>51</strong>

<h3>Forks</h3>

<strong>30</strong>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-terraform-districts

# Change to URL: https://github.com/decentraland/bronzeage-node

# URL: https://github.com/decentraland/bronzeage-node

<title>GitHub - decentraland/bronzeage-node: DEPRECATED: This codebase will not be mantained anymore, and formats are going to change when we move to the Decentraland Iron Age</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>DEPRECATED: This codebase will not be mantained anymore, and formats are going to change when we move to the Decentraland Iron Age</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/bronzeage-node</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>10</strong>

<strong>1</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>3,522</strong>

<h2>Files</h2>

<button>View code</button>

<h1>DEPRECATED: This code is unmantained and the new version of Decentraland will be built using a different architecture.</h1>

<h2>About</h2>

<p>Decentraland is an open-source initiative to build a shared virtual reality

world. In Decentraland, the content of each piece of land is determined by its

owner. You can become a land owner either by having someone transfer you some

of their tiles, or by mining new land. A new tile of land is mined every 10

minutes.</p>

<h2>Components</h2>

<strong>Node</strong>

<li>: An open and trustless land ownership record and scene content distribution network.</li>

<strong>Editor</strong>

<li>: An easy to use 3D scene editor, that lets you publish scenes directly to any of your tiles.</li>

<strong>Browser</strong>

<li>: A browser for navigating the virtual world of Decentraland.</li>

<h1>Node</h1>

<p>A Bitcoin-like blockchain is used to maintain a universal record of land

ownership, and a consensus of the virtual world description.</p>

<p>In the Decentraland blockchain, transactions can transfer the ownership of a

given tile, as well as announce the hash of the scene content of the

tile. At any given time, the UTXO set has the description of the entire

virtual world. The actual content of tile is distributed in a P2P

manner, via the torrent network.</p>

<p>New blocks are mined with the same proof of work as Bitcoin, but instead of

having a coinbase transaction creating fungible coins, there's a landbase

transaction creating a single non-fungible asset: a tile at a unique,

non-modifiable position.</p>

<p>To run your own node and mine new land see</p>

<p>.</p>

<h2>Design</h2>

<p>The Decentraland node is a fork of</p>

<p>,

a Bitcoin full-node implementation in JavaScript. In what follows we describe

all the places where we depart from Bitcoin.</p>

<h3>Consensus rules</h3>

<p>Instead of having the coin value, Decentraland transaction outputs have the

tile's x and y coordinates, and the info hash of the torrent with the 3D

scene content for the tile.</p>

<p>All transactions (except for landbase transactions) have exactly one output for

each input. Each output MUST have the same x and y coordinates as the spent

output of its corresponding input. Outputs MAY change the info hash field.</p>

<p>The single output of a landbase transaction MUST claim a non-allocated tile,

adjacent (with 4-connectivity) to a previously mined tile.</p>

<h3>RPC API</h3>

<p>There are some new JSON RPC endpoints that facilitate creation and querying of land

content. We also list some useful RPC endpoints, inherited from Bitcoin.</p>

<strong>gettile(x, y)</strong>

<p>: fetches the torrent info hash of a tile's content.</p>

<strong>settile(x, y, base64-content)</strong>

<p>: publishes the content to the torrent

network using</p>

<p>and creates a

transaction updating the torrent info hash of one of your tiles.</p>

<strong>dumpblockchain(onlyControlled=false)</strong>

<p>: lists all tiles in the blockchain and

returns information about them. Be careful! It may take a long time to process.</p>

<strong>transfertile(x, y, dest)</strong>

<p>: Transfers tile at (x,y) to address</p>

<code>dest</code>

<p>. You must of

course own the tile to be able to transfer it. Returns the raw hex of the transfer transaction.

Note that the transaction will be automatically broadcasted to the network, no need to send it

manually.

Example:</p>

<code>./bin/cli --apikey=$RPC_API_KEY rpc transfertile 0 -1 TeaZxyQATonFFFLCXZMydUfGGUWwBsg9Je</code>

<strong>getaccountaddress(account)</strong>

<li>: Gets address for</li>

<code>account</code>

<li>.

To get your main decentraland address:</li>

<code>$ ./bin/cli --apikey=$RPC_API_KEY rpc getaccountaddress 0

TeaZxyQATonFFFLCXZMydUfGGUWwBsg9Je</code>

<p>For more info on how to use the command line interface, check</p>

<p>(decentraland-node is a fork of bcoin, so most functionality is the same).</p>

<h4>Listing and drawing a map of your controlled tiles:</h4>

<p>Use the following command in bash to list all your tiles.</p>

<code>./bin/cli --apikey=$RPC_API_KEY rpc dumpblockchain true | node scripts/list.js</code>

<p>Use this to render a HTML visualization of all tiles in Decentraland:</p>

<code>./bin/cli --apikey=$RPC_API_KEY rpc dumpblockchain | node scripts/plot.js</code>

<h3>Land content server</h3>

<p>After each valid new block in the main chain, the node downloads from the

torrent network the updated land content for each transaction in the block,

effectively maintaining a tile to scene index.</p>

<p>By default, the node serves a static web server at port 9301 with the latest

scene content files for each mined tile of land. The land content file for

the tile at</p>

<code>(x, y)</code>

<p>is served at</p>

<code>GET /tile/x.y.lnd</code>

<h2>Run a node</h2>

<p>There's two options for installing running a node:</p>

<p>and</p>

<p>.</p>

<h3>Run a node using Docker</h3>

<p>Make sure you have</p>

<a>Docker

installed</a>

<p>, and run (</p>

<strong>note:

you might need to prepend</strong>

<code>sudo</code>

<strong>to these commands on Linux systems</strong>

<p>):</p>

<code>pip install docker-compose

docker-compose up</code>

<h3>Run a node manually</h3>

<li>Clone the repo:</li>

<code>git clone https://github.com/decentraland/bronzeage-node.git && cd bronzeage-node</code>

<li>v7.4.0. See</li>

<li>for version management.</li>

<li>Install dependencies (</li>

<strong>Linux only</strong>

<li>):</li>

<code>apt-get update && apt-get install -y --no-install-recommends build-essential python xvfb libgtk2.0-0 libxtst-dev libxss-dev libgconf2-dev libnss3 libasound2-dev</code>

<li>Install npm modules:</li>

<code>npm install</code>

<li>Change</li>

<code>$RPC_API_KEY</code>

<li>to a custom key via</li>

<code>export</code>

<li>or by changing it in</li>

<code>bin/start</code>

<li>. You can generate a random key like this:</li>

<code>head -c 32 /dev/random | base64</code>

<li>Run the node!</li>

<li>Windows:</li>

<code>bin\start.bat</code>

<li>Linux & Mac:</li>

<code>./bin/start</code>

<p>You may use the CLI by running it with node:</p>

<code>node bin\cli [args]</code>

<p>Mining will start by default. To disable this, set</p>

<code>$START_MINER</code>

<p>to</p>

<code>'false'</code>

<p>or to</p>

<code>0</code>

<p>or edit the file</p>

<code>bin/start</code>

<p>and remove the</p>

<code>--startminer</code>

<p>argument.

7. Head over to</p>

<code>http://localhost:5000</code>

<p>(you can change the port using</p>

<code>$SERVER_PORT</code>

<p>) to see the web dashboard.</p>

<h2>How can I edit the land I own?</h2>

<p>Once you mine some land, you can use Unity to edit its content. Check out the</p>

<p>for more

information.</p>

<h2>Community</h2>

<p>Join us on</p>

<p>!</p>

<p>We're on</p>

<p>too.</p>

<h2>About</h2>

<p>DEPRECATED: This codebase will not be mantained anymore, and formats are going to change when we move to the Decentraland Iron Age</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>105</strong>

<h3>Watchers</h3>

<strong>44</strong>

<h3>Forks</h3>

<strong>29</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/deprecated-this-code-is-unmantained-and-the-new-version-of-decentraland-will-be-built-using-a-different-architecture

# Change to URL: https://github.com/decentraland/bronzeage-editor

# URL: https://github.com/decentraland/bronzeage-editor

<title>GitHub - decentraland/bronzeage-editor: DEPRECATED: Unity editor and browser for Decentraland Bronze Age</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>DEPRECATED: Unity editor and browser for Decentraland Bronze Age</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/bronzeage-editor</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>4</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>77</strong>

<h2>Files</h2>

<button>View code</button>

<h1>DEPRECATED: This code is unmantained and the new version of Decentraland will be built using a different architecture.</h1>

<h2>About</h2>

<p>Decentraland is an open-source initiative to build a shared virtual reality

world. In Decentraland, the content of each piece of land is determined by its

owner. You can become a land owner either by having someone transfer you some

of their tiles, or by mining new land. A new tile of land is mined every 10

minutes.</p>

<h2>Components</h2>

<strong>Node</strong>

<li>: An open and trustless land ownership record and scene content distribution network.</li>

<strong>Editor</strong>

<li>: An easy to use 3D scene editor, that lets you publish scenes directly to any of your tiles.</li>

<strong>Browser</strong>

<li>: A browser for navigating the virtual world of Decentraland.</li>

<h2>Unity Project</h2>

<p>This</p>

<p>project has two scenes, one that lets you

explore the virtual world, used as the base for compiling the browser, and

another of an empty land tile, that you can edit and publish to a piece of

land you own.</p>

<h1>Browser</h1>

<p>The browser fetches and renders the user's immediate surroundings as she moves

through the Decentraland virtual world. The 3D scene content is provided by a

node's</p>

<a>land content

server</a>

<p>.</p>

<p>The browser is built using</p>

<p>, targeting WebGL, so

it can run on every modern web browser. There's still no communication between

browsers, so players will explore the world alone. Multiplayer support will be

added on the next major release (Iron Age). We'd love to hear your comments on

how to implement it!</p>

<h1>Editor</h1>

<p>The world editor is a Unity3D plugin that connects to your local Decentraland

node and can publish changes you make to your land.</p>

<h3>How to edit your tile's content</h3>

<p>To edit the Decentraland world you first need to own some land (one or more tiles). Please</p>

<p>with mining activated and wait until it mines some tiles. Take note on the coordinates of the tiles you own, as you will need them later.</p>

<p>While the miner is running, you'll want to</p>

<p>, clone this repo and open the project with Unity3D.</p>

<p>In Unity, open the</p>

<em>World Editor</em>

<p>Scene (found in the Scenes folder) and include the Decentraland Editor (</p>

<code>Window -> Decentraland Editor</code>

<p>) panel somewhere in your workspace. Make sure to fill your node address and port in the panel, in order to publish changes directly from the editor.</p>

<p>Build your land by placing all content under</p>

<code>My Tile</code>

<p>game objectâs hierarchy. If you change the root object's name from</p>

<code>My Tile</code>

<p>to anything else, other users will see it when they walk through your land. Once you are ready, select your tile in the object hierarchy, fill the coordinates of a tile you mined in the</p>

<code>Decentraland Editor</code>

<p>panel, and click on</p>

<code>Publish Tile</code>

<p>. This will serialize the tile content and push it to the node. The node will craft, sign and broadcast a transaction, and seed the content through the bittorrent protocol.</p>

<p>There are some limitations on what you can do on your tile:</p>

<li>Only primitive meshs: Cube, Plane, Sphere, Cylinder and Capsule.</li>

<li>Only Colors and 2D Textures (</li>

<li>).</li>

<li>Hard limit of 1024 game objects inside the tile.</li>

<li>Canât place objects beyond the bounds of the tile.</li>

<li>Not yet supported: Scripts, Animations, Shaders, etc.</li>

<p>Have fun!</p>

<h1>Feedback and support</h1>

<p>For get help and give feedback</p>

<p>and talk to the development team. You can also report bugs by</p>

<p>.</p>

<h1>Music Credits</h1>

<p>Music by</p>

<p>, an amazing Argentine band, who generously allowed us to use their music for this project.</p>

<h2>About</h2>

<p>DEPRECATED: Unity editor and browser for Decentraland Bronze Age</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>57</strong>

<h3>Watchers</h3>

<strong>15</strong>

<h3>Forks</h3>

<strong>14</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland/decentraland-node

# URL: https://github.com/decentraland/decentraland-node

<title>GitHub - decentraland/bronzeage-node: DEPRECATED: This codebase will not be mantained anymore, and formats are going to change when we move to the Decentraland Iron Age</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>DEPRECATED: This codebase will not be mantained anymore, and formats are going to change when we move to the Decentraland Iron Age</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/bronzeage-node</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>10</strong>

<strong>1</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>3,522</strong>

<h2>Files</h2>

<button>View code</button>

<h1>DEPRECATED: This code is unmantained and the new version of Decentraland will be built using a different architecture.</h1>

<h2>About</h2>

<p>Decentraland is an open-source initiative to build a shared virtual reality

world. In Decentraland, the content of each piece of land is determined by its

owner. You can become a land owner either by having someone transfer you some

of their tiles, or by mining new land. A new tile of land is mined every 10

minutes.</p>

<h2>Components</h2>

<strong>Node</strong>

<li>: An open and trustless land ownership record and scene content distribution network.</li>

<strong>Editor</strong>

<li>: An easy to use 3D scene editor, that lets you publish scenes directly to any of your tiles.</li>

<strong>Browser</strong>

<li>: A browser for navigating the virtual world of Decentraland.</li>

<h1>Node</h1>

<p>A Bitcoin-like blockchain is used to maintain a universal record of land

ownership, and a consensus of the virtual world description.</p>

<p>In the Decentraland blockchain, transactions can transfer the ownership of a

given tile, as well as announce the hash of the scene content of the

tile. At any given time, the UTXO set has the description of the entire

virtual world. The actual content of tile is distributed in a P2P

manner, via the torrent network.</p>

<p>New blocks are mined with the same proof of work as Bitcoin, but instead of

having a coinbase transaction creating fungible coins, there's a landbase

transaction creating a single non-fungible asset: a tile at a unique,

non-modifiable position.</p>

<p>To run your own node and mine new land see</p>

<p>.</p>

<h2>Design</h2>

<p>The Decentraland node is a fork of</p>

<p>,

a Bitcoin full-node implementation in JavaScript. In what follows we describe

all the places where we depart from Bitcoin.</p>

<h3>Consensus rules</h3>

<p>Instead of having the coin value, Decentraland transaction outputs have the

tile's x and y coordinates, and the info hash of the torrent with the 3D

scene content for the tile.</p>

<p>All transactions (except for landbase transactions) have exactly one output for

each input. Each output MUST have the same x and y coordinates as the spent

output of its corresponding input. Outputs MAY change the info hash field.</p>

<p>The single output of a landbase transaction MUST claim a non-allocated tile,

adjacent (with 4-connectivity) to a previously mined tile.</p>

<h3>RPC API</h3>

<p>There are some new JSON RPC endpoints that facilitate creation and querying of land

content. We also list some useful RPC endpoints, inherited from Bitcoin.</p>

<strong>gettile(x, y)</strong>

<p>: fetches the torrent info hash of a tile's content.</p>

<strong>settile(x, y, base64-content)</strong>

<p>: publishes the content to the torrent

network using</p>

<p>and creates a

transaction updating the torrent info hash of one of your tiles.</p>

<strong>dumpblockchain(onlyControlled=false)</strong>

<p>: lists all tiles in the blockchain and

returns information about them. Be careful! It may take a long time to process.</p>

<strong>transfertile(x, y, dest)</strong>

<p>: Transfers tile at (x,y) to address</p>

<code>dest</code>

<p>. You must of

course own the tile to be able to transfer it. Returns the raw hex of the transfer transaction.

Note that the transaction will be automatically broadcasted to the network, no need to send it

manually.

Example:</p>

<code>./bin/cli --apikey=$RPC_API_KEY rpc transfertile 0 -1 TeaZxyQATonFFFLCXZMydUfGGUWwBsg9Je</code>

<strong>getaccountaddress(account)</strong>

<li>: Gets address for</li>

<code>account</code>

<li>.

To get your main decentraland address:</li>

<code>$ ./bin/cli --apikey=$RPC_API_KEY rpc getaccountaddress 0

TeaZxyQATonFFFLCXZMydUfGGUWwBsg9Je</code>

<p>For more info on how to use the command line interface, check</p>

<p>(decentraland-node is a fork of bcoin, so most functionality is the same).</p>

<h4>Listing and drawing a map of your controlled tiles:</h4>

<p>Use the following command in bash to list all your tiles.</p>

<code>./bin/cli --apikey=$RPC_API_KEY rpc dumpblockchain true | node scripts/list.js</code>

<p>Use this to render a HTML visualization of all tiles in Decentraland:</p>

<code>./bin/cli --apikey=$RPC_API_KEY rpc dumpblockchain | node scripts/plot.js</code>

<h3>Land content server</h3>

<p>After each valid new block in the main chain, the node downloads from the

torrent network the updated land content for each transaction in the block,

effectively maintaining a tile to scene index.</p>

<p>By default, the node serves a static web server at port 9301 with the latest

scene content files for each mined tile of land. The land content file for

the tile at</p>

<code>(x, y)</code>

<p>is served at</p>

<code>GET /tile/x.y.lnd</code>

<h2>Run a node</h2>

<p>There's two options for installing running a node:</p>

<p>and</p>

<p>.</p>

<h3>Run a node using Docker</h3>

<p>Make sure you have</p>

<a>Docker

installed</a>

<p>, and run (</p>

<strong>note:

you might need to prepend</strong>

<code>sudo</code>

<strong>to these commands on Linux systems</strong>

<p>):</p>

<code>pip install docker-compose

docker-compose up</code>

<h3>Run a node manually</h3>

<li>Clone the repo:</li>

<code>git clone https://github.com/decentraland/bronzeage-node.git && cd bronzeage-node</code>

<li>v7.4.0. See</li>

<li>for version management.</li>

<li>Install dependencies (</li>

<strong>Linux only</strong>

<li>):</li>

<code>apt-get update && apt-get install -y --no-install-recommends build-essential python xvfb libgtk2.0-0 libxtst-dev libxss-dev libgconf2-dev libnss3 libasound2-dev</code>

<li>Install npm modules:</li>

<code>npm install</code>

<li>Change</li>

<code>$RPC_API_KEY</code>

<li>to a custom key via</li>

<code>export</code>

<li>or by changing it in</li>

<code>bin/start</code>

<li>. You can generate a random key like this:</li>

<code>head -c 32 /dev/random | base64</code>

<li>Run the node!</li>

<li>Windows:</li>

<code>bin\start.bat</code>

<li>Linux & Mac:</li>

<code>./bin/start</code>

<p>You may use the CLI by running it with node:</p>

<code>node bin\cli [args]</code>

<p>Mining will start by default. To disable this, set</p>

<code>$START_MINER</code>

<p>to</p>

<code>'false'</code>

<p>or to</p>

<code>0</code>

<p>or edit the file</p>

<code>bin/start</code>

<p>and remove the</p>

<code>--startminer</code>

<p>argument.

7. Head over to</p>

<code>http://localhost:5000</code>

<p>(you can change the port using</p>

<code>$SERVER_PORT</code>

<p>) to see the web dashboard.</p>

<h2>How can I edit the land I own?</h2>

<p>Once you mine some land, you can use Unity to edit its content. Check out the</p>

<p>for more

information.</p>

<h2>Community</h2>

<p>Join us on</p>

<p>!</p>

<p>We're on</p>

<p>too.</p>

<h2>About</h2>

<p>DEPRECATED: This codebase will not be mantained anymore, and formats are going to change when we move to the Decentraland Iron Age</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>105</strong>

<h3>Watchers</h3>

<strong>44</strong>

<h3>Forks</h3>

<strong>29</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland/whitelist-sale

# URL: https://github.com/decentraland/whitelist-sale

<title>GitHub - decentraland/whitelist-sale: Contract for the Whitelist sale for Decentraland</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Contract for the Whitelist sale for Decentraland</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/whitelist-sale</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>5</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>49</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Decentraland Whitelist Smart Contract</h1>

<p>Contract for the Whitelist sale for Decentraland.</p>

<h2>Bug Bounty</h2>

<p>A professional audit is being performed by independent contractors, but in the meantime, we invite you to review the code and provide feedback. The scope of the program is the logic of the WhitelistSale.sol smart contract.</p>

<p>The bug bounty program runs until we deploy the smart contract on Thursday 14th, 22:00 GMT.</p>

<h3>Compensation</h3>

<p>Our team will assess each submission individually and assign a level of severity according to its likelihood and impact to the token sale. Compensation will depend on the severity of the issue found.</p>

<li>Low: Up to $1,500 USD</li>

<li>Medium: Up to $3,000 USD</li>

<li>High: Up to $6,000 USD</li>

<li>Critical: Up to $18,000 USD</li>

<p>Note that bounties will be paid in ETH after the sale has ended, and that Decentraland team members and paid auditors are not eligible for bounty compensation.</p>

<p>Please report bug bounty submissions to</p>

<p>.</p>

<h2>License</h2>

<p>This code is distributed under the</p>

<p>.</p>

<h2>About</h2>

<p>Contract for the Whitelist sale for Decentraland</p>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>4</strong>

<h3>Watchers</h3>

<strong>7</strong>

<h3>Forks</h3>

<strong>9</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-whitelist-smart-contract

# Change to URL: https://github.com/decentraland/web

# URL: https://github.com/decentraland/web

<title>GitHub - decentraland/web: Decentraland websites</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Decentraland websites</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/web</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>2</strong>

<strong>1</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<button>â¦</button>

<code>a15790f</code>

<h2>Git stats</h2>

<strong>240</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Decentraland websites</h1>

<li>World Viewer:</li>

<li>Builder:</li>

<h2>About</h2>

<p>Decentraland websites</p>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>6</strong>

<h3>Watchers</h3>

<strong>28</strong>

<h3>Forks</h3>

<strong>14</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-websites

# Change to URL: https://github.com/decentraland/stoneage-node

# URL: https://github.com/decentraland/stoneage-node

<title>GitHub - decentraland/stoneage-node: Node for Decentraland Stone Age</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Node for Decentraland Stone Age</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland/stoneage-node</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>4</strong>

<strong>2</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>67</strong>

<h2>Files</h2>

<button>View code</button>

<h1>decentraland-core</h1>

<p>Blockchain-based decentralized land implementation in JavaScript</p>

<p>This is a clone of bitcore's codebase, with the following changes:</p>

<li>Removed Script-related classes</li>

<li>Removed URI, Unit, and other bitcoin-only utils</li>

<li>Changed PublicKey to support only compressed keys</li>

<li>Removed Transaction Input, Output and related classes</li>

<li>Changed Transaction signing logic (using simpler scheme)</li>

<li>Transaction now has owner, previous transaction, color, position, version, signature</li>

<li>Miner class added</li>

<li>Blockchain class added</li>

<h2>About</h2>

<p>Node for Decentraland Stone Age</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>22</strong>

<h3>Watchers</h3>

<strong>32</strong>

<h3>Forks</h3>

<strong>12</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-core

# Change to URL: https://github.com/orgs/decentraland/repositories?type=all

# URL: https://github.com/orgs/decentraland/repositories?type=all

<title>Decentraland Â· GitHub</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<h2>Repositories</h2>

<p>Unity project for converting GLTFs to AssetBundles</p>

<p>Decentraland Auth UI</p>

<p>Code for the server dedicated to auth stuff</p>

<p>A client to query and perform changes on Decentraland's catalyst servers</p>

<p>Notification producer</p>

<p>API definition for the Catalyst Server implementation</p>

<p>ð§ Content server for Decentraland</p>

<p>Service to generate and profile images of avatars</p>

<p>Opinionated All-in-one Web Framework</p>

<p>ð¦ Decentraland UI</p>

<p>ð Build scenes for Decentraland</p>

<p>ð Collection of 3D models for Decentraland avatars</p>

<em>1</em>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/orgs/decentraland/repositories?page=2&type=all

# URL: https://github.com/orgs/decentraland/repositories?page=2&type=all

<title>Decentraland Â· GitHub</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<h2>Repositories</h2>

<p>ð¢ Governance platform of the Decentraland DAO</p>

<p>ðï¸ Decentraland's NFT Marketplace</p>

<p>Toolchain to build JS & TS scenes for Decentraland</p>

<p>ð  Common modules for dApps</p>

<p>Connect your Ethereum wallet from different providers</p>

<p>Unity implementation of Decentraland Client</p>

<p>Architecture Decisions Records</p>

<p>Profile dApp</p>

<p>ð Transfer and bridge MANA across networks</p>

<p>Open source video conferencing app built on LiveKit Components, LiveKit Cloud, and Next.js.</p>

<p>ð Ethereum connector for Decentraland scenes and applications</p>

<p>A package to manage configurations for different environment in frontends</p>

<p>Common schemas for Decentraland</p>

<p>Builder app backend</p>

<p>Public ops command line to interact with Decentraland nodes</p>

<p>Templates for the Builder</p>

<p>Collection of command line tools to do massive Airdrops of Decentraland Wearables on Matic</p>

<p>Tap for importing OpenSea events</p>

<p>Decentraland ESlint config</p>

<p>SDK 7 Utils Library</p>

<p>Quests Client for SDK7</p>

<p>VSCode extension for Decentraland SDK7 projects</p>

<em>2</em>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/orgs/decentraland/repositories?page=1&type=all

# URL: https://github.com/orgs/decentraland/repositories?page=1&type=all

<title>Decentraland Â· GitHub</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<h2>Repositories</h2>

<p>Unity project for converting GLTFs to AssetBundles</p>

<p>Decentraland Auth UI</p>

<p>Code for the server dedicated to auth stuff</p>

<p>A client to query and perform changes on Decentraland's catalyst servers</p>

<p>Notification producer</p>

<p>API definition for the Catalyst Server implementation</p>

<p>ð§ Content server for Decentraland</p>

<p>Service to generate and profile images of avatars</p>

<p>Opinionated All-in-one Web Framework</p>

<p>ð¦ Decentraland UI</p>

<p>ð Build scenes for Decentraland</p>

<p>ð Collection of 3D models for Decentraland avatars</p>

<em>1</em>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/orgs/decentraland/repositories?page=3&type=all

# URL: https://github.com/orgs/decentraland/repositories?page=3&type=all

<title>Decentraland Â· GitHub</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<h2>Repositories</h2>

<p>Service that acts as a Third Party Integrations resolver exposing only the healthy ones.</p>

<p>A multi framework middleware to authenticate request signed with @decentraland/SignedFetch</p>

<p>Platform's Http Server Common utils</p>

<p>Storage engines for catalyst projects</p>

<p>Signatures server implementation</p>

<p>Scene entities manifest builder for the LODs solution for Decentraland's new Explorer</p>

<p>Builder asset packs</p>

<p>Quests Desginer React Component</p>

<p>A collection of handy functions for crypto operations in Decentraland scenes</p>

<p>This website hosts a dApp used to upload and see what others are organizing inside the Decentraland virtual world.</p>

<p>An implementation of StreamingFast's substreams for dcl contracts</p>

<p>A multi framework middleware to authenticate request signed with @decentraland/SignedFetch</p>

<p>Everything necessary for catalyst owners to deploy their own node</p>

<p>Scene runtime for JS environments</p>

<p>Adaption Layer between from SDK6 to SDK7</p>

<p>This is the repository for the website served in play.decentraland.org</p>

<p>Hashing utilities for Decentraland</p>

<em>3</em>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/orgs/decentraland/repositories?page=4&type=all

# URL: https://github.com/orgs/decentraland/repositories?page=4&type=all

<title>Decentraland Â· GitHub</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<h2>Repositories</h2>

<p>DCL auth crypto lib</p>

<p>ECS 7 Template</p>

<p>Render an interactive preview of a wearable</p>

<p>Services for Decentraland In World camera feature</p>

<p>A consumer of the dapps substreams output</p>

<p>Create transactions to be relayed</p>

<p>ðº A server for the atlas map</p>

<p>Verified Partners Registry</p>

<p>Quests Manager dApp</p>

<p>A four-day celebration of music, culture and creativity in the virtual social world of Decentraland, the Metaverse Festival is a grand collision of light, sound and portable toilets.</p>

<p>ð Decentraland's vesting dashboard</p>

<p>PM repository for SDK</p>

<p>Build Unity projects for different platforms</p>

<p>NFT Server</p>

<p>Decentraland's Quests System</p>

<p>Library to collect and expose Prometheus metrics from an HTTP Rust server.</p>

<p>A server that handles the substreams reorgs</p>

<p>ð Decentraland contract addresses</p>

<p>DCL status page</p>

<em>4</em>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/orgs/decentraland/repositories?page=5&type=all

# URL: https://github.com/orgs/decentraland/repositories?page=5&type=all

<title>Decentraland Â· GitHub</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<h2>Repositories</h2>

<p>Create simple client/server RPCs over a transport</p>

<p>Github Action to return a Unity pro license.</p>

<p>Exports data from Decentraland's subgraphs at</p>

<p>Shared knowledge base of incidents Root Cause Analysis</p>

<p>Tool for benchmarking RPC Servers of the Decentraland RPC implementation</p>

<p>This is a copy of</p>

<p>to avoid LTS fork quota</p>

<p>Favorites server implementation</p>

<p>Pick Up Example Quest Scene</p>

<p>Proxy server that relays transactions to Biconomy, using some restrictions</p>

<p>ð½ Decentraland Collections Graph</p>

<p>Sends pointer deploymens via Server Sent Events</p>

<p>Decentraland RPC - Rust implementation</p>

<p>ð¡ Interact with Decentraland's users, send private messages and add friends.</p>

<p>Repository to host the reference implementation made in Babylon.js by the Protocol Squad</p>

<p>ð» Decentraland command-line interface</p>

<em>5</em>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/orgs/decentraland/repositories?page=6&type=all

# URL: https://github.com/orgs/decentraland/repositories?page=6&type=all

<title>Decentraland Â· GitHub</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<h2>Repositories</h2>

<p>Safe FFmpeg wrapper.</p>

<p>VSCode extension for Decentraland SDK6</p>

<p>SDK Playground</p>

<p>Queries to build the Scenes Ranking</p>

<p>The Graph indexing for the Rentals contract</p>

<p>Official open source React components and examples for building with LiveKit.</p>

<p>Portable Experience Sample</p>

<p>Open source video conferencing app built on LiveKit Components, LiveKit Cloud, and Next.js.</p>

<p>A</p>

<p>graph detaling the ownership and permissions of Land</p>

<p>Catalyst, POIs, Ban Names list</p>

<p>Skyboxes for Explorer</p>

<p>UI to deploy vesting contracts using a minimal proxy</p>

<p>An idiomatic protobuf generator for TypeScript</p>

<p>Efficient glTF 3D import / export package for Unity</p>

<p>About Singer compatible Tap to get multiple token price data from Coingecko. Designed to use with Meltano.</p>

<p>Import crashbot data</p>

<p>Avatars smart contract</p>

<p>Scripts for deploying testnet contracts.</p>

<em>6</em>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/orgs/decentraland/repositories?page=7&type=all

# URL: https://github.com/orgs/decentraland/repositories?page=7&type=all

<title>Decentraland Â· GitHub</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<h2>Repositories</h2>

<p>Reference Client Implementation of the Social Service</p>

<p>Hugo documentation theme for Decentraland</p>

<p>Mana balances subgraph</p>

<p>UniVRM is a gltf-based VRM format implementation for Unity. English is here</p>

<p>. æ¥æ¬èª ã¯ãã¡ã</p>

<p>Third Party API resolver example in Express</p>

<p>decentraland-crypto implementation in Rust</p>

<p>Decentraland ecs math</p>

<p>A library for adding scripting to .NET applications. Supports V8 (Windows, Linux, macOS) and JScript/VBScript (Windows).</p>

<p>ð Decentraland Marketplace Contracts</p>

<p>Ask me anything sessions</p>

<p>Authenticate WebSocket connections using the Decentraland's Authchain</p>

<p>Backend for frontend for Explorer</p>

<p>Common tools and types to share between catalyst servers and clients</p>

<p>Public interface exposed by Kernel</p>

<p>Generate a merkle tree of items by using its content hash</p>

<p>DCL dApps ESLint & Prettier Config</p>

<p>Javascript/Typescript bindings for QuickJS, a modern Javascript interpreter written in C by Fabrice Bellard.</p>

<p>FFmpeg bindings for Rust.</p>

<p>Board for Engagement & Discovery workstream</p>

<p>ð ð­ Set of Wearables NFT contracts</p>

<p>Example of HTTP Server in Rust using Warp and RpcServer using dcl-rpc</p>

<em>7</em>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/orgs/decentraland/repositories?page=8&type=all

# URL: https://github.com/orgs/decentraland/repositories?page=8&type=all

<title>Decentraland Â· GitHub</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<h2>Repositories</h2>

<p>ðº Tile Map</p>

<p>It brings Javascript runtime capability to Unity3D by integrating QuickJS.</p>

<p>Smart Contract Audit Reports</p>

<p>Gif decoding utility for Unity engine</p>

<p>Metaverse Fashion Week Landingpage</p>

<p>A load testing tool to determine how many users and messages can a matrix instance handle</p>

<p>ð¦¾ PM repository for dServices</p>

<p>Utility to schedule shows as well as synchronize actions with a show</p>

<p>NPC tools for conversational NPCs</p>

<p>IME for Unity WebGL</p>

<p>Reusable contracts</p>

<p>ð Components of a DCL world</p>

<p>ð¨ IPFS Alternative HTTP Interface</p>

<p>API definition for the Social Server implementation</p>

<p>websocket crdt sync server</p>

<p>A server that can generate a image of the face or the full body of an avatar</p>

<p>Synapse authentication server for testing</p>

<p>Aragon apps for Decentraland DAO</p>

<p>Set of common functionality accross Decentraland projects servers</p>

<p>Third-party Marketplace Adapter Smart Contract</p>

<p>NSubstitute is designed as a friendly substitute for .NET mocking libraries.</p>

<p>ð£ Script to help deploy Decentraland's road parcels</p>

<p>Kernel is the glue code between the OS, comms and the Renderer of Decentraland</p>

<p>This repository aims to have the main Decentraland Architecture</p>

<em>8</em>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/orgs/decentraland/repositories?page=9&type=all

# URL: https://github.com/orgs/decentraland/repositories?page=9&type=all

<title>Decentraland Â· GitHub</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<h2>Repositories</h2>

<p>Helper functions to create sprites using Decentraland's SDK</p>

<p>Decentraland ecs types.</p>

<p>RPC Services Generation for Rust</p>

<p>Desktop client for Decentraland, coming soon</p>

<p>Code generation tool for gRPC-like using decentraland/rpc</p>

<p>Sagas to handle voice webRTC SFU</p>

<p>ð° Faucet for all things related to Decentraland</p>

<p>ð What is Decentraland?</p>

<p>Advanced DXTc texture compression and transcoding library</p>

<p>â° Contract for LAND</p>

<p>Third Party Registry Subgraph</p>

<p>ð JavaScript client for the auth-service</p>

<p>ð  Experiment Tracking Tool (A/B Testing)</p>

<p>LocalStorage engine for redux-persistence</p>

<p>ð Persistence layer for redux with flexible backends</p>

<p>DEPRECATED - Ethereum common helpers for Decentraland</p>

<p>â Programmatically write DCL scenes</p>

<p>Review of community proposals for Decentraland's art and applications</p>

<p>ð  Set of common functionality across Decentraland projects.</p>

<p>ðï¸ Decentraland's LAND Marketplace</p>

<em>9</em>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/orgs/decentraland/repositories?page=10&type=all

# Change to URL: https://github.com/orgs/decentraland/repositories?page=11&type=all

# URL: https://github.com/orgs/decentraland/repositories?page=11&type=all

<title>Decentraland Â· GitHub</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<h2>Repositories</h2>

<p>ð¡Smart item examples</p>

<p>Smart Item Sample for SDK Cli</p>

<p>Decentraland ECS</p>

<p>Library to group peers in islands according to their position, to decide connection groups</p>

<p>Generate avatar snapshots in a lambda</p>

<p>Main entry point for user's feedback</p>

<p>Lever tap built with the Meltano Tap SDK for Singer Taps.</p>

<p>ð Distinguishable Assets Registry (ERC 721)</p>

<p>SDK Template library</p>

<p>Contracts for the LAND auction</p>

<p>Pass through contract</p>

<p>ð§ª A set of utility contracts used for the Decentraland ecosystem</p>

<p>Stream-based library for parsing and manipulating subtitle files</p>

<p>Some scripts to check the state of catalysts servers</p>

<em>11</em>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/orgs/decentraland/repositories?page=12&type=all

# URL: https://github.com/orgs/decentraland/repositories?page=12&type=all

<title>Decentraland Â· GitHub</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<h2>Repositories</h2>

<p>test scene for CRDT protocol</p>

<p>ð² Builder asset packs</p>

<p>Portable Operating System Interface for Decentraland Scenes</p>

<p>nft_bazl gallery</p>

<p>just a simple dummy token</p>

<p>socket pool components for well-know-components</p>

<p>React app for testing WebRTC Selective Forwarding Unit</p>

<p>ion javascript sdk</p>

<p>Pure Go WebRTC SFU</p>

<p>ð Explore Decentraland from a web browser</p>

<p>ð WebRTC Signalling Server that uses Server-Sent Events</p>

<p>A Singer.io Target for Snowflake</p>

<p>Decentraland Library for creating quests ECS components to show in UI</p>

<p>issues, features requests and discussions related to sdk.</p>

<p>Exploration of new RPC mechanisms</p>

<p>This is the backlog for big scale architecture decisions regarding the Explorer product and its sub-products</p>

<p>Allows multiple parties to agree on transactions before execution.</p>

<p>Resharper format pre-commit hook</p>

<em>12</em>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/orgs/decentraland/repositories?page=13&type=all

# URL: https://github.com/orgs/decentraland/repositories?page=13&type=all

<title>Decentraland Â· GitHub</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<h2>Repositories</h2>

<p>Set of buidler plugins for Decentraland contracts</p>

<p>A TSLint config for JavaScript Standard Style</p>

<p>A common identifier for assets across the metaverse</p>

<p>Graph Node indexes data from blockchains such as Ethereum and serves it over GraphQL</p>

<p>ð At Decentraland, we put a lot of effort into improving both the Software itself and the Software Process. The pillars of the Software Process are the standards we define to organize our work.</p>

<p>â£ Solidity Contracts for the Decentraland MANA Token</p>

<p>Calculate amount of populated LAND and deployed scenes</p>

<p>ð Tools to help testing wearables for Decentraland</p>

<p>A Jekyll plugin to generate a JSON (RSS-like) feed of your Jekyll posts</p>

<p>Register your land balance on the LAND and Estate Registry</p>

<p>Content pipeline tools for optimizing glTF assets. ð</p>

<p>Server for PeerJS</p>

<p>ECS API Reference</p>

<p>A module to create readable `"multipart/form-data"` isomorphically in node and the browser.</p>

<p>Open API Specification for the NFT APIs</p>

<p>ðWebRTC message broker</p>

<p>A collection of helpers to make it easier to build a Decentraland Builder script</p>

<p>ð Explore Decentraland from a web browser</p>

<p>Map showing LAND with deployed content in Decentraland</p>

<p>Provides Request authentication for Decentraland services</p>

<p>Viper extension to read configurations</p>

<p>Runtime GLTF Loader for Unity3D</p>

<p>A high performance video decoding Unity plugin for Windows.</p>

<p>Frontend code for the Decentraland campaign.</p>

<p>Gin utilities</p>

<em>13</em>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/orgs/decentraland/repositories?page=14&type=all

# URL: https://github.com/orgs/decentraland/repositories?page=14&type=all

<title>Decentraland Â· GitHub</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<h2>Repositories</h2>

<p>ðª Manage invitations to access the client</p>

<p>âï¸ Minimal starting kit for a front-end in TypeScript, using HMR and `decentraland-ui`</p>

<p>Decentraland XML parser</p>

<p>Decentraland communication protocol</p>

<p>ð Examples of different experiences built for Decentraland</p>

<p>ðCommunications Server</p>

<p>Offer bounties in MANA to developers that create educational content: tutorials & scene samples</p>

<p>TypeScript/JavaScript language support for the Monaco Editor, customized for Decentraland</p>

<p>ð A Jekyll plugin to generate an Atom (RSS-like) feed of your Jekyll posts</p>

<p>ð½ A proxy to connect to the IPFS network</p>

<p>ð What is Decentraland?</p>

<p>Decentraland's ÃApps Boilerplate</p>

<p>ð¥Health checks for ETH nodes</p>

<p>End to end tests for the CLI</p>

<p>Node's framework for interactive CLIs</p>

<p>Ledger Nano S wallet provider for the Web3 ProviderEngine</p>

<p>ð Collaborative real-time edition of parcel scenes, with IPFS uploading. Based on aframe-inspector</p>

<p>ð¥ Browser for Decentraland Stone Age</p>

<p>ð³ERC-20 Based Off-chain Voting</p>

<p>zero client provider engine</p>

<p>ðKeeping track of the bounty programs for different apps of our ecosystem</p>

<p>ð Source code for Decentraland's Terraform Auction</p>

<p>â° Get notifications whenever an Ethereum smart contract triggers an event.</p>

<p>A collection of utility functions for Ethereum</p>

<p>A small collection of functions for signing ethereum data</p>

<p>Proof of concept for arranging tile zones in an hexagonal grid.</p>

<em>14</em>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/orgs/decentraland/repositories?page=15&type=all

# URL: https://github.com/orgs/decentraland/repositories?page=15&type=all

<title>Decentraland Â· GitHub</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<h2>Repositories</h2>

<p>Proposals for Community Districts for the Terraform event</p>

<p>DEPRECATED: This codebase will not be mantained anymore, and formats are going to change when we move to the Decentraland Iron Age</p>

<p>DEPRECATED: Unity editor and browser for Decentraland Bronze Age</p>

<p>Contract for the Whitelist sale for Decentraland</p>

<p>Decentraland websites</p>

<p>Node for Decentraland Stone Age</p>

<em>15</em>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/orgs/decentraland/repositories?language=typescript&type=all

# URL: https://github.com/orgs/decentraland/repositories?language=typescript&type=all

<title>Decentraland Â· GitHub</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<strong>234</strong>

for</span>

<strong>all</strong>

written in</span>

<strong>TypeScript</strong>

<strong>last updated</strong>

<h2>Repositories</h2>

<p>Decentraland Auth UI</p>

<p>Code for the server dedicated to auth stuff</p>

<p>Opinionated All-in-one Web Framework</p>

<p>ð¦ Decentraland UI</p>

<p>ð Build scenes for Decentraland</p>

<p>ð Collection of 3D models for Decentraland avatars</p>

<p>ð¢ Governance platform of the Decentraland DAO</p>

<p>ðï¸ Decentraland's NFT Marketplace</p>

<p>Toolchain to build JS & TS scenes for Decentraland</p>

<p>ð  Common modules for dApps</p>

<p>Connect your Ethereum wallet from different providers</p>

<p>Profile dApp</p>

<p>ð Transfer and bridge MANA across networks</p>

<p>Open source video conferencing app built on LiveKit Components, LiveKit Cloud, and Next.js.</p>

<p>A package to manage configurations for different environment in frontends</p>

<p>Common schemas for Decentraland</p>

<p>Builder app backend</p>

<p>Templates for the Builder</p>

<p>SDK 7 Utils Library</p>

<p>VSCode extension for Decentraland SDK7 projects</p>

<p>Scene entities manifest builder for the LODs solution for Decentraland's new Explorer</p>

<em>1</em>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/orgs/decentraland/repositories?language=typescript&page=2&type=all

# URL: https://github.com/orgs/decentraland/repositories?language=typescript&page=2&type=all

<title>Decentraland Â· GitHub</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<strong>234</strong>

for</span>

<strong>all</strong>

written in</span>

<strong>TypeScript</strong>

<strong>last updated</strong>

<h2>Repositories</h2>

<p>A client to query and perform changes on Decentraland's catalyst servers</p>

<p>ð§ Content server for Decentraland</p>

<p>ð Ethereum connector for Decentraland scenes and applications</p>

<p>A multi framework middleware to authenticate request signed with @decentraland/SignedFetch</p>

<p>Platform's Http Server Common utils</p>

<p>Storage engines for catalyst projects</p>

<p>Builder asset packs</p>

<p>A collection of handy functions for crypto operations in Decentraland scenes</p>

<p>This website hosts a dApp used to upload and see what others are organizing inside the Decentraland virtual world.</p>

<p>Scene runtime for JS environments</p>

<p>Adaption Layer between from SDK6 to SDK7</p>

<p>ECS 7 Template</p>

<p>Render an interactive preview of a wearable</p>

<p>A consumer of the dapps substreams output</p>

<p>Create transactions to be relayed</p>

<em>2</em>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/orgs/decentraland/repositories?language=typescript&page=1&type=all

# URL: https://github.com/orgs/decentraland/repositories?language=typescript&page=1&type=all

<title>Decentraland Â· GitHub</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<strong>234</strong>

for</span>

<strong>all</strong>

written in</span>

<strong>TypeScript</strong>

<strong>last updated</strong>

<h2>Repositories</h2>

<p>Decentraland Auth UI</p>

<p>Code for the server dedicated to auth stuff</p>

<p>Opinionated All-in-one Web Framework</p>

<p>ð¦ Decentraland UI</p>

<p>ð Build scenes for Decentraland</p>

<p>ð Collection of 3D models for Decentraland avatars</p>

<p>ð¢ Governance platform of the Decentraland DAO</p>

<p>ðï¸ Decentraland's NFT Marketplace</p>

<p>Toolchain to build JS & TS scenes for Decentraland</p>

<p>ð  Common modules for dApps</p>

<p>Connect your Ethereum wallet from different providers</p>

<p>Profile dApp</p>

<p>ð Transfer and bridge MANA across networks</p>

<p>Open source video conferencing app built on LiveKit Components, LiveKit Cloud, and Next.js.</p>

<p>A package to manage configurations for different environment in frontends</p>

<p>Common schemas for Decentraland</p>

<p>Builder app backend</p>

<p>Templates for the Builder</p>

<p>SDK 7 Utils Library</p>

<p>VSCode extension for Decentraland SDK7 projects</p>

<p>Scene entities manifest builder for the LODs solution for Decentraland's new Explorer</p>

<em>1</em>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/orgs/decentraland/repositories?language=typescript&page=3&type=all

# URL: https://github.com/orgs/decentraland/repositories?language=typescript&page=3&type=all

<title>Decentraland Â· GitHub</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<strong>234</strong>

for</span>

<strong>all</strong>

written in</span>

<strong>TypeScript</strong>

<strong>last updated</strong>

<h2>Repositories</h2>

<p>Notification producer</p>

<p>API definition for the Catalyst Server implementation</p>

<p>Service to generate and profile images of avatars</p>

<p>Collection of command line tools to do massive Airdrops of Decentraland Wearables on Matic</p>

<p>Quests Client for SDK7</p>

<p>Service that acts as a Third Party Integrations resolver exposing only the healthy ones.</p>

<p>Signatures server implementation</p>

<p>Quests Desginer React Component</p>

<p>This is the repository for the website served in play.decentraland.org</p>

<p>DCL auth crypto lib</p>

<p>ðº A server for the atlas map</p>

<p>Verified Partners Registry</p>

<p>Quests Manager dApp</p>

<p>Build Unity projects for different platforms</p>

<p>NFT Server</p>

<p>A server that handles the substreams reorgs</p>

<p>DCL status page</p>

<p>Create simple client/server RPCs over a transport</p>

<em>3</em>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/orgs/decentraland/repositories?language=typescript&page=4&type=all

# URL: https://github.com/orgs/decentraland/repositories?language=typescript&page=4&type=all

<title>Decentraland Â· GitHub</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<strong>234</strong>

for</span>

<strong>all</strong>

written in</span>

<strong>TypeScript</strong>

<strong>last updated</strong>

<h2>Repositories</h2>

<p>Public ops command line to interact with Decentraland nodes</p>

<p>A multi framework middleware to authenticate request signed with @decentraland/SignedFetch</p>

<p>Hashing utilities for Decentraland</p>

<p>Tool for benchmarking RPC Servers of the Decentraland RPC implementation</p>

<p>Favorites server implementation</p>

<p>Pick Up Example Quest Scene</p>

<p>Proxy server that relays transactions to Biconomy, using some restrictions</p>

<p>ð½ Decentraland Collections Graph</p>

<p>Sends pointer deploymens via Server Sent Events</p>

<p>ð¡ Interact with Decentraland's users, send private messages and add friends.</p>

<p>Repository to host the reference implementation made in Babylon.js by the Protocol Squad</p>

<p>ð» Decentraland command-line interface</p>

<p>VSCode extension for Decentraland SDK6</p>

<p>SDK Playground</p>

<p>The Graph indexing for the Rentals contract</p>

<p>Official open source React components and examples for building with LiveKit.</p>

<p>Portable Experience Sample</p>

<p>Open source video conferencing app built on LiveKit Components, LiveKit Cloud, and Next.js.</p>

<p>A</p>

<p>graph detaling the ownership and permissions of Land</p>

<p>Catalyst, POIs, Ban Names list</p>

<em>4</em>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/orgs/decentraland/repositories?language=typescript&page=5&type=all

# URL: https://github.com/orgs/decentraland/repositories?language=typescript&page=5&type=all

<title>Decentraland Â· GitHub</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<strong>234</strong>

for</span>

<strong>all</strong>

written in</span>

<strong>TypeScript</strong>

<strong>last updated</strong>

<h2>Repositories</h2>

<p>An idiomatic protobuf generator for TypeScript</p>

<p>Scripts for deploying testnet contracts.</p>

<p>Mana balances subgraph</p>

<p>Third Party API resolver example in Express</p>

<p>Decentraland ecs math</p>

<p>Backend for frontend for Explorer</p>

<p>Common tools and types to share between catalyst servers and clients</p>

<p>Public interface exposed by Kernel</p>

<p>Generate a merkle tree of items by using its content hash</p>

<p>ðº Tile Map</p>

<p>Utility to schedule shows as well as synchronize actions with a show</p>

<p>NPC tools for conversational NPCs</p>

<p>Reusable contracts</p>

<p>API definition for the Social Server implementation</p>

<p>websocket crdt sync server</p>

<em>5</em>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/orgs/decentraland/repositories?language=typescript&page=6&type=all

# URL: https://github.com/orgs/decentraland/repositories?language=typescript&page=6&type=all

<title>Decentraland Â· GitHub</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<strong>234</strong>

for</span>

<strong>all</strong>

written in</span>

<strong>TypeScript</strong>

<strong>last updated</strong>

<h2>Repositories</h2>

<p>A server that can generate a image of the face or the full body of an avatar</p>

<p>Synapse authentication server for testing</p>

<p>Set of common functionality accross Decentraland projects servers</p>

<p>ð£ Script to help deploy Decentraland's road parcels</p>

<p>Kernel is the glue code between the OS, comms and the Renderer of Decentraland</p>

<p>Helper functions to create sprites using Decentraland's SDK</p>

<p>Code generation tool for gRPC-like using decentraland/rpc</p>

<p>Third Party Registry Subgraph</p>

<p>ð JavaScript client for the auth-service</p>

<p>ð  Experiment Tracking Tool (A/B Testing)</p>

<p>LocalStorage engine for redux-persistence</p>

<p>ð Persistence layer for redux with flexible backends</p>

<p>DEPRECATED - Ethereum common helpers for Decentraland</p>

<p>â Programmatically write DCL scenes</p>

<p>ð  Set of common functionality across Decentraland projects.</p>

<p>ðAgora is an off-chain governance tool for decentralized communities.</p>

<p>ð¡ Sandboxed code execution + Plugins + JSON-RPC engine</p>

<p>Calculator for Curations Committee payments</p>

<p>Automatically deploy scenes using GitHub+CircleCI</p>

<p>Tools for generating semi-random noise based on the Perlin and Simplex algorithms, to simulate an organic kind of randomness.</p>

<em>6</em>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/orgs/decentraland/repositories?language=typescript&page=7&type=all

# URL: https://github.com/orgs/decentraland/repositories?language=typescript&page=7&type=all

<title>Decentraland Â· GitHub</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<strong>234</strong>

for</span>

<strong>all</strong>

written in</span>

<strong>TypeScript</strong>

<strong>last updated</strong>

<h2>Repositories</h2>

<p>Snapshot voting strategies</p>

<p>Decentraland's Catalyst Comms Peer</p>

<p>Transport for comms V3</p>

<p>SDK Playground</p>

<p>ð¡Smart item examples</p>

<p>Smart Item Sample for SDK Cli</p>

<p>Decentraland ECS</p>

<p>Library to group peers in islands according to their position, to decide connection groups</p>

<p>Generate avatar snapshots in a lambda</p>

<p>SDK Template library</p>

<p>Stream-based library for parsing and manipulating subtitle files</p>

<p>Some scripts to check the state of catalysts servers</p>

<p>test scene for CRDT protocol</p>

<p>ð² Builder asset packs</p>

<p>Portable Operating System Interface for Decentraland Scenes</p>

<p>nft_bazl gallery</p>

<em>7</em>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/orgs/decentraland/repositories?language=typescript&page=8&type=all

# URL: https://github.com/orgs/decentraland/repositories?language=typescript&page=8&type=all

<title>Decentraland Â· GitHub</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<strong>234</strong>

for</span>

<strong>all</strong>

written in</span>

<strong>TypeScript</strong>

<strong>last updated</strong>

<h2>Repositories</h2>

<p>socket pool components for well-know-components</p>

<p>React app for testing WebRTC Selective Forwarding Unit</p>

<p>ð Explore Decentraland from a web browser</p>

<p>Decentraland Library for creating quests ECS components to show in UI</p>

<p>Exploration of new RPC mechanisms</p>

<p>Set of buidler plugins for Decentraland contracts</p>

<p>ð Tools to help testing wearables for Decentraland</p>

<p>Register your land balance on the LAND and Estate Registry</p>

<p>Server for PeerJS</p>

<p>Open API Specification for the NFT APIs</p>

<p>A collection of helpers to make it easier to build a Decentraland Builder script</p>

<p>ð Explore Decentraland from a web browser</p>

<p>Map showing LAND with deployed content in Decentraland</p>

<p>Decentraland XML parser</p>

<p>Offer bounties in MANA to developers that create educational content: tutorials & scene samples</p>

<p>End to end tests for the CLI</p>

<em>8</em>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/orgs/decentraland/repositories?language=javascript&type=all

# URL: https://github.com/orgs/decentraland/repositories?language=javascript&type=all

<title>Decentraland Â· GitHub</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<strong>52</strong>

for</span>

<strong>all</strong>

written in</span>

<strong>JavaScript</strong>

<strong>last updated</strong>

<h2>Repositories</h2>

<p>Decentraland ESlint config</p>

<p>A four-day celebration of music, culture and creativity in the virtual social world of Decentraland, the Metaverse Festival is a grand collision of light, sound and portable toilets.</p>

<p>ð Decentraland's vesting dashboard</p>

<p>UI to deploy vesting contracts using a minimal proxy</p>

<p>ð Decentraland Marketplace Contracts</p>

<p>DCL dApps ESLint & Prettier Config</p>

<p>ð ð­ Set of Wearables NFT contracts</p>

<p>Metaverse Fashion Week Landingpage</p>

<p>Aragon apps for Decentraland DAO</p>

<p>Sagas to handle voice webRTC SFU</p>

<p>ð° Faucet for all things related to Decentraland</p>

<p>ðï¸ Decentraland's LAND Marketplace</p>

<p>ð Distinguishable Assets Registry (ERC 721)</p>

<p>Pass through contract</p>

<p>ð§ª A set of utility contracts used for the Decentraland ecosystem</p>

<p>just a simple dummy token</p>

<p>ion javascript sdk</p>

<p>ð WebRTC Signalling Server that uses Server-Sent Events</p>

<p>Allows multiple parties to agree on transactions before execution.</p>

<p>A TSLint config for JavaScript Standard Style</p>

<p>Calculate amount of populated LAND and deployed scenes</p>

<p>Content pipeline tools for optimizing glTF assets. ð</p>

<p>ECS API Reference</p>

<p>A module to create readable `"multipart/form-data"` isomorphically in node and the browser.</p>

<p>Frontend code for the Decentraland campaign.</p>

<em>1</em>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/orgs/decentraland/repositories?language=javascript&page=2&type=all

# URL: https://github.com/orgs/decentraland/repositories?language=javascript&page=2&type=all

<title>Decentraland Â· GitHub</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<strong>52</strong>

for</span>

<strong>all</strong>

written in</span>

<strong>JavaScript</strong>

<strong>last updated</strong>

<h2>Repositories</h2>

<p>ðª Manage invitations to access the client</p>

<p>âï¸ Minimal starting kit for a front-end in TypeScript, using HMR and `decentraland-ui`</p>

<p>Decentraland communication protocol</p>

<p>ðCommunications Server</p>

<p>TypeScript/JavaScript language support for the Monaco Editor, customized for Decentraland</p>

<p>ð½ A proxy to connect to the IPFS network</p>

<p>Decentraland's ÃApps Boilerplate</p>

<p>ð¥Health checks for ETH nodes</p>

<p>Node's framework for interactive CLIs</p>

<p>Ledger Nano S wallet provider for the Web3 ProviderEngine</p>

<p>ð Collaborative real-time edition of parcel scenes, with IPFS uploading. Based on aframe-inspector</p>

<p>ð¥ Browser for Decentraland Stone Age</p>

<p>ð³ERC-20 Based Off-chain Voting</p>

<p>zero client provider engine</p>

<p>ð Source code for Decentraland's Terraform Auction</p>

<p>â° Get notifications whenever an Ethereum smart contract triggers an event.</p>

<p>A collection of utility functions for Ethereum</p>

<p>A small collection of functions for signing ethereum data</p>

<p>Proof of concept for arranging tile zones in an hexagonal grid.</p>

<p>DEPRECATED: This codebase will not be mantained anymore, and formats are going to change when we move to the Decentraland Iron Age</p>

<p>Contract for the Whitelist sale for Decentraland</p>

<p>Node for Decentraland Stone Age</p>

<em>2</em>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/orgs/decentraland/repositories?language=javascript&page=1&type=all

# URL: https://github.com/orgs/decentraland/repositories?language=javascript&page=1&type=all

<title>Decentraland Â· GitHub</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<strong>52</strong>

for</span>

<strong>all</strong>

written in</span>

<strong>JavaScript</strong>

<strong>last updated</strong>

<h2>Repositories</h2>

<p>Decentraland ESlint config</p>

<p>A four-day celebration of music, culture and creativity in the virtual social world of Decentraland, the Metaverse Festival is a grand collision of light, sound and portable toilets.</p>

<p>ð Decentraland's vesting dashboard</p>

<p>UI to deploy vesting contracts using a minimal proxy</p>

<p>ð Decentraland Marketplace Contracts</p>

<p>DCL dApps ESLint & Prettier Config</p>

<p>ð ð­ Set of Wearables NFT contracts</p>

<p>Metaverse Fashion Week Landingpage</p>

<p>Aragon apps for Decentraland DAO</p>

<p>Sagas to handle voice webRTC SFU</p>

<p>ð° Faucet for all things related to Decentraland</p>

<p>ðï¸ Decentraland's LAND Marketplace</p>

<p>ð Distinguishable Assets Registry (ERC 721)</p>

<p>Pass through contract</p>

<p>ð§ª A set of utility contracts used for the Decentraland ecosystem</p>

<p>just a simple dummy token</p>

<p>ion javascript sdk</p>

<p>ð WebRTC Signalling Server that uses Server-Sent Events</p>

<p>Allows multiple parties to agree on transactions before execution.</p>

<p>A TSLint config for JavaScript Standard Style</p>

<p>Calculate amount of populated LAND and deployed scenes</p>

<p>Content pipeline tools for optimizing glTF assets. ð</p>

<p>ECS API Reference</p>

<p>A module to create readable `"multipart/form-data"` isomorphically in node and the browser.</p>

<p>Frontend code for the Decentraland campaign.</p>

<em>1</em>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/orgs/decentraland/repositories?language=c%23&type=all

# URL: https://github.com/orgs/decentraland/repositories?language=c%23&type=all

<title>Decentraland Â· GitHub</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<strong>22</strong>

for</span>

<strong>all</strong>

written in</span>

<strong>C#</strong>

<strong>last updated</strong>

<h2>Repositories</h2>

<p>Unity project for converting GLTFs to AssetBundles</p>

<p>Unity implementation of Decentraland Client</p>

<p>This is a copy of</p>

<p>to avoid LTS fork quota</p>

<p>Skyboxes for Explorer</p>

<p>Efficient glTF 3D import / export package for Unity</p>

<p>UniVRM is a gltf-based VRM format implementation for Unity. English is here</p>

<p>. æ¥æ¬èª ã¯ãã¡ã</p>

<p>A library for adding scripting to .NET applications. Supports V8 (Windows, Linux, macOS) and JScript/VBScript (Windows).</p>

<p>Gif decoding utility for Unity engine</p>

<p>IME for Unity WebGL</p>

<p>NSubstitute is designed as a friendly substitute for .NET mocking libraries.</p>

<p>Desktop client for Decentraland, coming soon</p>

<p>Runtime GLTF Loader for Unity3D</p>

<p>DEPRECATED: Unity editor and browser for Decentraland Bronze Age</p>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/orgs/decentraland/repositories?language=rust&type=all

# URL: https://github.com/orgs/decentraland/repositories?language=rust&type=all

<title>Decentraland Â· GitHub</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<strong>18</strong>

for</span>

<strong>all</strong>

written in</span>

<strong>Rust</strong>

<strong>last updated</strong>

<h2>Repositories</h2>

<p>An implementation of StreamingFast's substreams for dcl contracts</p>

<p>Services for Decentraland In World camera feature</p>

<p>Decentraland's Quests System</p>

<p>Library to collect and expose Prometheus metrics from an HTTP Rust server.</p>

<p>Decentraland RPC - Rust implementation</p>

<p>Safe FFmpeg wrapper.</p>

<p>Reference Client Implementation of the Social Service</p>

<p>decentraland-crypto implementation in Rust</p>

<p>Authenticate WebSocket connections using the Decentraland's Authchain</p>

<p>FFmpeg bindings for Rust.</p>

<p>Example of HTTP Server in Rust using Warp and RpcServer using dcl-rpc</p>

<p>A load testing tool to determine how many users and messages can a matrix instance handle</p>

<p>Actix-web middleware to expose Prometheus metrics</p>

<p>Graph Node indexes data from blockchains such as Ethereum and serves it over GraphQL</p>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/orgs/decentraland/repositories?language=go&type=all

# URL: https://github.com/orgs/decentraland/repositories?language=go&type=all

<title>Decentraland Â· GitHub</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<strong>11</strong>

for</span>

<strong>all</strong>

written in</span>

<strong>Go</strong>

<strong>last updated</strong>

<h2>Repositories</h2>

<p>ð Components of a DCL world</p>

<p>ð¨ IPFS Alternative HTTP Interface</p>

<p>Pure Go WebRTC SFU</p>

<p>ðWebRTC message broker</p>

<p>Provides Request authentication for Decentraland services</p>

<p>Viper extension to read configurations</p>

<p>Gin utilities</p>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/Certified-criptokitty

# URL: https://github.com/decentraland-scenes/Certified-criptokitty

<title>GitHub - decentraland-scenes/Certified-criptokitty: Displays an NFT taken from a contract address</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Displays an NFT taken from a contract address</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/Certified-criptokitty</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>7</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Certified-criptokitty</h1>

<p>Displays an NFT taken from a contract address</p>

<p>This scene shows you:</p>

<li>How to display a 2D NFT in a picture frame in a scene</li>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$:  dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<p>If something doesnât work, please</p>

<p>.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>Displays an NFT taken from a contract address</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>2</strong>

<h3>Watchers</h3>

<strong>3</strong>

<h3>Forks</h3>

<strong>3</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/Events-API

# URL: https://github.com/decentraland-scenes/Events-API

<title>GitHub - decentraland-scenes/Events-API: Call the Decentraland Events API to display events that are currently going on</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Call the Decentraland Events API to display events that are currently going on</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/Events-API</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>17</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Events API Board</h1>

<p>Call the Decentraland Events API to display events that are currently going on. If there are several active at the same time, it will cycle through up to 5 events.</p>

<p>This scene shows you:</p>

<li>How to call the Decentraland Events API</li>

<li>How to handle async functions that require waiting for a response</li>

<li>How to parse a JSON response from an API</li>

<li>How to parse incoming text fields so that they adjust to line width and a maximum length</li>

<li>How to use a system to shuffle through different in-world UI screens</li>

<li>How to use a teleport to travel to other locations in Decentraland</li>

<p>Events that are currently going on have a</p>

<code>live</code>

<p>field =</p>

<em>true</em>

<p>, so it's easy to filter through the returned events to only pick those that are live.</p>

<p>The board displays the event's title, screenshot, location, and location name (if applicable). The board also works as a teleport when clicked, taking players to the currently displayed event.</p>

<h2>About the events API:</h2>

<p>Root URL:</p>

<p>Events are always ordered by their</p>

<code>start_at</code>

<p>time</p>

<p>optional params:</p>

<li>limit: only show x amount of events</li>

<li>offset: start showing events from x position onwards</li>

<li>position: a single event on x position</li>

<li>estate_id: only events that happen in a given estate</li>

<li>user: only events created by a given user</li>

<li>onlyUpcoming: only events that have not started yet</li>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$:  dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<strong>Scene Usage</strong>

<p>If there are no live events right now, you won't see the board when running the preview. If there are several live events, they will be shuffled through every few seconds, or you can also click on the dots on the bottom of the board to switch through them manually.</p>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<p>If something doesnât work, please</p>

<p>.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>Call the Decentraland Events API to display events that are currently going on</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>2</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>2</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/piano-floor-example-scene

# URL: https://github.com/decentraland-scenes/piano-floor-example-scene

<title>GitHub - decentraland-scenes/piano-floor-example-scene: A piano floor where you walk on the keys to play.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A piano floor where you walk on the keys to play.</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/piano-floor-example-scene</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>15</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Piano Floor Example Scene</h1>

<em>demo of piano-floor-example-scene running in preview.</em>

<p>A piano floor where the player walks on the keys to play.</p>

<p>This scene shows you:</p>

<li>How to play sounds from files</li>

<li>How to change the material of a primitive shape</li>

<li>How to use the trigger area from the Utils library to activate something when a player walks over it</li>

<li>How to keep players synced by using the messagebus to communicate each player's actions to others</li>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$:  dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<strong>Scene Usage</strong>

<p>Step on the keys to activate each note.</p>

<p>If there are multiple players in the scene, they should all hear what each other plays. You can simulate this by opening two browser tabs with the same preview.</p>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<p>If something doesnât work, please</p>

<p>.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>A piano floor where you walk on the keys to play.</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>2</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/Zenquencer

# URL: https://github.com/decentraland-scenes/Zenquencer

<title>GitHub - decentraland-scenes/Zenquencer: A musical sequencer based on dragging stones into position</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A musical sequencer based on dragging stones into position</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/Zenquencer</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>10</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>32</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Zenquencer</h1>

<p>A sequencer that can be used to make music with others, writing musical patterns by activating stones.</p>

<p>When notes are played, activated or deactivated, these changes are shared with nearby players via the message bus. The note pattern is also stored in an Amazon S3 server.</p>

<p>This scene shows you:</p>

<li>How to use the message bus to keep players in sync with each other's actions while they're together in the scene</li>

<li>How to send HTTP requests to an API to store the scene state in a permanent place, so others can then retrieve changes</li>

<li>How to set up a server that is capable of handling the storage of data in a separate Amazon S3 server</li>

<li>How to obtain the realm that a player is currently on</li>

<li>How to play sounds from a file</li>

<li>How to use a system to coordinate the timing of various actions</li>

<li>How to use the utils library</li>

<code>Delay</code>

<li>component to buffer the updating various changes to the server</li>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$:  dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<strong>Setting up the server</strong>

<p>The scene is set up to make use of the same server that's used by Genesis Plaza. To launch your own server, we recommend you deploy what's in the</p>

<code>/server</code>

<p>folder to your own Firebase account, following the steps in</p>

<p>. To store data on an Amazon S3 server, as done here, you'll also need to set up your own Amazon S3, and fetch credentials for that account to include in your server folder.</p>

<h2>About syncing changes between players</h2>

<p>When a player comes into the scene, they download the latest pattern from off the server. Then, as different players that are there change the pattern, they get these changes from each other using the Message Bus, they donât need to check the server regularly to know whatâs new.</p>

<p>For this to work properly, we need to keep a separate version of this pattern for each realm and know what realm each player is on when they update the pattern. This is because only players that are in the same realm message each other via the Message Bus. There would otherwise be odd inconsistencies in what the pattern ends up being when players that are in different realms modify the same pattern without notifying each other. The scene includes the playerâs realm as part of the requests it sends, and the server then handles a different .json file depending on the realm.</p>

<p>Note: This works fine as long as the scene is deployed in one single place in the map. If various copies of the same scene exist and call the same server, writing to the same database, then that could be a problem. If two players are interacting with the two different versions of the scene, they will be acting upon the same database, but they won't share changes via the message bus. This will result in inconsistencies in between what each one sees and the final result being stored.</p>

<p>Another noteworthy thing weâre doing in this example is that changes arenât sent to the server right away, but instead we do a little buffer using the utils.Delay component, so that if the player changes several notes in quick succession, the server only gets notified of the final state of the pattern. This helps reduce the number of requests that the server needs to handle. For it to work, each update request needs to send the full state of the pattern, rather than just the changed elements.</p>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<p>If something doesnât work, please</p>

<p>.</p>

<h2>About</h2>

<p>A musical sequencer based on dragging stones into position</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>1</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>1</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/portal-ble-experience

# URL: https://github.com/decentraland-scenes/portal-ble-experience

<title>GitHub - decentraland-scenes/portal-ble-experience: A simple portable experience where you can create portals anywhere in the world</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A simple portable experience where you can create portals anywhere in the world</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/portal-ble-experience</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>2</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>8</strong>

<h2>Files</h2>

<button>View code</button>

<h1>portal-ble-experience</h1>

<h2>About</h2>

<p>A simple portable experience where you can create portals anywhere in the world</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/Genesis-Plaza

# URL: https://github.com/decentraland-scenes/Genesis-Plaza

<title>GitHub - decentraland-scenes/Genesis-Plaza: The newly revamped Genesis Plaza.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>The newly revamped Genesis Plaza.</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/Genesis-Plaza</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>38</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>772</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Genesis-Plaza</h1>

<em>A few screenshots of Genesis Plaza.</em>

<h2>Description</h2>

<p>The newly revamped</p>

<p>.</p>

<p>Read the behind the scenes from this scene in these blog posts:</p>

<p>This scene contains a lot of useful mechanics, including:</p>

<li>Interacting with an NPC</li>

<li>Fetching data from APIs</li>

<li>Adding teleports to other scenes</li>

<li>Adding external links outside Decentraland</li>

<li>Syncing player actions with the messagebus</li>

<li>Streaming audio</li>

<li>Streaming video</li>

<li>Displaying a custom UI</li>

<p>Because it can be hard to find specific things in such a large repository, some of the most interesting bits of the scene have been exported into their own example repos:</p>

<li>: A UI window presents texts from an NPC, allowing you to use the Right Click, E and F keys to advance the conversation or answer questions.</li>

<li>: Display a 2D NFT in a picture frame.</li>

<li>: Query the Decentraland Events API for any events that are currently active to display their info. If more than one, flip through them on the display.</li>

<li>: Play the keys of this piano by stepping on them. All players will hear the notes that are played.</li>

<li>: Create musical patterns that are played in sequence. Players are synced through both the messagebus and a DB in a server.</li>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$:  dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<strong>Setting up the server</strong>

<p>The scene is set up to make use of the same server that's used by Genesis Plaza. To launch your own server, we recommend you deploy what's in the</p>

<code>/server</code>

<p>folder to your own Firebase account, following the steps in</p>

<p>. To store data on an Amazon S3 server, as done here, you'll also need to set up your own Amazon S3, and fetch credentials for that account to include in your server folder.</p>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<p>If something doesnât work, please</p>

<p>.</p>

<h2>Links</h2>

<h2>Acknowledgements</h2>

<li>Thank you to</li>

<li>for providing sample code of the NPC used in</li>

<em>alice.mp3</em>

<li>modified from</li>

<em>bela.mp3</em>

<li>modified from</li>

<em>betty</em>

<li>.mp3_ modified from</li>

<em>bob.mp3</em>

<li>modified from</li>

<em>charlie</em>

<li>.mp3_ modified from</li>

<em>marsha.mp3</em>

<li>modified from</li>

<em>ron.mp3</em>

<li>modified from</li>

<em>beerPump.mp3</em>

<li>modified from</li>

<em>error.mp3</em>

<li>modified from</li>

<em>pickUp.mp3</em>

<li>modified from</li>

<em>putDown.mp3</em>

<li>modified from</li>

<em>swallow.mp3</em>

<li>modified from</li>

<em>micFeedback.mp3</em>

<li>modified from</li>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>The newly revamped Genesis Plaza.</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>20</strong>

<h3>Watchers</h3>

<strong>4</strong>

<h3>Forks</h3>

<strong>17</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/conway-game-of-life

# URL: https://github.com/decentraland-scenes/conway-game-of-life

<title>GitHub - decentraland-scenes/conway-game-of-life</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/conway-game-of-life</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>6</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Conway Game of Life</h1>

<p>A scene that implements the Conway Game of Life</p>

<p>More info:</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Open this folder on the command line, then run:</p>

<code>dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<h2>Deploy to Decentraland</h2>

<p>If you own any parcels of land in Decentraland, or have permissions to deploy to someone else's, you can publish this project.</p>

<li>Make sure the scene parcels in</li>

<code>scene.json</code>

<li>match those you own or have permissions on.</li>

<li>Run</li>

<code>dcl deploy</code>

<li>on the project folder</li>

<li>This will open a browser tab to confirm. Metamask will prompt you to sign.</li>

<p>Note: Make sure you are using the wallet that owns the parcels or has permissions.</p>

<h3>Deploy to a free server</h3>

<p>If you don't own parcels in Decentraland or are not ready to publish your scene to the world, you can share your creations by uploading your scenes to a free hosting service.</p>

<p>See</p>

<p>for instructions on how to do this.</p>

<h2>Resources</h2>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<p>Find more example scenes, tutorials and helper libraries in the</p>

<p>.</p>

<p>If you need any help, join</p>

<p>, where you'll find a vibrant community of other creators who are eager to help. You're sure to find help in the #SDK support channel.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/Quest-drink-of-the-gods-2023

# Change to URL: https://github.com/orgs/decentraland-scenes/repositories?type=all

# URL: https://github.com/orgs/decentraland-scenes/repositories?type=all

<title>decentraland-scenes Â· GitHub</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<h2>Repositories</h2>

<p>A collection of links to examples and tutorials to help you get started building Decentraland scenes and other content.</p>

<p>Using the rewards server to claim wearables</p>

<p>A simple portable experience where you can create portals anywhere in the world</p>

<p>The newly revamped Genesis Plaza.</p>

<p>A scene showing a working quest</p>

<p>A simple platformer that demonstrates various platform movements using code.</p>

<p>Forbid players from claiming a prize if wearing any portable experience</p>

<p>Green Screen Scene for photoshoots and showing off wearables and emotes. You can switch background colors</p>

<p>A simple example that shows how you can use DCL Access library to restrict access to players to a part of your scene</p>

<p>A scene that checks a weather API for the weather in a location and displays that weather condition, showing rain, thunder or snowflakes Use real weather data from different locations by changing the coordinates, or change the value of the âfakeWeatherâ variable to see different weather conditions manifest.</p>

<p>A scene that shows how you can use Ray Casting to trace imaginary lines in space and check for object intersections.</p>

<p>A scene where you can play different songs by pressing buttons on a jukebox.</p>

<p>A fully fledged game, based on the popular game 2048.</p>

<p>port of</p>

<p>colyseus-sdk7</p>

<p>A large example scene with a store, this example is meant for using in worlds. It includes default art but no interactive behavior</p>

<p>A large scene for worlds, with a simple screen ready for streaming video</p>

<p>A simple scene with default art meant for Worlds, with 10x10 parcels</p>

<p>A template scene with default art, featuring an office. This is built for using in Worlds</p>

<p>A large scene for worlds, with default art, featuring a cool nightclub</p>

<p>Basic 101 Avocado Tutorial</p>

<em>1</em>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/moving-platforms

# URL: https://github.com/decentraland-scenes/moving-platforms

<title>GitHub - decentraland-scenes/moving-platforms: A simple platformer that demonstrates various platform movements using code.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A simple platformer that demonstrates various platform movements using code.</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/moving-platforms</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>2</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>12</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Moving Platforms</h1>

<em>demo of moving-platforms scene running in preview.</em>

<h2>Description</h2>

<p>A simple platformer that demonstrates various platform movements using code, which then enables you to sync up the position of the platforms with other players in the scene should you choose to do so. To view the scene, please visit</p>

<p>.</p>

<h2>Instructions</h2>

<p>The aim is to collect the coin by moving and jumping between platforms. Use your mouse to look around and</p>

<kbd>W</kbd>

<kbd>A</kbd>

<kbd>S</kbd>

<kbd>D</kbd>

<p>keys on your keyboard to move forward, left, backward and right respectively. To jump, press the</p>

<kbd>Space</kbd>

<p>key.</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<code>$ npm i -g decentraland</code>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$  dcl start</code>

<h2>Acknowledgements</h2>

<em>coinPickup.mp3</em>

<li>modified from</li>

<h2>About</h2>

<p>A simple platformer that demonstrates various platform movements using code.</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>2</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>1</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/block-portable-experiences

# URL: https://github.com/decentraland-scenes/block-portable-experiences

<title>GitHub - decentraland-scenes/block-portable-experiences: Forbid players from claiming a prize if wearing any portable experience</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Forbid players from claiming a prize if wearing any portable experience</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/block-portable-experiences</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>7</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Block Smart Wearables</h1>

<p>Forbid players from claiming a prize if having any smart wearables or portable experiences on.</p>

<p>The scene includes a series of slightly challenging jumps up to the top, and a treasure to claim at the end. This scene checks if a player is wearing a smart wearable or has a portable experience active, such as a jetpack or any other item that might allow the player to have an unfair advantage over others. It also makes sure the player hasn't had a portable experience on at any given time since having stepped into the scene's parcels.</p>

<p>To enjoy the scene in full, the player must disable all portable experiences (either by deactivating them or by taking off their corresponding wearables), then step out of the scene and back in.</p>

<p>Note: An easier but more abrupt alternative is to use the "portableExperiences" feature toggle in scene.json. This will turn off any portable experiences for the player as soon as they walk in, read more</p>

<p>.</p>

<p>The scene does the following checks:</p>

<li>It checks for portable experiences upon loading</li>

<li>It listens for avatar change events, then checks for portable experiences, in case the player has put on a smart wearable.</li>

<li>It checks for portable experiences again when the player steps into the scene</li>

<h2>About</h2>

<p>Forbid players from claiming a prize if wearing any portable experience</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>1</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/greenScreen

# URL: https://github.com/decentraland-scenes/greenScreen

<title>GitHub - decentraland-scenes/greenScreen: Green Screen Scene for photoshoots and showing off wearables and emotes. You can switch background colors</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Green Screen Scene for photoshoots and showing off wearables and emotes. You can switch background colors</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/greenScreen</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>3</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>2</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Green Screen</h1>

<p>A simple single-parcel Green Screen Scene. Ideal for photoshoots and showing off wearables or emotes in videos.</p>

<p>You can switch background colors by clicking on the different sphere buttons.</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<code>$ npm i -g decentraland</code>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$  dcl start</code>

<h2>About</h2>

<p>Green Screen Scene for photoshoots and showing off wearables and emotes. You can switch background colors</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>3</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/dcl-access-library

# URL: https://github.com/decentraland-scenes/dcl-access-library

<title>GitHub - decentraland-scenes/dcl-access-library: A simple example that shows how you can use DCL Access library to restrict access to players to a part of your scene</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A simple example that shows how you can use DCL Access library to restrict access to players to a part of your scene</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/dcl-access-library</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>3</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>2</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Simple Example with dcl-access library</h1>

<p>A simple example that shows how you can use DCL Access library to restrict access to players to a part of your scene</p>

<p>This scene shows you:</p>

<li>How to block players who don't own a certain token from entering an area</li>

<li>How to block players who don't own a certain token from entering an area</li>

<li>How to block players who don't aren't currently wearing a certain wearable from entering an area</li>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$:  dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.

Learn more about how to build your own scenes in our</p>

<p>site.</p>

<p>If something doesnât work, please</p>

<p>.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>A simple example that shows how you can use DCL Access library to restrict access to players to a part of your scene</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/Laser-ray-casting

# URL: https://github.com/decentraland-scenes/Laser-ray-casting

<title>GitHub - decentraland-scenes/Laser-ray-casting: A scene that shows how you can use Ray Casting to trace imaginary lines in space and check for object intersections.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A scene that shows how you can use Ray Casting to trace imaginary lines in space and check for object intersections.</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/Laser-ray-casting</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>3</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>7</strong>

<h2>Files</h2>

<button>View code</button>

<h2>Laser ray casting</h2>

<p>A scene that shows how</p>

<p>can be used to trace an imaginary line in space and check for object collision.</p>

<p>This scene shows you:</p>

<li>How to use ray cast to check if an entity intersects with a line in space</li>

<li>How to use ray cast to check if an entity is being pointed at by the player</li>

<li>How to change a material on a primitive shape</li>

<li>How to use a system to keep moving multiple entities as in a conveyor</li>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$:  dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<strong>Scene Usage</strong>

<p>Notice that boxes that intersect with the laser change their material and become emissive while being hit. Also, if you point your cursor at a box it will change its color to green.</p>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<p>If something doesnât work, please</p>

<p>.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>A scene that shows how you can use Ray Casting to trace imaginary lines in space and check for object intersections.</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>3</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/cube-jumper-colyesus-sdk7

# URL: https://github.com/decentraland-scenes/cube-jumper-colyesus-sdk7

<title>GitHub - decentraland-scenes/cube-jumper-colyesus-sdk7: port of https://github.com/colyseus/decentraland</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>port of</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/cube-jumper-colyesus-sdk7</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>8</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>27</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Cube Jumper SDK7 Test scene</h1>

<p>This scene is built with the SDK7 in alpha state.</p>

<p>Port of</p>

<p>v15

@colyseus/arena => @colyseus/tools</p>

<li>"colyseus.js": "^0.15.0-preview.7"</li>

<li>"colyseus.js": "0.14.15-alpha.0"</li>

<h1>New ECS for SDK7</h1>

<h2>Entities</h2>

<p>An Entity is just an ID. It is an abstract concept not represented by any data structure. There is no "class Entity". Just a number that is used as a reference to group different components.</p>

<p>Note: Note that it's no longer necessary to separately create an entity and then add it to the engine, this is all done in a single act.</p>

<h2>Components</h2>

<p>The component is just a data container, WITHOUT any functions.</p>

<p>To add a component to an entity, the entry point is now the component type, not the entity.</p>

<p>This is different from how the syntax was in SDK6:</p>

<h3>Base Components</h3>

<p>Base components already come packed as part of the SDK. Most of them interact directly with the renderer in some way. This is the full list of currently supported base components:</p>

<li>Transform</li>

<li>Animator</li>

<li>Material</li>

<li>MeshRenderer</li>

<li>MeshCollider</li>

<li>AudioSource</li>

<li>AudioStream</li>

<li>AvatarAttach</li>

<li>AvatarModifierArea</li>

<li>AvatarShape</li>

<li>Billboard</li>

<li>CameraMode</li>

<li>CameraModeArea</li>

<li>GltfContainer</li>

<li>NftShape</li>

<li>PointerEventsResult</li>

<li>PointerHoverFeedback</li>

<li>PointerLock</li>

<li>Raycast</li>

<li>RaycastResult</li>

<li>TextShape</li>

<li>VisibilityComponent</li>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<h3>Custom Components</h3>

<p>Each component must have a unique number ID. If a number is repeated, the engine or another player receiving updates might apply changes to the wrong component. Note that numbers 1-2000 are reserved for the base components.</p>

<p>When creating a custom component you declare the schema of the data to be stored in it. Every field in a component MUST belong to one of the built-in special schemas provided as part of the SDK. These special schemas include extra functionality that allows them to be serialized/deserialized.</p>

<p>Currently, the names of these special schemas are:</p>

<h4>Primitives</h4>

<code>Schemas.Boolean</code>

<li>: true or false (serialized as a Byte)</li>

<code>Schemas.String</code>

<li>: UTF8 strings (serialized length and content)</li>

<code>Schemas.Float</code>

<li>: single precission float</li>

<code>Schemas.Double</code>

<li>: double precision float</li>

<code>Schemas.Byte</code>

<li>: a single byte, integer with range 0..255</li>

<code>Schemas.Short</code>

<li>: 16 bits signed-integer with range -32768..32767</li>

<code>Schemas.Int</code>

<li>: 32 bits signed-integer with range -2Â³Â¹..(2Â³Â¹-1)</li>

<code>Schemas.Int64</code>

<li>: 64 bits signed-integer</li>

<code>Schemas.Number</code>

<li>: an alias to Schemas.Float</li>

<h4>Specials</h4>

<code>Schemas.Entity</code>

<li>: a wrapper to int32 that casts the type to</li>

<code>Entity</code>

<code>Schemas.Vector3</code>

<li>: a Vector3 with { x, y, z }</li>

<code>Schemas.Quaternion</code>

<li>: a Quaternion with { x, y, z, w}</li>

<code>Schemas.Color3</code>

<li>: a Color3 with { r, g, b }</li>

<code>Schemas.Color4</code>

<li>: a Colo4 with { r, g, b, a }</li>

<h4>Schema generator</h4>

<code>Schemas.Enum</code>

<li>: passing the serialization Schema and the original Enum as generic</li>

<code>Schemas.Array</code>

<li>: passing the item Schema</li>

<code>Schemas.Map</code>

<li>: passing a Map with Schemas as values</li>

<code>Schemas.Optional</code>

<li>: passing the schema to serialize</li>

<p>Below are some examples of how these schemas can be declared.</p>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<p>To then create a custom component using one of these schemas, use the following syntax:</p>

<p>For contrast, below is an example of how components were constructed prior to SDK 7.</p>

<pre>@</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<h2>Systems</h2>

<p>Systems are pure & simple functions.

All your logic comes here.

A system might hold data which is relevant to the system itself, but no data about the entities it processes.</p>

<p>To add a system, all you need to do is define a function and add it to the engine. The function may optionally include a</p>

<code>dt</code>

<p>parameter with the delay since last frame, just like in prior versions of the SDK.</p>

<pre>:</pre>

<h3>Query components</h3>

<p>The way to group/query the components inside systems is using the method getEntitiesWith.</p>

<code>engine.getEntitiesWith(...components)</code>

<p>.</p>

<pre>:</pre>

<h2>Mutability</h2>

<p>Mutability is now an important distinction. We can choose to deal with mutable or with immutable versions of a component. We should use</p>

<code>getMutable</code>

<p>only when we plan to make changes to a component. Dealing with immutable versions of components results in a huge gain in performance.</p>

<p>The</p>

<code>.get()</code>

<p>function in a component returns an immutable version of the component. You can only read its values, but can't change any of the properties on it.</p>

<p>To fetch the mutable version of a component, call it via</p>

<code>ComponentDefinition.getMutable()</code>

<p>. For example:</p>

<h2>About</h2>

<p>port of</p>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>3</strong>

<h3>Forks</h3>

<strong>1</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/colyseus/decentraland

# URL: https://github.com/colyseus/decentraland

<title>GitHub - colyseus/decentraland: Colyseus + Decentraland demonstration</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Colyseus + Decentraland demonstration</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>colyseus/decentraland</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>12</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Colyseus + Decentraland</h1>

<p>See how to use it on</p>

<p>or</p>

<p>.</p>

<h2>License</h2>

<p>MIT</p>

<h2>About</h2>

<p>Colyseus + Decentraland demonstration</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>12</strong>

<h3>Watchers</h3>

<strong>4</strong>

<h3>Forks</h3>

<strong>6</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/colyseus--decentraland

# Change to URL: https://github.com/decentraland-scenes/inworld-ai-colyseus-proxy-service

# URL: https://github.com/decentraland-scenes/inworld-ai-colyseus-proxy-service

<title>GitHub - decentraland-scenes/inworld-ai-colyseus-proxy-service</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/inworld-ai-colyseus-proxy-service</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>5</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>6</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Welcome to Inworld AI Colyseus Service!</h1>

<p>Inworld AI JS SDK is not compatible with DCL runtime (depends on too many things the Decentraland runtime does not have out of the box). This provides a workaround by acting as a proxy.  There are benefits to this approach such as the ability upgrade the SDK, bug fixing (to some extent) to optimize and the connection on the server instead of on the client.</p>

<p>This project has been created using</p>

<code>create-colyseus-app</code>

<p>- an npm init template for kick starting a Colyseus project in TypeScript.</p>

<h2>âï¸ Usage</h2>

<p>In the proxy server code folder, from terminal run</p>

<code>npm install</code>

<p>only required the first time</p>

<p>Start server</p>

<code>npm run start</code>

<p>You will see the following meaning it started successfully.  You may visit localhost:2567 this URL in a browser to also verify</p>

<code>ð  Your Colyseus App

âï¸  Listening on ws://localhost:2567</code>

<h2>Configuration</h2>

<h3>Proxy Server</h3>

<code>development.env</code>

<p>- configuration for local server</p>

<code>arena.env</code>

<p>- configuration for deployed server</p>

<p>In both of these you will find configuration that needs to be updated.</p>

<p>NOTE: Server must be restarted to pick up changes.</p>

<code># configuration for NpcChatRoom.ts should you connnect directly to it

NPC_ROOM_INWORLD_KEY= SECRET

NPC_ROOM_INWORLD_SECRET= SECRET

NPC_ROOM_INWORLD_SCENE=workspaces/{WORKSPACE_NAME}/scenes/{SCENE_NAME}

# configuration for GenesisPlazaRoom should you connnect to this room

GENESIS_CITY_NPC_ROOM_INWORLD_KEY= SECRET

GENESIS_CITY_NPC_ROOM_INWORLD_SECRET= SECRET

GENESIS_CITY_NPC_ROOM_INWORLD_SCENE=workspaces/{WORKSPACE_NAME}/scenes/{SCENE_NAME}</code>

<code>INWORLD_KEY</code>

<p>and</p>

<code>INWORLD_SECRET</code>

<p>Go to the InWorld AI studio.  Under the Integrations section you will create a key and secret</p>

<code>INWORLD_SCENE</code>

<p>will be taken from the URL of your created scene</p>

<h2>Structure</h2>

<code>index.ts</code>

<li>: main entry point, register an empty room handler and attach</li>

<code>@colyseus/monitor</code>

<code>src/rooms/MyRoom.ts</code>

<li>: an empty room handler for you to implement your logic</li>

<code>src/rooms/schema/NpcChatRoom.ts</code>

<li>: is the room you that handles proxying requests to and from Inworld AI.</li>

<code>src/rooms/schema/GenesisPlazaRoom.ts</code>

<li>: is the room you will connect to using a command pattern passing calls to NpcChatRoom.  This allows you to put other game logic in here and keep it encapsulated</li>

<code>loadtest/example.ts</code>

<li>: scriptable client for the loadtest tool (see</li>

<code>npm run loadtest</code>

<li>)</li>

<code>package.json</code>

<li>:</li>

<code>scripts</code>

<li>:</li>

<code>npm start</code>

<li>: runs</li>

<code>ts-node-dev index.ts</code>

<code>npm run loadtest</code>

<li>: runs the</li>

<code>@colyseus/loadtest</code>

<li>tool for testing the connection, using the</li>

<code>loadtest/example.ts</code>

<li>script.</li>

<code>tsconfig.json</code>

<li>: TypeScript configuration file</li>

<h2>License</h2>

<p>MIT</p>

<h2>About</h2>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>1</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/colyseus-sdk7

# URL: https://github.com/decentraland-scenes/colyseus-sdk7

<title>GitHub - decentraland-scenes/colyseus-sdk7: colyseus-sdk7</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>colyseus-sdk7</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/colyseus-sdk7</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>1</strong>

<h2>Files</h2>

<button>View code</button>

<h1>SDK7 Colyseus Template scene</h1>

<h2>Try it out</h2>

<code>npm run start</code>

<h2>About</h2>

<p>colyseus-sdk7</p>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>1</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/store-template-scene

# URL: https://github.com/decentraland-scenes/store-template-scene

<title>GitHub - decentraland-scenes/store-template-scene: A large example scene with a store, this example is meant for using in worlds. It includes default art but no interactive behavior</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A large example scene with a store, this example is meant for using in worlds. It includes default art but no interactive behavior</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/store-template-scene</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>2</strong>

<h2>Files</h2>

<button>View code</button>

<h1>SDK7 Store Template</h1>

<p>A large template scene with default art, meant for using in Worlds, 10 x 10 parcels. The scene doesn't include anything interactive.</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command inside this scene root directory:</p>

<pre>npm install @dcl/sdk@next</pre>

<strong>Previewing the scene</strong>

<p>Download this full repository from</p>

<p>, including this and several other example scenes on SDK7.</p>

<p>Install the</p>

<p>Open a Visual Studio Code window on this scene's root folder. Not on the root folder of the whole repo, but instead on this sub-folder that belongs to the scene.</p>

<p>Open the Decentraland Editor tab, and press</p>

<strong>Run Scene</strong>

<p>Alternatively, you can use the command line. Inside this scene root directory run:</p>

<code>npm run start</code>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 license. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>A large example scene with a store, this example is meant for using in worlds. It includes default art but no interactive behavior</p>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/Streaming-Theatre

# URL: https://github.com/decentraland-scenes/Streaming-Theatre

<title>GitHub - decentraland-scenes/Streaming-Theatre: A large scene for worlds, with a simple screen ready for streaming video</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A large scene for worlds, with a simple screen ready for streaming video</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/Streaming-Theatre</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>4</strong>

<h2>Files</h2>

<button>View code</button>

<h1>SDK7 Streaming Theatre Template</h1>

<p>A large scene for worlds, with a screen ready for streaming video.</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command inside this scene root directory:</p>

<pre>npm install @dcl/sdk@next</pre>

<strong>Previewing the scene</strong>

<p>Download this full repository from</p>

<p>, including this and several other example scenes on SDK7.</p>

<p>Install the</p>

<p>Open a Visual Studio Code window on this scene's root folder. Not on the root folder of the whole repo, but instead on this sub-folder that belongs to the scene.</p>

<p>Open the Decentraland Editor tab, and press</p>

<strong>Run Scene</strong>

<p>Alternatively, you can use the command line. Inside this scene root directory run:</p>

<code>npm run start</code>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 license. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>A large scene for worlds, with a simple screen ready for streaming video</p>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/mansion-template-scene

# URL: https://github.com/decentraland-scenes/mansion-template-scene

<title>GitHub - decentraland-scenes/mansion-template-scene: A simple scene with default art meant for Worlds, with 10x10 parcels</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A simple scene with default art meant for Worlds, with 10x10 parcels</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/mansion-template-scene</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>9</strong>

<h2>Files</h2>

<button>View code</button>

<h1>SDK7 Mansion Template</h1>

<p>A large template scene with default art, meant for using in Worlds, 10 x 10 parcels. The scene doesn't include anything interactive.</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command inside this scene root directory:</p>

<pre>npm install @dcl/sdk@next</pre>

<strong>Previewing the scene</strong>

<p>Download this full repository from</p>

<p>, including this and several other example scenes on SDK7.</p>

<p>Install the</p>

<p>Open a Visual Studio Code window on this scene's root folder. Not on the root folder of the whole repo, but instead on this sub-folder that belongs to the scene.</p>

<p>Open the Decentraland Editor tab, and press</p>

<strong>Run Scene</strong>

<p>Alternatively, you can use the command line. Inside this scene root directory run:</p>

<code>npm run start</code>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 license. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>A simple scene with default art meant for Worlds, with 10x10 parcels</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/Office-template

# URL: https://github.com/decentraland-scenes/Office-template

<title>GitHub - decentraland-scenes/Office-template: A template scene with default art, featuring an office. This is built for using in Worlds</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A template scene with default art, featuring an office. This is built for using in Worlds</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/Office-template</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>3</strong>

<h2>Files</h2>

<button>View code</button>

<h1>SDK7 Office Template</h1>

<p>A large template scene with default art, meant for using in Worlds, 10 x 10 parcels. The scene doesn't include anything interactive.</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command inside this scene root directory:</p>

<pre>npm install @dcl/sdk@next</pre>

<strong>Previewing the scene</strong>

<p>Download this full repository from</p>

<p>, including this and several other example scenes on SDK7.</p>

<p>Install the</p>

<p>Open a Visual Studio Code window on this scene's root folder. Not on the root folder of the whole repo, but instead on this sub-folder that belongs to the scene.</p>

<p>Open the Decentraland Editor tab, and press</p>

<strong>Run Scene</strong>

<p>Alternatively, you can use the command line. Inside this scene root directory run:</p>

<code>npm run start</code>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 license. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>A template scene with default art, featuring an office. This is built for using in Worlds</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>1</strong>

<h3>Watchers</h3>

<strong>1</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/Nightclub-template

# URL: https://github.com/decentraland-scenes/Nightclub-template

<title>GitHub - decentraland-scenes/Nightclub-template: A large scene for worlds, with default art, featuring a cool nightclub</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A large scene for worlds, with default art, featuring a cool nightclub</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/Nightclub-template</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>3</strong>

<h2>Files</h2>

<button>View code</button>

<h1>SDK7 Nighclub template</h1>

<p>A large scene with default art for a nightclub. Contains default art, several animated models with effects, that aren't playing by default. It includes a large screen with a video stream.</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command inside this scene root directory:</p>

<pre>npm install @dcl/sdk@next</pre>

<strong>Previewing the scene</strong>

<p>Download this full repository from</p>

<p>, including this and several other example scenes on SDK7.</p>

<p>Install the</p>

<p>Open a Visual Studio Code window on this scene's root folder. Not on the root folder of the whole repo, but instead on this sub-folder that belongs to the scene.</p>

<p>Open the Decentraland Editor tab, and press</p>

<strong>Run Scene</strong>

<p>Alternatively, you can use the command line. Inside this scene root directory run:</p>

<code>npm run start</code>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 license. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>A large scene for worlds, with default art, featuring a cool nightclub</p>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/skybox-ai-sdk7

# URL: https://github.com/decentraland-scenes/skybox-ai-sdk7

<title>GitHub - decentraland-scenes/skybox-ai-sdk7</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/skybox-ai-sdk7</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>15</strong>

<h2>Files</h2>

<button>View code</button>

<h1>AI Generated Skybox</h1>

<p>This scene uses a Blockade Gamesâ</p>

<p>to build a skybox around the player. Note that this requires a pretty large scene area, ideally in a Decentraland World.</p>

<p>The scene maps the texture generated by this tool to a large cube, which is attached to the player's position, and moves together with the player to maintain the illusion of the background being always out of reach.</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command inside this scene root directory:</p>

<pre>npm install @dcl/sdk@next</pre>

<strong>Previewing the scene</strong>

<p>Download this full repository from</p>

<p>, including this and several other example scenes on SDK7.</p>

<p>Install the</p>

<p>Open a Visual Studio Code window on this scene's root folder. Not on the root folder of the whole repo, but instead on this sub-folder that belongs to the scene.</p>

<p>Open the Decentraland Editor tab, and press</p>

<strong>Run Scene</strong>

<p>Alternatively, you can use the command line. Inside this scene root directory run:</p>

<code>npm run start</code>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 license. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/inworld-ai-sdk7

# URL: https://github.com/decentraland-scenes/inworld-ai-sdk7

<title>GitHub - decentraland-scenes/inworld-ai-sdk7</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/inworld-ai-sdk7</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>7</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>84</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Inworld.ai Example</h1>

<p>This is an example scene to create AI NPCs SDK7 backed by</p>

<p>service</p>

<p>Deployed here</p>

<p>Zone (InworldAiSdk7.dcl.eth)</p>

<h2>Code</h2>

<p>RemoteNpc (</p>

<code>src/remoteNpc.ts</code>

<p>) is a new class that wraps the existing NPC object. See for more details there</p>

<p>.</p>

<p>It adds the additional configuration for an NPC that talks to a remote server for the dialog.</p>

<p>StreamedMessage (</p>

<code>src/streamedMsgs.ts</code>

<p>) is a utilty that implements an Iterator pattern to enable the scene to group messages from Inworld and use them with the NPC Dialog in a serial and squential way.</p>

<code>received stream of all Inworld messages all at once

show utterance1

player clicks next

show utterance2

player clicks next</code>

<h2>Customize</h2>

<code>src/NPCs/customUi.ts</code>

<p>creates a custom 2D UI to enable the player to type a question for the NPC. Customize this as you want</p>

<h2>Configuration</h2>

<h3>Scene</h3>

<p>You may want to configure endpoints for your local environment in the instance where you do not want or need to run Colyseus and login server locally</p>

<p>Found in</p>

<code>src/config.ts</code>

<p>there are variables in the following format so you could have configurations for multiple environments</p>

<code>const VARIABLE: Record<string, string> = {

local: "local value",

dev: "dev value",

stg: "staging value",

prd: "production value",

};</code>

<code>ENV</code>

<p>- The environment for which values are to be used (local,dev,prod,etc.)</p>

<code>COLYSEUS_ENDPOINT_URL</code>

<p>- Websocker endpoint</p>

<code>const COLYSEUS_ENDPOINT_URL: Record<string, string> = {

local: "ws://127.0.0.1:2567",  //default local server port

dev: "YOUR-DEV-ENDPOINT-HERE",

stg: "YOUR-STG-ENDPOINT-HERE",

prd: "YOUR-PROD-ENDPOINT-HERE",

};</code>

<h3>Should you make your own Inworld Scene and Characters</h3>

<p>src/npcSetup.ts</p>

<code>const myRemoteNPC = new RemoteNpc(

{resourceName:"workspaces/{SCENE_NAME_HERE/characters/{CHARACTER_NAME_HERE}"}

//CONFIG FOR NPC (from dcl-npc-tookit)

{

type: npcLib.NPCType.CUSTOM,

model: {},

onActivate: () => {}

},

//ADDITIONAL CONFIG FOR REMOTE NPC

{

predefinedQuestions: NpcQuestionData[],

npcAnimations:DOGE_NPC_ANIMATIONS,

thinking:{

enabled:true,

model: new GLTFShape('models/loading-icon.glb'),

offsetX: 0,

offsetY: 2 ,

offsetZ: 0

}

,onEndOfRemoteInteractionStream: ()=>{

showInputOverlay(true)

}

,onEndOfInteraction: ()=>{

//end of interaction

}

}

}</code>

<h2>Try it out</h2>

<h4>Run Colyseus (Multiplayer server) (seperate tab)</h4>

<p>Optional...if you only want to see the code in action no need run the proxy server. The example scene is pointed our Genesis Plaza proxy server so you should be able to fully run these example scene without the server side. Should you choose create your own scene and characters you will need to run your own server.</p>

<p>To create your own scene and characters follow the documentation found here</p>

<p>. Once you are finished run your local server.</p>

<p>Instructions here</p>

<p>Default endpoint can be found at</p>

<p>In the Decentrlaand scene code Change in src/config.ts to point at your local</p>

<code>const ENV = "prd"

to

const ENV = "local"</code>

<p>This will make is so your scene uses local: "ws://127.0.0.1:2567" from the COLYSEUS_ENDPOINT_URL varaible</p>

<p>Full instructions for running the proxy server can be found here Instructions here</p>

<h4>Run Decentraland Scene (seperate tab)</h4>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$:  npm run start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<strong>Scene Usage</strong>

<p>Click on the NPC to start a conversation, use E and F keys to choose options when prompted.</p>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<p>If something doesnât work, please</p>

<p>.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>1</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/run-decentraland-scene-seperate-tab

# Change to URL: https://github.com/decentraland-scenes/avocado

# URL: https://github.com/decentraland-scenes/avocado

<title>GitHub - decentraland-scenes/avocado: Basic 101 Avocado Tutorial</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Basic 101 Avocado Tutorial</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/avocado</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>4</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>4</strong>

<h2>Files</h2>

<button>View code</button>

<h2>Avocado</h2>

<p>A 101 first example scene to learn the basics of the Decentraland SDK.</p>

<p>See</p>

<p>This scene shows you:</p>

<li>How to add an entity</li>

<li>How to assign a 3D model to an entity</li>

<li>How to position an entity</li>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$:  dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<strong>Scene Usage</strong>

<p>Click on the door to open and close it.</p>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<p>If something doesnât work, please</p>

<p>.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>Basic 101 Avocado Tutorial</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>8</strong>

<h3>Watchers</h3>

<strong>3</strong>

<h3>Forks</h3>

<strong>5</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/wearables-store

# URL: https://github.com/decentraland-scenes/wearables-store

<title>GitHub - decentraland-scenes/wearables-store</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/wearables-store</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>3</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>39</strong>

<h2>Files</h2>

<button>View code</button>

<p>Flat Screen TV version of the Decentraland Wearable store

by DOCTORdripp</p>

<p>This 1-tier flat screen revision can be repurposed onto any flat space. Optionally replace</p>

<code>models/menu/wardrobe.glb</code>

<p>with your custom model or an empty model if you wish to position a flat store on a wall.</p>

<h1>Wearables Store</h1>

<p>This store allows you to purchase wearables on the Polygon L2 layer from an in-world.</p>

<p>The scene is configured to display all of the wearables currently on sale on L2. You can configure this scene to only display certain collections of wearables, for example to have a private store with only your collections.</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$:  dcl start --web3</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<p>Note: When running a preview of a scene that uses one of the ethereum libraries, you must have Metamask or Dapper open and you must add this string.</p>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<p>If something doesnât work, please</p>

<p>.</p>

<h2>Scene usage</h2>

<p>Click on the menu on the right to navigate the different collections. When a collection is selected, use E and F to scroll through the different items in that collection. Then select an item to see more details.</p>

<p>To buy an item, hit the</p>

<code>Buy</code>

<p>button. Note that you must be connected with a web3 browser extension by starting the preview with</p>

<code>dcl start --web3</code>

<p>, and the connected account must have MANA on the Polygon network.</p>

<p>On your first transaction, the UI will ask you to first sign an approval for letting this contract spend your Polygon MANA. This transaction is free of charge, as it runs on the Polygon network.</p>

<p>As of then, any purchases you do via this store will require no gas, only the cost in MANA of the item itself. You approve them by signing a message on Metamask or your web3 browser extension of choice.</p>

<h2>Customize</h2>

<p>In the current scene, in game.ts, you'll notice there are two wearable wardrobes being created. A simple one that by default displays all of the available L2 wearables, and one that is configured to only display specific collections.</p>

<pre>:</pre>

<pre>:</pre>

<p>The</p>

<code>createWearableStore()</code>

<p>function takes the following arguments</p>

<li>A transform component, with position, rotation & scale</li>

<li>An optional array of all the wearable collections you want it to display. If none are provided, it displays all wearables in L2.</li>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>10</strong>

<h3>Watchers</h3>

<strong>5</strong>

<h3>Forks</h3>

<strong>7</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/orgs/decentraland-scenes/repositories?page=2&type=all

# URL: https://github.com/orgs/decentraland-scenes/repositories?page=2&type=all

<title>decentraland-scenes Â· GitHub</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<h2>Repositories</h2>

<p>A zombie will chase you around and attack you once it gets near.</p>

<p>Crypto Valley art gallery</p>

<p>This scene demonstrates how to synchronize actions in the scene to specific moments in a video by implementing the Show Management Library</p>

<p>Signed fetch base implementation</p>

<p>The full Soho Plaza in Genesis City</p>

<p>Dressable AvatarShape scene where the user can flip through several wearables and outfits on a mannequin</p>

<p>Decentraland Foundation HQ Building</p>

<p>A puffer fish that inflates and deflates when clicked. This scene uses the Utils library.</p>

<p>A cutting edge racing game</p>

<p>A simple scene showing how to create a leader board for high scores</p>

<p>Sign a guestbook. User names are stored in a RESFful API, whic is also included in this repo.</p>

<p>A musical sequencer based on dragging stones into position</p>

<p>Tutorial for multiplayer with Colyseus</p>

<p>Route OSC messages to Decentraland scenes, via Colyseus</p>

<p>A multiplayer game with websockets</p>

<p>A simple scene with an interactive booth that gives out POAP tokens to certify the player's attendance to an event</p>

<em>2</em>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/AI_Generated-skybox_SDK7

# URL: https://github.com/decentraland-scenes/AI_Generated-skybox_SDK7

<title>decentraland-scenes/AI_Generated-skybox_SDK7 Â· GitHub</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<tool-tip>Additional navigation options</tool-tip>

<h3>This repository is empty.</h3>

<p>Care to check out the</p>

<p>while you wait?</p>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/dcl-npc-toolkit-demo

# URL: https://github.com/decentraland-scenes/dcl-npc-toolkit-demo

<title>GitHub - decentraland-scenes/dcl-npc-toolkit-demo</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/dcl-npc-toolkit-demo</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>2</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>12</strong>

<h2>Files</h2>

<button>View code</button>

<h1>NPC-library</h1>

<p>A collection of tools for creating Non-Player-Characters (NPCs). These are capable of having conversations with the player, and play different animations.</p>

<p>Capabilities of the NPCs in this library:</p>

<p>Start a conversation when clicked or when walking near</p>

<p>Trigger any action when clicked or when walking near</p>

<p>Trigger any action when the player walks away</p>

<p>Turn around slowly to always face the player</p>

<p>Play an animation in the NPC 3d model, optionally returning to loop the idle animation afterwards</p>

<p>The dialog messages can also require that the player chooses options, and any action can be triggered when the player picks an option or advances past a message.</p>

<p>To use NPCs in your scene:</p>

<li>Install the library as an npm bundle. Run this command in your scene's project folder:</li>

<code>npm i dcl-npc-toolkit -B</code>

<p>Run</p>

<code>dcl start</code>

<p>or</p>

<code>dcl build</code>

<p>so the dependencies are correctly installed.</p>

<p>Import the library into the scene's script. Add this line at the start of your</p>

<code>game.ts</code>

<p>file, or any other TypeScript files that require it:</p>

<li>In your TypeScript file, call the</li>

<code>create</code>

<li>function passing it a</li>

<code>TransformType</code>

<li>and a</li>

<code>NPCData</code>

<li>object. The</li>

<code>NPCData</code>

<li>object requires a minimum of a</li>

<code>NPCType</code>

<li>and a function to trigger when the NPC is activated:</li>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<li>Write a dialog script for your character, preferably on a separate file, making it of type</li>

<code>Dialog[]</code>

<li>.</li>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<h2>NPC Default Behavior</h2>

<p>NPCs at the very least must have:</p>

<code>position</code>

<p>: (</p>

<em>TransformType</em>

<p>) Must include position, rotation and scale.</p>

<code>NPCData</code>

<p>: (</p>

<em>Data Object</em>

<p>) with a minimum of two variables</p>

<code>type</code>

<p>: (</p>

<em>NPCType</em>

<p>) you have the choice to use a custom GLB object or an</p>

<code>AvatarShape</code>

<p>for your npc</p>

<code>NPCType.CUSTOM</code>

<code>NPCType.AVATAR</code>

<code>onActivate()</code>

<p>: (</p>

<em>()=> void</em>

<p>) A function to call when the NPC is activated.</p>

<em>if you decide to use a</em>

<code>NPCType.CUSTOM</code>

<em>GLB model for your avatar, you must pass in a model object inside the</em>

<code>NPCData</code>

<code>model</code>

<li>: (</li>

<em>string</em>

<li>) The path to a 3D model</li>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<p>With this default configuration, the NPC behaves in the following way:</p>

<p>The</p>

<code>onActivate()</code>

<p>function is called when pressing E on the NPC, and when the player walks near at a distance of 6 meters.</p>

<p>Once activated, there's a cooldown period of 5 seconds, that prevents the NPC to be activated again.</p>

<p>After walking away from the NPC, if its dialog window was open it will be closed, and if the NPC was rotating to follow the player it will stop.</p>

<p>If the NPC already has an open dialog window, clicking on the NPC won't do anything, to prevent accidentally clicking on it while flipping through the conversation.</p>

<p>If the NPC has an animation named 'Idle', it will play it in a loop. If other non-looping animations are played, it will return to looping the 'Idle' animation after the indicated duration.</p>

<p>Many of these behaviors can be overridden or tweaked with the exposed properties.</p>

<h2>NPC Additional Properties</h2>

<p>To configure other properties of an NPC, add a fourth argument as an</p>

<code>NPCData</code>

<p>object. This object can have the following optional properties:</p>

<code>idleAnim</code>

<p>:</p>

<em>(string)</em>

<p>Name of the idle animation in the model. This animation is always looped. After playing a non-looping animation it returns to looping this one.</p>

<code>faceUser</code>

<p>:</p>

<em>(boolean)</em>

<p>Set if the NPC rotates to face the user while active.</p>

<code>dialogSound</code>

<p>:</p>

<em>(string)</em>

<p>Path to sound file to play once for every entry shown on the UI. If the dialog entry being shown has an</p>

<code>audio</code>

<p>field, the NPC will play the file referenced by the</p>

<code>audio</code>

<p>field instead.</p>

<code>coolDownDuration</code>

<p>:</p>

<em>(number)</em>

<p>Change the cooldown period for activating the NPC again. The number is in seconds.</p>

<code>hoverText</code>

<p>:</p>

<em>(string)</em>

<p>Set the UI hover feedback when pointing the cursor at the NPC.</p>

<em>TALK</em>

<p>by default.</p>

<code>onlyClickTrigger</code>

<p>:</p>

<em>(boolean)</em>

<p>If true, the NPC can't be activated by walking near. Just by clicking on it or calling its</p>

<code>activate()</code>

<p>function.</p>

<code>onlyETrigger</code>

<p>:</p>

<em>(boolean)</em>

<p>If true, the NPC can't be activated by walking near. Just by pressing the E key on it or calling its</p>

<code>activate()</code>

<p>function.</p>

<code>onlyExternalTrigger</code>

<p>:</p>

<em>(boolean)</em>

<p>If true, the NPC can't be activated by clicking, pressing E, or walking near. Just by calling its</p>

<code>activate()</code>

<p>function.</p>

<code>reactDistance</code>

<p>:</p>

<em>(number)</em>

<p>Radius in meters for the player to activate the NPC or trigger the</p>

<code>onWalkAway()</code>

<p>function when leaving the radius.</p>

<code>continueOnWalkAway</code>

<p>:</p>

<em>(boolean)</em>

<p>If true,when the player walks out of the</p>

<code>reactDistance</code>

<p>radius, the dialog window stays open and the NPC keeps turning to face the player (if applicable). It doesn't affect the triggering of the</p>

<code>onWalkAway()</code>

<p>function.</p>

<code>onWalkAway</code>

<p>: (</p>

<em>()=> void</em>

<p>) Function to call every time the player walks out of the</p>

<code>reactDistance</code>

<p>radius.</p>

<code>walkingAnim</code>

<p>:</p>

<em>(string)</em>

<p>Name of the walking animation on the model. This animation is looped when calling the</p>

<code>followPath()</code>

<p>function.</p>

<code>walkingSpeed</code>

<p>:</p>

<em>(number)</em>

<p>Speed of the NPC when walking. By default</p>

<em>2</em>

<p>.</p>

<code>path</code>

<p>:</p>

<em>(Vector3)</em>

<p>Default path to walk. If a value is provided for this field on NPC initialization, the NPC will walk over this path in loop from the start.</p>

<code>noUI</code>

<p>:</p>

<em>(boolean)</em>

<p>If true, no UI object is built for UI dialogs for this NPC. This may help optimize the scene if this feature is not used.</p>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<h2>Get NPC Data</h2>

<p>There are several properties you can check on an NPC to know what its current state is:</p>

<code>.state</code>

<p>: An enum value of type</p>

<code>NPCState</code>

<p>. Supported values are</p>

<code>NPCState.STANDING</code>

<p>(default),</p>

<code>NPCState.TALKING</code>

<p>, and</p>

<code>NPCState.FOLLOWPATH</code>

<p>.</p>

<code>TALKING</code>

<p>is applied when the dialog window is opened, and set back to</p>

<code>STANDING</code>

<p>when the window is closed.</p>

<code>FOLLOWPATH</code>

<p>is applied when the NPC starts walking, and set back to</p>

<code>STANDING</code>

<p>when the NPC finishes its path or is stopped.</p>

<code>.introduced</code>

<p>: Boolean, false by default. Set to true if the NPC has spoken to the player at least once in this session.</p>

<code>.visible</code>

<p>: Returns a Boolean, false by default. True if the dialog window for this NPC is currently open.</p>

<code>.inCooldown</code>

<p>: Boolean, false by default. True if the NPC was recently activated and it's now in cooldown. The NPC won't respond to being activated till</p>

<code>inCooldown</code>

<p>is false.</p>

<p>TIP: If you want to force an activation of the NPC in spite of the</p>

<code>inCooldown</code>

<p>value, you can force this value to true before activating.</p>

<h2>NPC Callable Actions</h2>

<p>An NPC object has several callable functions that come with the class:</p>

<h3>Talk</h3>

<p>To start a conversation with the NPC using the dialog UI, call the</p>

<code>talk()</code>

<p>function. The function takes the following</p>

<strong>required</strong>

<p>parameter:</p>

<code>script</code>

<li>:</li>

<em>(Dialog[])</em>

<li>This array contains the information to manage the conversation, including events that may be triggered, options to choose, etc.</li>

<p>It can also take the following optional parameters:</p>

<code>startIndex</code>

<p>:</p>

<em>(number | string)</em>

<p>The</p>

<em>Dialog</em>

<p>object from the</p>

<code>script</code>

<p>array to open first. By default this is</p>

<em>0</em>

<p>, the first element of the array. Pass a number to open the entry on a given array position, or pass a string to open the entry with a</p>

<code>name</code>

<p>property matching that string.</p>

<code>duration</code>

<p>:</p>

<em>(number)</em>

<p>Number of seconds to wait before closing the dialog window. If no value is set, the window is kept open till the player reaches the end of the conversation or something else closes it.</p>

<p>Learn how to build a script object for NPCs in a section below.</p>

<h3>Play Animations</h3>

<p>By default, the NPC will loop an animation named 'Idle', or with a name passed in the</p>

<code>idleAnim</code>

<p>parameter.</p>

<p>Make the NPC play another animation by calling the</p>

<code>playAnimation()</code>

<p>function. The function takes the following</p>

<strong>required</strong>

<p>parameter:</p>

<code>animationName</code>

<li>:</li>

<em>(string)</em>

<li>The name of the animation to play.</li>

<p>It can also take the following optional parameters:</p>

<code>noLoop</code>

<p>:</p>

<em>(boolean)</em>

<p>If true, plays the animation just once. Otherwise, the animation is looped.</p>

<code>duration</code>

<p>:</p>

<em>(number)</em>

<p>Specifies the duration in seconds of the animation. When finished, it returns to playing the idle animation.</p>

<p>Note: If</p>

<code>noLoop</code>

<p>is true but no</p>

<code>duration</code>

<p>is set, the model will stay still after playing the animation instead of returning to the idle animation.</p>

<h3>Change idle animation</h3>

<p>The NPC's idle animation is looped by default whenever the NPC is not playing any other animations. In some cases you may want to have different idle animations depending on the circumstances, like while in a conversation, or if the NPC changes its general attitude after some event.</p>

<p>You set the NPC's idle animation when creating the NPC, using the</p>

<code>idleAnim</code>

<p>field. To change this animation at some later time, use</p>

<code>changeIdleAnim()</code>

<p>.</p>

<p>The</p>

<code>changeIdleAnim()</code>

<p>function takes two arguments:</p>

<code>animation</code>

<p>: The name of the new animation to set as the idle animation</p>

<code>play</code>

<p>: Optionally pass this value as</p>

<em>true</em>

<p>if you want this new animation to start playing right away.</p>

<h3>Activate</h3>

<p>The</p>

<code>activate()</code>

<p>function can be used to trigger the</p>

<code>onActivate()</code>

<p>function, as an alternative to pressing E or walking near.</p>

<p>The</p>

<code>activate()</code>

<p>function is callable even when in cool down period, and it doesn't start a new cool down period.</p>

<h3>Stop Walking</h3>

<p>If the NPC is currently walking, call</p>

<code>stopWalking()</code>

<p>to stop it moving and return to playing its idle animation.</p>

<code>stopWalking()</code>

<p>can be called with no parameters, or it can also be called with:</p>

<code>duration</code>

<li>: Seconds to wait before starting to walk again. If not provided, the NPC will stop walking indefinitely.</li>

<p>Note: If the NPC is has its dialog window open when the timer for the</p>

<code>duration</code>

<p>ends, the NPC will not return to walking.</p>

<p>To make the NPC play a different animation from idle when paused, call</p>

<code>playAnimation()</code>

<p>after</p>

<code>stopWalking()</code>

<p>.</p>

<h3>Follow Path</h3>

<p>Make an NPC walk following a path of</p>

<code>Vector3</code>

<p>points by calling</p>

<code>followPath()</code>

<p>. While walking, the NPC will play the</p>

<code>walkingAnim</code>

<p>if one was set when defining the NPC. The path can be taken once or on a loop.</p>

<code>followPath()</code>

<p>can be called with no parameters if a</p>

<code>path</code>

<p>was already provided in the NPC's initialization or in a previous calling of</p>

<code>followPath()</code>

<p>. If the NPC was previously in the middle of walking a path and was interrupted, calling</p>

<code>followPath()</code>

<p>again with no arguments will return the NPC to that path.</p>

<p>Note: If the NPC is initialized with a</p>

<code>path</code>

<p>value, it will start out walking that path in a loop, no need to run</p>

<code>followPath()</code>

<p>.</p>

<code>followPath()</code>

<p>has a single optional parameter of type</p>

<code>FollowPathData</code>

<p>. This object may have the following optional fields:</p>

<p>path: Array of</p>

<code>Vector3</code>

<p>positions to walk over.</p>

<p>speed: Speed to move at while walking this path. If no</p>

<code>speed</code>

<p>or</p>

<code>totalDuration</code>

<p>is provided, it uses the NPC's</p>

<code>walkingSpeed</code>

<p>, which is</p>

<em>2</em>

<p>by default.</p>

<p>totalDuration: The duration in</p>

<em>seconds</em>

<p>that the whole path should take. The NPC will move at the constant speed required to finish in that time. This value overrides that of the</p>

<em>speed</em>

<p>.</p>

<p>loop:</p>

<em>boolean</em>

<p>If true, the NPC walks in circles over the provided set of points in the path.</p>

<em>false</em>

<p>by default, unless the NPC is initiated with a</p>

<code>path</code>

<p>, in which case it starts as</p>

<em>true</em>

<p>.</p>

<p>curve:</p>

<em>boolean</em>

<p>If true, the path is traced a single smooth curve that passes over each of the indicated points. The curve is made out of straight-line segments, the path is stored with 4 times as many points as originally defined.</p>

<em>false</em>

<p>by default.</p>

<p>startingPoint: Index position for what point to start from on the path.</p>

<em>0</em>

<p>by default.</p>

<p>onFinishCallback: Function to call when the NPC finished walking over all the points on the path. This is only called when</p>

<code>loop</code>

<p>is</p>

<em>false</em>

<p>.</p>

<p>onReachedPointCallback: Function to call once every time the NPC reaches a point in the path.</p>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<h4>NPC Walking Speed</h4>

<p>The following list of factors are used to determine speed in hierarchical order:</p>

<code>totalDuration</code>

<p>parameter set when calling</p>

<code>followPath()</code>

<p>is used over the total distance travelled over the path.</p>

<code>speed</code>

<p>parameter set when calling</p>

<code>followPath()</code>

<code>walkingSpeed</code>

<p>parameter set when initializing NPC</p>

<p>Default value</p>

<em>2</em>

<p>.</p>

<h4>Joining the path</h4>

<p>If the NPC's current position when calling</p>

<code>followPath()</code>

<p>doesn't match the first position in the</p>

<code>path</code>

<p>array (or the one that matches the</p>

<code>startingPoint</code>

<p>value), the current position is added to the</p>

<code>path</code>

<p>array. The NPC will start by walking from its current position to the first point provided in the path.</p>

<p>The</p>

<code>path</code>

<p>can be a single point, and the NPC will then walk a from its current position to that point.</p>

<p>Note: If the speed of the NPC is determined by a</p>

<code>totalDuration</code>

<p>value, the segment that the NPC walks to join into the path is counted as part of the full path. If this segment is long, it will increase the NPC walking speed so that the full path lasts as what's indicated by the</p>

<code>totalDuration</code>

<p>.</p>

<p>In this example the NPC is far away from the start of the path. It will first walk from</p>

<em>10, 0, 10</em>

<p>to</p>

<em>2, 0, 2</em>

<p>and then continue the path.</p>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<h4>Example Interrupting the NPC</h4>

<p>In the following example, an NPC starts roaming walking over a path, pausing on every point to call out for its lost kitten. If the player activates the NPC (by pressing E on it or walking near it) the NPC stops, and turns to face the player and talk. When the conversation is over, the NPC returns to walking its path from where it left off.</p>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<h3>End interaction</h3>

<p>The</p>

<code>endInteraction()</code>

<p>function can be used to abruptly end interactions with the NPC.</p>

<p>If applicable, it closes the dialog UI, hides speech bubbles, and makes the NPC stop rotating to face the player.</p>

<p>As an alternative, you can call the</p>

<code>handleWalkAway()</code>

<p>function, which has the same effects (as long as</p>

<code>continueOnWalkAway</code>

<p>isn't set to true), but also triggers the</p>

<code>onWalkAway()</code>

<p>function.</p>

<h2>NPC Dialog Window</h2>

<p>You can display an interactive dialog window to simulate a conversation with a non-player character (NPC).</p>

<p>The conversation is based on a script in JSON format. The script can include questions that can take you forward or backward, or end the conversation.</p>

<h3>The NPC script</h3>

<p>Each entry on the script must include at least a</p>

<code>text</code>

<p>field, but can include several more fields to further customize it.</p>

<p>Below is a minimal dialog.</p>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<p>The player advances through each entry by clicking the mouse button. Once the last is reached, clicking again closes the window, as it's marked as</p>

<code>isEndOfDialog</code>

<p>.</p>

<p>The script must adhere to the following schema:</p>

<pre>:</pre>

<pre>?:</pre>

<pre>?:</pre>

<pre>?:</pre>

<pre>?:</pre>

<pre>?:</pre>

<pre>?:</pre>

<pre>?:</pre>

<p>Note: A</p>

<code>Dialog</code>

<p>object can be used as an input both for the</p>

<code>talk()</code>

<p>function (that is displayed in the UI), and the</p>

<code>talkBubble()</code>

<p>function (that is displayed in a floating bubble over the NPC). Properties marked with</p>

<code>*</code>

<p>are only applicable to UI dialogs.</p>

<p>You can set the following fields to change the appearance of a dialog:</p>

<code>text</code>

<p>: The dialog text</p>

<code>fontSize</code>

<p>: Size of the text</p>

<p>Other fields:</p>

<code>buttons *</code>

<p>: An array of buttons to use in a question entry, covered in the next section.</p>

<code>audio</code>

<p>: String with the path to an audio file to play once when this dialog is shown on the UI.</p>

<code>typeSpeed</code>

<p>: The text appears one character at a time, simulating typing. Players can click to skip the animation. Tune the speed of this typing (30 by default) to go slower or faster. Set to</p>

<em>-1</em>

<p>to skip the animation.</p>

<h4>Questions and conversation trees</h4>

<p>The script can include questions that prompt the player to pick between two or up to four options. These questions can branch the conversation out and trigger other actions in the scene.</p>

<p>Note: Questions are only used by UI dialogs. If used in a speech bubble, questions will be displayed as regular entries with no buttons or options.</p>

<p>To make an entry a question, set the</p>

<code>isQuestion</code>

<p>field to</p>

<em>true</em>

<p>. This displays a set of buttons rather than the click icon. It also disables the click to advance to the next entry.</p>

<p>The</p>

<code>buttons</code>

<p>property of an entry contains an array of</p>

<code>ButtonData</code>

<p>objects, each one of these defines one button.</p>

<p>When on a question entry, you must provide at least the following for each button:</p>

<code>label</code>

<p>:</p>

<em>(string)</em>

<p>The label to show on the button.</p>

<code>goToDialog</code>

<p>:</p>

<em>(number | string)</em>

<p>The index or name of the next dialog entry to display when activated.</p>

<p>TIP: It's always better to refer to an entry by name, since the array index might shift if you add more entries and it can get hard to keep track of these references.</p>

<p>You can also set the following:</p>

<code>triggeredActions</code>

<p>:</p>

<em>( () => void )</em>

<p>An additional function to run whenever the button is activated</p>

<code>fontSize</code>

<p>:</p>

<em>(number)</em>

<p>Font size of the text</p>

<code>offsetX</code>

<p>:</p>

<em>(number)</em>

<p>Offset of the label on the X axis, relative to its normal position.</p>

<code>offsetY</code>

<p>:</p>

<em>(number)</em>

<p>Offset of the label on the Y axis, relative to its normal position.</p>

<p>All buttons can be clicked to activate them. Additionally, the first button in the array can be activated by pressing the</p>

<em>E</em>

<p>key. The second button in the array can be activated by pressing the</p>

<em>F</em>

<p>key,</p>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<h4>Triggering functions from the dialog</h4>

<p>You can run functions that may affect any other part of your scene. These functions get triggered when the player interacts with the dialog window, or when the NPC displays speech bubbles.</p>

<code>triggeredByNext</code>

<p>: Is executed when the player advances to the next dialog on a non-question dialog. The function also gets called if the dialog is the end of the conversation. It also gets called when a speech bubble advances to the next entry.</p>

<code>triggeredActions</code>

<p>: This property is associated to a button and is executed on a question dialog if the player activates the corresponding button. You can have up to 4 different buttons per entry, each with its own actions.</p>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<pre>:</pre>

<h2>No-NPC Dialogs</h2>

<p>You can open a Dialog window that isn't associated with any</p>

<code>NPC</code>

<p>object in the scene. The</p>

<code>openDialogWindow()</code>

<p>function has all the same functionality as calling the</p>

<code>talk()</code>

<p>function on an NPC, but may be more practical in scenarios where a character isn't physically there, or where the conversation isn't with a particular character.</p>

<h3>The Dialog window</h3>

<p>To create a new dialog window, call</p>

<code>createDialogWindow()</code>

<p>and store as a variable. This will instantiate the window but keep it hidden until you open it.</p>

<p>When instantiating a new blank dialog, you can pass the following optional parameters:</p>

<code>defaultPortrait</code>

<p>: Sets a default portrait image to use on the left of all dialogs that don't specify an image. If a dialog has no portrait and no default is provided, no image is shown on the left. This field expects a</p>

<code>Portrait</code>

<p>object, that may include the following fields: -</p>

<code>path</code>

<p>: Path to the image file -</p>

<code>xOffset</code>

<p>: Offset on X, relative to the normal position of the portrait. -</p>

<code>yOffset</code>

<p>: Offset on Y, relative to the normal position of the portrait. -</p>

<code>section</code>

<p>: Use only a section of the image file, useful when arranging multiple icons into an image atlas. This field takes an</p>

<code>ImageSection</code>

<p>object, specifying</p>

<code>sourceWidth</code>

<p>and</p>

<code>sourceHeight</code>

<p>, and optionally also</p>

<code>sourceLeft</code>

<p>and</p>

<code>sourceTop</code>

<p>.</p>

<code>useDarkTheme</code>

<p>: Switch the style of the window to the dark theme.</p>

<code>sound</code>

<p>: Path to a sound file that will be played once for every dialog entry shown, as long as the dialog entry doesn't have its own</p>

<code>audio</code>

<p>property.</p>

<p>Once you have created a dialog window, you can open a dialog window with the</p>

<code>openDialogWindow()</code>

<p>function.</p>

<p>When calling this function, you must specify:</p>

<code>NPCScript</code>

<li>: A JSON object composed of an array of</li>

<code>Dialog</code>

<li>objects, that includes all the dialog tree.</li>

<p>A second optional parameter is also available:</p>

<code>textId</code>

<li>: The index or</li>

<code>name</code>

<li>property of the entry to show first from the script. The first entry is 0.</li>

<p>TIP: It's always better to refer to an entry by name, since the array index might shift if you add more entries and it can get hard to keep track of these references.</p>

<p>Close a dialog window at any time by calling the</p>

<code>closeDialogWindow()</code>

<p>function.</p>

<p>For details on how to construct the dialog tree, see the sections above. The required</p>

<code>NPCScript</code>

<p>by the</p>

<code>DialogWindow</code>

<p>has exactly the same characteristics as the one used on the</p>

<code>NPC</code>

<p>object when calling the</p>

<code>talk()</code>

<p>function.</p>

<h2>Contribute</h2>

<p>In order to test changes made to this repository in active scenes, do the following:</p>

<p>Run</p>

<code>npm run build</code>

<p>for the internal files of the library to be generated</p>

<p>Run</p>

<code>npm run link</code>

<p>on this repository</p>

<p>On a new Decentraland scene, import this library as you normally would and include the tests you need</p>

<p>On the scene directory, run</p>

<code>npm link dcl-npc-toolkit</code>

<p>Note: When done testing, run</p>

<code>npm unlink</code>

<p>on both folders, so that the scene stops using the local version of the library.</p>

<h2>CI/CD</h2>

<p>This repository uses</p>

<code>semantic-release</code>

<p>to automatically release new versions of the package to NPM.</p>

<p>Use the following convention for commit names:</p>

<code>feat: something</code>

<p>: Minor release, every time you add a feature or enhancement that doesnât break the api.</p>

<code>fix: something</code>

<p>: Bug fixing / patch</p>

<code>chore: something</code>

<p>: Anything that doesn't require a release to npm, like changing the readme. Updating a dependency is</p>

<strong>not</strong>

<p>a chore if it fixes a bug or a vulnerability, that's a</p>

<code>fix</code>

<p>.</p>

<p>If you break the API of the library, you need to do a major release, and that's done a different way. You need to add a second comment that starts with</p>

<code>BREAKING CHANGE</code>

<p>, like:</p>

<code>commit -m "feat: changed the signature of a method" -m "BREAKING CHANGE: this commit breaks the API, changing foo(arg1) to foo(arg1, arg2)"</code>

<h2>About</h2>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/inworld-ai-sdk6

# URL: https://github.com/decentraland-scenes/inworld-ai-sdk6

<title>GitHub - decentraland-scenes/inworld-ai-sdk6</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/inworld-ai-sdk6</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>4</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>39</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Inworld.ai Example</h1>

<p>This is an example scene to create AI NPCs backed by</p>

<p>service</p>

<p>Deployed here</p>

<p>Zone (InworldAiSdk6.dcl.eth)</p>

<h2>Code</h2>

<p>RemoteNpc (</p>

<code>src/aiNpc/npc/remoteNpc.ts</code>

<p>) is a new class that wraps the existing NPC object.  See for more details there</p>

<p>.</p>

<p>It adds the additional configuration for an NPC that talks to a remote server for the dialog.</p>

<p>StreamedMessage (</p>

<code>src/aiNpc/npc/streamedMsgs.ts</code>

<p>) is a utilty that implements an Iterator pattern to enable the scene to group messages from Inworld AI and use them with the NPC Dialog in a serial and squential way.</p>

<code>received stream of all Inworld AI messages all at once

show utterance1

player clicks next

show utterance2

player clicks next</code>

<h2>Customize</h2>

<code>src/aiNpc/npc/customNPCUI.ts</code>

<p>creates a custom 2D UI to enable the player to type a question for the NPC.  Customize this as you want</p>

<h2>Configuration</h2>

<h3>Scene</h3>

<p>You may want to configure endpoints for your local environment in the instance where you do not want or need to run Colyseus and login server locally</p>

<p>Found in</p>

<code>src/config.ts</code>

<p>there are variables in the following format so you could have configurations for multiple environments</p>

<code>const VARIABLE: Record<string, string> = {

local: "local value",

dev: "dev value",

stg: "staging value",

prd: "production value",

};</code>

<code>ENV</code>

<p>- The environment for which values are to be used (local,dev,prod,etc.)</p>

<code>COLYSEUS_ENDPOINT_URL</code>

<p>- Websocker endpoint</p>

<code>const COLYSEUS_ENDPOINT_URL: Record<string, string> = {

local: "ws://127.0.0.1:2567",  //default local server port

dev: "YOUR-DEV-ENDPOINT-HERE",

stg: "YOUR-STG-ENDPOINT-HERE",

prd: "YOUR-PROD-ENDPOINT-HERE",

};</code>

<h3>Should you make your own Inworld AI Scene and Characters</h3>

<p>src/aiNpc/npc/npcSetup.ts</p>

<code>const myRemoteNPC = new RemoteNpc(

{resourceName:"workspaces/{SCENE_NAME_HERE/characters/{CHARACTER_NAME_HERE}"}

, new npc.NPC( .... )//YOUR NPC_OBJECT_FROM @dcl/npc-scene-utils

//ADDITIONAL CONFIG FOR REMOTE NPC

{

npcAnimations:DOGE_NPC_ANIMATIONS,

thinking:{

enabled:true,

model: new GLTFShape('models/loading-icon.glb'),

offsetX: 0,

offsetY: 2 ,

offsetZ: 0

}

,onEndOfRemoteInteractionStream: ()=>{

showInputOverlay(true)

}

,onEndOfInteraction: ()=>{

//end of interaction

}

}

}</code>

<h2>Try it out</h2>

<h4>Run Colyseus (Multiplayer server) (seperate tab)</h4>

<p>Optional...if you only want to see the code in action no need run the proxy server.  The example scene is pointed our Genesis Plaza proxy server so you should be able to fully run these example scene without the server side.  Should you choose create your own scene and characters you will need to run your own server.</p>

<p>To create your own scene and characters follow the documentation found here</p>

<p>.   Once you are finished run your local server.</p>

<p>Instructions here</p>

<p>Default endpoint can be found at</p>

<p>In the Decentrlaand scene code Change in src/config.ts to point at your local</p>

<code>const ENV = "prd"

to

const ENV = "local"</code>

<p>This will make is so your scene uses local: "ws://127.0.0.1:2567" from the COLYSEUS_ENDPOINT_URL varaible</p>

<p>Full instructions for running the proxy server can be found here Instructions here</p>

<h4>Run Decentraland Scene (seperate tab)</h4>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$:  dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<strong>Scene Usage</strong>

<p>Click on the NPC to start a conversation, use E and F keys to choose options when prompted.</p>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<p>If something doesnât work, please</p>

<p>.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>2</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>2</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/Importing-Modules

# URL: https://github.com/decentraland-scenes/Importing-Modules

<title>GitHub - decentraland-scenes/Importing-Modules</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/Importing-Modules</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>4</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>1</strong>

<h2>Files</h2>

<button>View code</button>

<h2>About</h2>

<h3>Topics</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>3</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/zombie-attack

# URL: https://github.com/decentraland-scenes/zombie-attack

<title>GitHub - decentraland-scenes/zombie-attack: A zombie will chase you around and attack you once it gets near.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A zombie will chase you around and attack you once it gets near.</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/zombie-attack</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>11</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Zombie Attack</h1>

<em>demo of zombie-attack scene running in preview.</em>

<h2>Description</h2>

<p>A zombie will chase you around and attack you once it gets near. To view the scene, please visit</p>

<p>.</p>

<h2>Instructions</h2>

<p>Use your mouse to look around and</p>

<kbd>W</kbd>

<kbd>A</kbd>

<kbd>S</kbd>

<kbd>D</kbd>

<p>keys on your keyboard to move forward, left, backward and right respectively. To jump, press the</p>

<kbd>Space</kbd>

<p>key.</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<code>$ npm i -g decentraland</code>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$  dcl start</code>

<h2>About</h2>

<p>A zombie will chase you around and attack you once it gets near.</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>1</strong>

<h3>Watchers</h3>

<strong>3</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/world-stage-metaverse-festival

# URL: https://github.com/decentraland-scenes/world-stage-metaverse-festival

<title>GitHub - decentraland-scenes/world-stage-metaverse-festival</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/world-stage-metaverse-festival</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>5</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>54</strong>

<h2>Files</h2>

<button>View code</button>

<h1>world-stage-metaverse-festival</h1>

<p>Assets and code used for the</p>

<p>.</p>

<p>This work is licensed under a</p>

<p>.</p>

<h2>About</h2>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>4</strong>

<h3>Forks</h3>

<strong>1</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/crypto-valley-art-gallery

# URL: https://github.com/decentraland-scenes/crypto-valley-art-gallery

<title>GitHub - decentraland-scenes/crypto-valley-art-gallery: Crypto Valley art gallery</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Crypto Valley art gallery</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/crypto-valley-art-gallery</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>18</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>4</strong>

<h2>Files</h2>

<button>View code</button>

<h2>About</h2>

<p>Crypto Valley art gallery</p>

<h3>Topics</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>1</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/show-management

# URL: https://github.com/decentraland-scenes/show-management

<title>GitHub - decentraland-scenes/show-management: This scene demonstrates how to synchronize actions in the scene to specific moments in a video by implementing the Show Management Library</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>This scene demonstrates how to synchronize actions in the scene to specific moments in a video by implementing the Show Management Library</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/show-management</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>4</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>21</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Show Management</h1>

<h2>Description</h2>

<p>This scene demonstrates how to synchronize actions in the scene to specific moments in a video by implementing the</p>

<p>.</p>

<p>This scene shows you:</p>

<li>How to schedule playing a video streamed on-demand to play at a certain time</li>

<li>How to sync actions in the scene to moments in the video</li>

<p>Note: For details on how to store videos in servers that can be fetched from Decentraland, see</p>

<h2>Video Tutorial</h2>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Open this folder on the command line, then run:</p>

<code>dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>This scene demonstrates how to synchronize actions in the scene to specific moments in a video by implementing the Show Management Library</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>1</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>2</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/video-streaming

# URL: https://github.com/decentraland-scenes/video-streaming

<title>GitHub - decentraland-scenes/video-streaming</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/video-streaming</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>2</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>34</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Video Streaming</h1>

<p>A simple scene with a video screen that loops a video that was uploaded to Vimeo.</p>

<p>This scene shows you:</p>

<li>How to stream videos from an external source</li>

<li>How to configure the properties of a material for the best image clarity on a video</li>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$:  dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<h1>Setting up the Server for Streaming</h1>

<em>NOTE: These are just brief notes from my meeting with HPrivakos (will tidy up later...)</em>

<h2>Choosing a hosting option</h2>

<p>There are a number of options for streaming video. The simplest option is to use a managed hosting provider like</p>

<p>or</p>

<p>where you pay a fee to the provider to manage all the streaming infrastructure. The other recommended alternative is to set up your own server, using free software but paying for hosting on a platform like Digital Ocean. All these options have pros and cons for different scenarios. You should evaluate what's best for you taking into account your needs, technical skills and budget.</p>

<h3>Managed hosted</h3>

<strong>Vimeo Pro (or higher)</strong>

<p>:</p>

<p>Pros:</p>

<li>Should be able to support unlimited concurrent users</li>

<li>Is extremely easy to set up</li>

<li>Costs $20 USD a month</li>

<li>Offers analytics dashboard</li>

<p>Cons:</p>

<li>Only allows you to stream pre-loaded videos,</li>

<strong>no live streaming</strong>

<li>.</li>

<li>In this modality, players see the video start when each arrives to the scene. What they see may be out of sync with each other.</li>

<strong>Vimeo Premium</strong>

<p>Pros:</p>

<li>Should be able to support unlimited concurrent users</li>

<li>Is extremely easy to set up</li>

<li>Allows for</li>

<strong>live streaming</strong>

<li>Offers analytics dashboard</li>

<p>Cons:</p>

<li>Costs $75 usd a month</li>

<strong>Livepeer Studio</strong>

<p>:</p>

<p>Pros:</p>

<li>Easy to set up</li>

<li>Free 1000 minutes/month video processing (transcoding and uploading videos)</li>

<li>Allows for</li>

<strong>live streaming</strong>

<p>Cons:</p>

<li>No analytics dashboard</li>

<li>Streaming of</li>

<strong>pre-loaded videos (VODs)</strong>

<li>currently requires using Studio API</li>

<li>After 1000 free monthly minutes, costs are calculated as:</li>

<li>$0.005 USD/min for transcoding</li>

<li>$0.015 USD/GB for delivery</li>

<h3>Self-hosted</h3>

<strong>Set up own server on Digital Ocean</strong>

<p>Pros:</p>

<li>You can do streaming or</li>

<strong>any modality</strong>

<li>you want</li>

<li>Can cost as little as $5 USD a month (this option supports up to roughly 50 viewers)</li>

<li>Relatively nice UI, if you have a strong technical background</li>

<p>Cons:</p>

<li>Requires high technical skills to set up everything manually</li>

<li>The cheap option is not recommended for +50 viewers, more expensive options may be on par with Vimeo Premium.</li>

<p>Note: For many Decentraland Foundation events, we use Amazon Web Services hosting. This option is more robust, but also more expensive and less friendly to set up.</p>

<h2>Set up Vimeo Pro</h2>

<p>This is the simplest option, but doesn't allow for live streaming.</p>

<p>Create a Vimeo account if you don't have one. Then upgrade to any of the</p>

<p>offered there.</p>

<p>Upload a video to one of your folders.</p>

<p>Open the video's settings, and select</p>

<strong>Advanced</strong>

<p>.</p>

<p>Pick</p>

<strong>Distribution</strong>

<p>, and scroll to the bottom to Video file links. Copy the last one of these links, the one labeled</p>

<strong>HTTP live streaming</strong>

<p>.</p>

<p>Note: The other available links on specific resoltuions often don't work when streamed into Decentraland. Always use the</p>

<strong>HTTP Live streaming</strong>

<p>. This option adjusts the quality of the video dynamically depending on the player's connection, leading to an optimal result. Note that this link is different from performing a streaming of a live event: players will each see the video from start to finish, without necessarily being in sync with what each other is seeing.</p>

<li>Paste the link into your scene, replacing the placeholder on the</li>

<code>VideoClip</code>

<li>object.</li>

<p>Tip: If you intend your video to loop, make sure you set the</p>

<code>loop</code>

<p>property on the</p>

<code>VideoTexture</code>

<p>in your scene. Otherwise the video will play just once for each player.</p>

<h2>Set up Livepeer Studio</h2>

<p>The first step is to create a</p>

<p>.</p>

<strong>Live streaming</strong>

<li>While signed in, go to the</li>

<li>section</li>

<li>Click the</li>

<code>+ Create stream</code>

<li>button</li>

<li>Give your stream a name in the prompt. Click</li>

<code>Create stream</code>

<li>button when finished.</li>

<li>For broadcasting (via broadcasting software like OBS), use the the</li>

<code>RTMP ingest URL</code>

<li>and</li>

<code>Stream key</code>

<li>found on the newly created stream page.</li>

<li>For playback in a video player, use the</li>

<code>Playback URL</code>

<li>url.</li>

<strong>Pre-loaded video (VOD) streaming</strong>

<em>Functionality to upload asset directly in Studio dashboard coming in Q3 2022</em>

<h2>Custom Server on Digital Ocean (Advanced)</h2>

<p>This is the cheapest option, but is significantly harder to set up than the others.</p>

<p>See</p>

<p>for detailed instructions for how to deploy a server, configure it, and install all the necessary command-line tools.</p>

<h2>About</h2>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>10</strong>

<h3>Watchers</h3>

<strong>3</strong>

<h3>Forks</h3>

<strong>10</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/zombies

# URL: https://github.com/decentraland-scenes/zombies

<title>GitHub - decentraland-scenes/zombies</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/zombies</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>8</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>3</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Zombie Attack</h1>

<em>demo of zombie-attack scene running in preview.</em>

<h2>Description</h2>

<p>A zombie will chase you around and attack you once it gets near. To view the scene, please visit</p>

<p>.</p>

<h2>Instructions</h2>

<p>Use your mouse to look around and</p>

<kbd>W</kbd>

<kbd>A</kbd>

<kbd>S</kbd>

<kbd>D</kbd>

<p>keys on your keyboard to move forward, left, backward and right respectively. To jump, press the</p>

<kbd>Space</kbd>

<p>key.</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<code>$ npm i -g decentraland</code>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$  dcl start</code>

<h2>About</h2>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/leaderboard-ui-sdk7

# URL: https://github.com/decentraland-scenes/leaderboard-ui-sdk7

<title>GitHub - decentraland-scenes/leaderboard-ui-sdk7</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/leaderboard-ui-sdk7</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>2</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>77</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Leaderboard sdk7</h1>

<p>This demo scene present 2 different leaderboards made using sdk7.

Both of them where drawn by the ones present in the</p>

<p>.</p>

<h4>**Modal Leader Board **</h4>

<h4>**HUD Leader Board **</h4>

<h1>Instructions</h1>

<p>Point to the cube in the center of the screen, press "E" and see the leader boards changing data.</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<code>$ npm i -g decentraland</code>

<strong>sdk version</strong>

<p>Inside the package.json make sure that  sdk version is set to "next"</p>

<code>"devDependencies": {

"@dcl/sdk": "next"

},</code>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$  npm run start</code>

<h2>About</h2>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>1</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/snowball-xmas-arena

# URL: https://github.com/decentraland-scenes/snowball-xmas-arena

<title>GitHub - decentraland-scenes/snowball-xmas-arena</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/snowball-xmas-arena</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>7</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Snowball Arena</h1>

<p>A multiplayer scene with [Colyseus]{</p>

<p>for websockets multiplayer messaging.

The game logic is carried out server-side.</p>

<p>This scene shows you:</p>

<li>How to support [Colyseus]{</li>

<li>in a Decentraland scene</li>

<li>How to set up a simple scene state in Colyseus</li>

<li>How to handle game state changes from the server in your scene</li>

<li>How to fetch a player's realm</li>

<li>How to keep track of the state of each realm as a separate room in your game</li>

<p>The server keeps track of the color selected by each player and the changes in cube colors.</p>

<h3>PlayFab</h3>

<p>"</p>

<p>enables developers to use the intelligent cloud to build and operate games, analyze gaming data and improve overall gaming experiences. The PlayFab platform is a natural complement to Azure for gaming (Visit</p>

<p>for more info)"</p>

<h2>How PlayFab Login Works</h2>

<p>PlayFab offers several authentication options</p>

<p>. However we chose CustomID so that we can tie the player ID to the account.  CustomID allows us to set anything as the login a player.   To keep the login ID secure and not predictable we use a server to generate a random UUID as the login ID and return it.  We use</p>

<p>which authenticates the signedFetch from the scene and ensures only that player can fetch their CustomID.</p>

<pre>sequenceDiagram

Player->> Scene : enterScene

Scene->> Service : signedFetch(/player/auth)

Service->>Service: authenticate signedFetch

opt If you wanted to verify player is in DCL

Colyseus->>Catalyst: check is player connected

end

Service->> DB : lookup/create Playfab CustomId

Note over Scene,PlayFab: Have a few login options here

alt: Scene logs itself in

Service-->>Scene: returns Playfab CustomId

Scene->>PlayFab: Client/LoginWithCustomID (with CustomId)

PlayFab-->>Scene: Login Result

else: OR Service logs in for client (VARIENT)

Service->>PlayFab: Client/LoginWithCustomID (with CustomId)

PlayFab-->>Service: Login Result

Service-->>Scene: returns Playfab Login Result

end

Note over Scene,PlayFab: Player now logged in to PlayFab

Scene->>PlayFab: Client/GetPlayerCombinedInfo

PlayFab-->>Scene: GetPlayerCombinedInfoResult

Scene-->>Player: Update UI to Logged In State</pre>

<h2>How Multiplayer Works</h2>

<pre>sequenceDiagram

Player->> Scene : playBattle

Scene->> Colyseus : joinOrCreate

Colyseus->>PlayFab: AuthenticateSessionTicket

PlayFab-->> Colyseus : valid session

opt If you wanted to verify player is in DCL

Colyseus->>Catalyst: check is player connected

end

Colyseus-->>Scene: room id

Note over Colyseus,Scene: Battle begins

par

loop Player Battle

Player->>Scene: sends inputs

end

loop Scene sends actions taken

Scene->>Colyseus: player data

end

loop Colyseus sends room state

Colyseus->>Scene: room state

Scene->>Scene: sync entity positions

end

end

Note over Colyseus,Scene: When battle is over

Colyseus->>PlayFab: Updates player stats

Colyseus->>Scene: Broadcast about to disconnect

Colyseus->>Scene: Disconnect clients

Scene->>PlayFab: Client/GetPlayerCombinedInfo for latest stat

PlayFab-->>Scene: GetPlayerCombinedInfoResult

Scene-->>Player: Show Battle Results</pre>

<h2>Configuration</h2>

<p>NOTE: In an attempt to make playing the scene locally PLAYFAB_ENABLED is by default set to false in the Scene and Colyseus making so you can play locally with no external services configure (do not need a PlayFab account to test it out).  To enable playfab follow the instructions below.</p>

<h3>Scene</h3>

<p>You may want to configure endpoints for your local environment in the instance where you do not want or need to run Colyseus and login server locally</p>

<p>Found in</p>

<code>src/config.ts</code>

<p>there are variables in the following format so you could have configurations for multiple environments</p>

<code>const VARIABLE: Record<string, string> = {

local: "local value",

dev: "dev value",

stg: "staging value",

prd: "production value",

};</code>

<code>DEFAULT_ENV</code>

<p>- The environment for which values are to be used (local,dev,prod,etc.)</p>

<code>PLAYFAB_ENABLED</code>

<p>- true if PlayFab should be enabled.</p>

<code>PLAYFAB_TITLE_ID</code>

<p>- PlayFab Title ID</p>

<code>COLYSEUS_ENDPOINT_URL</code>

<p>- Websocker endpoint</p>

<code>AUTH_URL</code>

<p>Login Service Endpoint</p>

<h3>Colyseus</h3>

<p>Found in</p>

<code>server/arena.env</code>

<p>you must either disable PlayFab integration OR provide a PlayFab title and developer secret.  By default for the demo BATTLE_PLAYFAB_ENABLED is set to false so you can play locally without requiring a PlayFab account</p>

<code>BATTLE_PLAYFAB_ENABLED=true

BATTLE_PLAYFAB_TITLEID= PlayFab Title ID goes here

BATTLE_PLAYFAB_DEVELOPER_SECRET= PlayFab Title ID goes here</code>

<p>Details on how to get these can be found here</p>

<h3>Service</h3>

<p>By default for the demo</p>

<code>BATTLE_PLAYFAB_ENABLED</code>

<p>is set to false so you can play locally without requiring a PlayFab account.  The service does not need to be ran in this case.</p>

<p>Found in</p>

<code>service/.env.default</code>

<p>default values for the service</p>

<p>Found in</p>

<code>service/.env</code>

<p>are override values.  Place your firebase admin json here</p>

<code>FIREBASE_JSON=you-firebase-admin-json-here</code>

<h2>Try it out</h2>

<p>It will require you to run 3 servers locally</p>

<li>DCL Scene</li>

<li>Colyseus (multiplayer server)</li>

<li>Service (for login support and other server side needs)</li>

<p>And have a PlayFab account and title already created</p>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<h4>Run DCL Scene (Tab1)</h4>

<p>Open this folder on the command line, then run:</p>

<code>dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<h4>Run Colyseus (Multiplayer server) (Tab2)</h4>

<p>In another command line tab Open ./server/ folder on the command line, then run:</p>

<code>npm run start</code>

<p>Any dependencies are installed and then the server should be running. You should see something like this</p>

<code>â development.env loaded.

â Express initialized

ð  Your Colyseus App

âï¸  Listening on ws://localhost:2567</code>

<h4>Run Service (Tab3)</h4>

<p>NOTE: By default for the demo BATTLE_PLAYFAB_ENABLED is set to false so you can play locally without requiring a PlayFab account.  The service does not need to be ran in this case.</p>

<p>In another command line tab Open ./service/ folder on the command line, then run:</p>

<code>npm run build

npm run start</code>

<p>Any dependencies are installed and then the server should be running. You should see something like this</p>

<code>2022-07-17T01:44:35.100Z [LOG] (http-server): Listening 0.0.0.0:5001</code>

<h2>More</h2>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<p>If something doesnât work, please</p>

<p>.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>Acknowledgements</h2>

<p>Portions of this program Â© 2022 Microsoft Azure PlayFab</p>

<p>Multiplayer made possible with Colyseus</p>

<h2>About</h2>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/validate-player-authenticity

# URL: https://github.com/decentraland-scenes/validate-player-authenticity

<title>GitHub - decentraland-scenes/validate-player-authenticity: Signed fetch base implementation</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Signed fetch base implementation</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/validate-player-authenticity</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>14</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>16</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Validate Player Authenticity</h1>

<p>This is a simple scene + REST server that implements a few security checks to ensure that the requests that arrive to the server are legitimate.</p>

<p>This example shows you:</p>

<p>On the scene:</p>

<li>Send requests with</li>

<code>signedFetch</code>

<li>, to include headers with an ephemeral key signature in the request.</li>

<p>On the server:</p>

<li>Check that the origin of the request, to ensure it's from a Decentraland domain</li>

<li>Filter out malicious IPs that were manually identified</li>

<li>Check that the headers included in the</li>

<code>signedFetch</code>

<li>are properly signed, ensuring also that the timestamp in the signature is also recent and that the ephemeral key corresponds to the player's address.</li>

<li>Query the catalyst server that the player claims to be in, and ensure that the player is truly there.</li>

<li>Check that the player's location when sending the request is at a specific parcel, or within a margin or error of that.</li>

<p>These checks together ensure that a request needs to come from inside decentraland, from a player in a deployed scene within the specified coordinates.</p>

<p>Through all of these checks, you can make it very hard for anyone who might want to take advantage of your scene. These security measures are especially valuable in scenes that give away tokens, or where there's some kind of monetary incentive for cheating.</p>

<h3>About the ephemeral key</h3>

<p>When players log into decentraland, they sign a message using Metamask or their preferred web3 client. This signature is used to generate an ephemeral wallet that exists during that session, this address can be traced back to the player's original address. The advantage is that it can be used by the Decentraland explorer to sign messages behind the curtains, without requesting that the player manually signs every request.</p>

<p>When you use the</p>

<code>signedFetch()</code>

<p>function in a scene, you're sending additional metadata in the request's headers, that includes a signed message encrypted with the ephemeral key. This signed message includes a timestamp, the player's position on the map, the player's actual address, and the contents of the request itself.</p>

<h2>Branches</h2>

<p>The</p>

<code>main</code>

<p>branch of this project delegates the validation of the message signature to an endpoint of a catalyst server.</p>

<p>The</p>

<code>localcheck</code>

<p>branch of this same repository performs the signature validation locally. It only connects to the catalyst server to check that the player is connected and near the reported position.</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to the</p>

<code>scene</code>

<p>directory, then run:</p>

<code>$:  dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<strong>Run the server</strong>

<p>To run the server locally, on a separate command line window, navigate to the</p>

<code>server</code>

<p>directory and run the following command to install all the dependencies:</p>

<code>npm i</code>

<p>Once the dependencies are installed, run the following command to start the server:</p>

<code>npm run start</code>

<p>The server will then be listening on</p>

<code>localhost:8080</code>

<p>, the scene is already sending requests to this address.</p>

<code>socket = new WebSocket(

'wss://localhost:8080/broadcast/' + realm.displayName

)</code>

<strong>Scene Usage</strong>

<p>First run the server, then run the scene.</p>

<p>In the scene, simply click on the fountain, and it will send a request to the server.</p>

<p>The scene will tell you if you passed the validations or not.</p>

<p>Since you're running the scene locally on localhost, the validations that relate to the request's origin and on querying the catalyst servers are turned off. Turn them on with the</p>

<code>TESTS_ENABLED</code>

<p>flag, on</p>

<code>securityChecks.ts</code>

<p>in the server folder. Notice that once that's enabled your requests from localhost will no longer pass the validations.</p>

<p>By copying the</p>

<code>security</code>

<p>folder in</p>

<code>server</code>

<p>, you can use the same set of security validations on any request that was originated with</p>

<code>signedFetch()</code>

<p>in a Decentraland scene.</p>

<p>Simply run:</p>

<p>Or add a set of coordinates to also validate the request's origin on the map:</p>

<h3>Configurable properties</h3>

<p>The following properties can be configured on</p>

<code>securityChecks.ts</code>

<p>:</p>

<code>TESTS_ENABLED</code>

<p>: If true, requests from localhost are allowed. If false, the server also enforces that the requests come from a decentraland domain, and validates with a catalyst server that the player is currently there.</p>

<code>MARGIN_OF_ERROR</code>

<p>: Make the location checks more or less permissive. A margin or error of 2 will allow locations at + - 2 parcels of distance on either axis from the indicated location.</p>

<code>denyListedIPS</code>

<p>: Add any IPs to this list that you want to block from making any requests.</p>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<p>If something doesnât work, please</p>

<p>.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>Signed fetch base implementation</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>7</strong>

<h3>Watchers</h3>

<strong>3</strong>

<h3>Forks</h3>

<strong>3</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/Soho-Plaza

# URL: https://github.com/decentraland-scenes/Soho-Plaza

<title>GitHub - decentraland-scenes/Soho-Plaza: The full Soho Plaza in Genesis City</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>The full Soho Plaza in Genesis City</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/Soho-Plaza</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>11</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>146</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Soho-Plaza</h1>

<p>The full Soho Plaza.</p>

<p>This scene contains a lot of useful mechanics, including:</p>

<li>Fetching data from APIs</li>

<li>Adding teleports to other scenes</li>

<li>Adding external links outside Decentraland</li>

<li>Syncing player actions with the messagebus</li>

<li>Streaming audio</li>

<li>Streaming video</li>

<li>Displaying a custom UI</li>

<p>Because it can be hard to find specific things in such a large repository, some of the most interesting bits of the scene have been exported into their own example repos:</p>

<li>: Create 3D voxel art by placing cubes in place. Players are synced through both the messagebus and a DB in a server.</li>

<li>: Fetch the list of wearables that a player currently has on. If they have something in the eyewear category, open the door for them.</li>

<li>: The cubes in this fountain have several animations that each set can play. When a player pushes a button, all players see the same animation.</li>

<li>: Display a 2D NFT in a picture frame.</li>

<li>: Play the keys of this piano by stepping on them. All players will hear the notes that are played.</li>

<li>: Create musical patterns that are played in sequence. Players are synced through both the messagebus and a DB in a server.</li>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$:  dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<strong>Setting up the server</strong>

<p>The scene is set up to make use of the same server that's used by Soho Plaza. To launch your own server, we recommend you deploy what's in the</p>

<code>/server</code>

<p>folder to your own Firebase account, following the steps in</p>

<p>. To store data on an Amazon S3 server, as done here, you'll also need to set up your own Amazon S3, and fetch credentials for that account to include in your server folder.</p>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<p>If something doesnât work, please</p>

<p>.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>The full Soho Plaza in Genesis City</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>1</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>1</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/voxel-art-creator

# URL: https://github.com/decentraland-scenes/voxel-art-creator

<title>GitHub - decentraland-scenes/voxel-art-creator: A voxel art creator.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A voxel art creator.</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/voxel-art-creator</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>29</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Voxel Art Creator</h1>

<em>A screenshot of the voxel art creator running in preview.</em>

<p>A voxel art creator based on the amazing</p>

<p>. You can try out the scene</p>

<p>.</p>

<p>This scen shows you:</p>

<li>How to use the message bus to keep players in sync with each other's actions while they're together in the scene</li>

<li>How to send HTTP requests to an API to store the scene state in a permanent place, so others can then retrieve changes</li>

<li>How to set up a server that is capable of handling the storage of data in a separate Amazon S3 server</li>

<li>How to obtain the realm that a player is currently on</li>

<li>How to use ray casting to spawn an entity at the position that the player is pointing</li>

<li>How to play sounds from a file</li>

<li>How to add custom UI hints that don't interfere with the interactin with the scene</li>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>$ npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$  dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<strong>Setting up the server</strong>

<p>The scene is set up to make use of the same server that's used by Soho Plaza. To launch your own server, we recommend you deploy what's in the</p>

<code>/server</code>

<p>folder to your own Firebase account, following the steps in</p>

<p>. To store data on an Amazon S3 server, as done here, you'll also need to set up your own Amazon S3, and fetch credentials for that account to include in your server folder.</p>

<h2>Controls</h2>

<li>Left mouse click to add / remove / eye drop a voxel</li>

<li>Use 'E' to toggle between add / remove / eye drop mode</li>

<li>Use 'F' to change colors</li>

<h2>Future Improvements</h2>

<li>Undo / Reset / Clear button</li>

<li>Color palette to choose and store colors</li>

<li>Help menu with instructions</li>

<li>More tools such as Ellipse / Rectangle / Line</li>

<li>Shared experience</li>

<li>Many more...</li>

<h2>About syncing changes between players</h2>

<p>When a player comes into the scene they download the latest data about existing voxels from off the server. Then, as different players that are there add and remove voxels, they get these changes from each other using the Message Bus, they donât need to check the server regularly to know whatâs new.</p>

<p>For this to work properly, we need to keep a separate version of this pattern for each realm and know what realm each player is on when they update the pattern. This is because only players that are in the same realm message each other via the Message Bus. There would otherwise be odd inconsistencies in what ends up being stored when players that are in different realms modify the same scene without notifying each other. The scene includes the playerâs realm as part of the requests it sends, and the server then handles a different .json file depending on the realm.</p>

<p>Note: This works fine as long as the scene is deployed in one single place in the map. If various copies of the same scene exist and call the same server, writing to the same database, then that could be a problem. If two players are interacting with the two different versions of the scene, they will be acting upon the same database, but they won't share changes via the message bus. This will result in inconsistencies in between what each one sees and the final result being stored.</p>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<p>If something doesnât work, please</p>

<p>.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>Acknowledgements</h2>

<em>eyeIcon.png</em>

<li>modified from</li>

<em>eyeDropVoxel.mp3</em>

<li>modified from</li>

<h2>About</h2>

<p>A voxel art creator.</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>4</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>2</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/wearables-scanner

# URL: https://github.com/decentraland-scenes/wearables-scanner

<title>GitHub - decentraland-scenes/wearables-scanner: A simple scene that shows how to fetch player wearable data to match against a criteria. In this case, only players wearing eyewear are allowed in.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A simple scene that shows how to fetch player wearable data to match against a criteria. In this case, only players wearing eyewear are allowed in.</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/wearables-scanner</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>2</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>20</strong>

<h2>Files</h2>

<button>View code</button>

<h1>wearables-scanner</h1>

<p>A simple scene that shows how to fetch player wearable data to match against a criteria. In this case, only players wearing eyewear are allowed in.</p>

<p>This scene shows you:</p>

<li>How to fetch the wearables currently worn by a player</li>

<li>How to handle async functions</li>

<li>How to delay an action with the utils library</li>

<li>How to define the elements of a scene as game objects, with state and functions</li>

<p>Here we're querying the player's wearable items that are being equipped, and also fetching the full list of Decentraland wearables. We then match both these lists up to obtain more information about each of the wearables that the player has equipped, and check if any of these belongs to the 'eyewear' category.</p>

<p>Feel free to reuse the models and code from this scene!</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$:  dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<code>&ENABLE_WEB3</code>

<p>For example, if the URL is</p>

<code>http://127.0.0.1:8000?position=0%2C0&SCENE_DEBUG_PANEL</code>

<p>, make it</p>

<code>http://127.0.0.1:8000?position=0%2C0&SCENE_DEBUG_PANEL&ENABLE_WEB3</code>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<p>If something doesnât work, please</p>

<p>.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>A simple scene that shows how to fetch player wearable data to match against a criteria. In this case, only players wearing eyewear are allowed in.</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>3</strong>

<h3>Watchers</h3>

<strong>3</strong>

<h3>Forks</h3>

<strong>2</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/Block-Fountain

# URL: https://github.com/decentraland-scenes/Block-Fountain

<title>GitHub - decentraland-scenes/Block-Fountain: A cube-based fountain that works on Soho Plaza. It includes P2P sync and handling of multiple animations per model.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A cube-based fountain that works on Soho Plaza. It includes P2P sync and handling of multiple animations per model.</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/Block-Fountain</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>12</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Blcok Fountain</h1>

<p>A cube-based fountain with multiple animations that uses P2P to sync animations between players.</p>

<p>This scene shows you:</p>

<li>How to use websockets to sync events between players</li>

<li>How to handle multiple animations in a same model</li>

<li>How to keep the scene's code abstracted into various game objects with state and methods of their own</li>

<li>How to handle random events</li>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$:  dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<strong>Scene Usage</strong>

<p>The fountain has four rings of cubes that each behave independently, each ring has three different animations.</p>

<p>If left alone, these animations will be randomly triggered at random intervals. These random events aren't synced between players.</p>

<p>If a player pushes one of the buttons, this will trigger the corresponding animation. The random behavior will stop for a given amount of time, and the animation triggered by the button is synced with all other players in the scene.</p>

<p>You can test this by opening the preview on multiple browser windows. If a player pushes a button on one of these instances, all other players should see the same animation play at the same time.</p>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<p>If something doesnât work, please</p>

<p>.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>A cube-based fountain that works on Soho Plaza. It includes P2P sync and handling of multiple animations per model.</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/video-uv-mapping-to-archways

# URL: https://github.com/decentraland-scenes/video-uv-mapping-to-archways

<title>GitHub - decentraland-scenes/video-uv-mapping-to-archways</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/video-uv-mapping-to-archways</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>2</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>2</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Video UV Mapping to Archways</h1>

<p>This scene demonstrates how to UV map a video texture onto many many planes</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$:  dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<strong>Scene Usage</strong>

<p>Follow the labels on each cube to turn it green, testing all the different ways a player can interact with a Decentraland scene.</p>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<p>If something doesnât work, please</p>

<p>.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>3</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/avatar-mannequin

# URL: https://github.com/decentraland-scenes/avatar-mannequin

<title>GitHub - decentraland-scenes/avatar-mannequin: Dressable AvatarShape scene where the user can flip through several wearables and outfits on a mannequin</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Dressable AvatarShape scene where the user can flip through several wearables and outfits on a mannequin</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/avatar-mannequin</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>2</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Avatar Mannequin</h1>

<p>This scene shows an avatar mannequin that can dynamically change wearables on user interaction. The player can flip through individual categories of wearables or change complete predefined outfits on the mannequin.</p>

<p>You can add your own collections/wearable items to the code using the template provided as well as introduce more categories based on the existing ones</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$:  dcl start --web3</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<p>Note: When running a preview of a scene that uses one of the ethereum libraries, you must have Metamask or Dapper open and you must add this string.</p>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<p>If something doesnât work, please</p>

<p>.</p>

<h2>Scene usage</h2>

<p>Click on the menu on the right to navigate the different collections. When a collection is selected, use E and F to scroll through the different items in that collection. Then select an item to see more details.</p>

<p>To buy an item, hit the</p>

<code>Buy</code>

<p>button. Note that you must be connected with a web3 browser extension by starting the preview with</p>

<code>dcl start --web3</code>

<p>, and the connected account must have MANA on the Polygon network.</p>

<p>On your first transaction, the UI will ask you to first sign an approval for letting this contract spend your Polygon MANA. This transaction is free of charge, as it runs on the Polygon network.</p>

<p>As of then, any purchases you do via this store will require no gas, only the cost in MANA of the item itself. You approve them by signing a message on Metamask or your web3 browser extension of choice.</p>

<h2>Customize</h2>

<p>In the current scene, in game.ts, you'll notice there are two wearable wardrobes being created. A simple one that by default displays all of the available L2 wearables, and one that is configured to only display specific collections.</p>

<pre>:</pre>

<pre>:</pre>

<p>The</p>

<code>createWearableStore()</code>

<p>function takes the following arguments</p>

<li>A transform component, with position, rotation & scale</li>

<li>An optional array of all the wearable collections you want it to display. If none are provided, it displays all wearables in L2.</li>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>Dressable AvatarShape scene where the user can flip through several wearables and outfits on a mannequin</p>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>1</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/DCL_HQ

# URL: https://github.com/decentraland-scenes/DCL_HQ

<title>GitHub - decentraland-scenes/DCL_HQ: Decentraland Foundation HQ Building</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Decentraland Foundation HQ Building</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/DCL_HQ</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>2</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>4</strong>

<h2>Files</h2>

<button>View code</button>

<h1>DCL_HQ</h1>

<p>Decentraland Foundation HQ Building</p>

<h2>About</h2>

<p>Decentraland Foundation HQ Building</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/Puffer

# URL: https://github.com/decentraland-scenes/Puffer

<title>GitHub - decentraland-scenes/Puffer: A puffer fish that inflates and deflates when clicked. This scene uses the Utils library.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A puffer fish that inflates and deflates when clicked. This scene uses the Utils library.</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/Puffer</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>3</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>13</strong>

<h2>Files</h2>

<button>View code</button>

<h2>Puffer fish</h2>

<p>A simple interactive scene with a puffer fish that blows up when clicked.</p>

<p>This scene shows you:</p>

<li>How to add a 3D model to a scene</li>

<li>How to use utils helper library to scale an entity and to delay actions</li>

<li>How to chain several actions so that they're performed one after the other</li>

<li>How to play a sound from a file</li>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$:  dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<strong>Scene Usage</strong>

<p>Click on the fish and it will puff up and then deflate, emitting a sound.</p>

<p>If something doesnât work, please</p>

<p>.</p>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>Attributions</h2>

<p>3D model from Sketchfab user</p>

<p>Soudn file from FreeSound user</p>

<p>Both with creative commons licenses.</p>

<h2>About</h2>

<p>A puffer fish that inflates and deflates when clicked. This scene uses the Utils library.</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>2</strong>

<h3>Watchers</h3>

<strong>3</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/decentrally

# URL: https://github.com/decentraland-scenes/decentrally

<title>GitHub - decentraland-scenes/decentrally: A cutting edge racing game</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A cutting edge racing game</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/decentrally</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>12</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Decentrally</h1>

<h2>Description</h2>

<p>This scene demonstrates</p>

<li>Infinity Engine could be used in a scene</li>

<li>Integrate with</li>

<li>which offers many features you may need while building a game</li>

<li>Using</li>

<li>framework for the utility service</li>

<h3>Infinity Engine</h3>

<p>The Infinity Engine is a framework designed to workaround space limitation of your parcel.  While you may only have a 1x1 parcel, the Infinity Engine holds the player in the center and a scene around the player giving you infinite space to work with.</p>

<h3>PlayFab</h3>

<p>"</p>

<p>enables developers to use the intelligent cloud to build and operate games, analyze gaming data and improve overall gaming experiences. The PlayFab platform is a natural complement to Azure for gaming (Visit</p>

<p>for more info)"</p>

<h2>How PlayFab Login Works</h2>

<p>PlayFab offers several authentication options</p>

<p>. However we chose CustomID so that we can tie the player ID to the account.  CustomID allows us to set anything as the login a player.   To keep the login ID secure and not predictable we use a server to generate a random UUID as the login ID and return it.  We use</p>

<p>which authenticates the signedFetch from the scene and ensures only that player can fetch their CustomID.</p>

<pre>sequenceDiagram

Player->> Scene : enterScene

Scene->> Service : signedFetch(/player/auth)

Service->>Service: authenticate signedFetch

opt If you wanted to verify player is in DCL

Colyseus->>Catalyst: check is player connected

end

Service->> DB : lookup/create Playfab CustomId

Note over Scene,PlayFab: Have a few login options here

alt: Scene logs itself in

Service-->>Scene: returns Playfab CustomId

Scene->>PlayFab: Client/LoginWithCustomID (with CustomId)

PlayFab-->>Scene: Login Result

else: OR Service logs in for client (VARIENT)

Service->>PlayFab: Client/LoginWithCustomID (with CustomId)

PlayFab-->>Service: Login Result

Service-->>Scene: returns Playfab Login Result

end

Note over Scene,PlayFab: Player now logged in to PlayFab

Scene->>PlayFab: Client/GetPlayerCombinedInfo

PlayFab-->>Scene: GetPlayerCombinedInfoResult

Scene-->>Player: Update UI to Logged In State</pre>

<h2>How Multiplayer Works</h2>

<pre>sequenceDiagram

Player->> Scene : playRace

Scene->> Colyseus : joinOrCreate

Colyseus->>PlayFab: AuthenticateSessionTicket

PlayFab-->> Colyseus : valid session

opt If you wanted to verify player is in DCL

Colyseus->>Catalyst: check is player connected

end

Colyseus-->>Scene: room id

Note over Colyseus,Scene: Race begins

par

loop Player racing

Player->>Scene: sends inputs

end

loop Scene sends actions taken

Scene->>Colyseus: player data

end

loop Colyseus sends room state

Colyseus->>Scene: room state

Scene->>Scene: sync entity positions

end

end

Note over Colyseus,Scene: When race is over

Colyseus->>PlayFab: Updates player stats

Colyseus->>Scene: Broadcast about to disconnect

Colyseus->>Scene: Disconnect clients

Scene->>PlayFab: Client/GetPlayerCombinedInfo for latest stat

PlayFab-->>Scene: GetPlayerCombinedInfoResult

Scene-->>Player: Show Race Results</pre>

<h2>Configuration</h2>

<p>NOTE: In an attempt to make playing the scene locally PLAYFAB_ENABLED is by default set to false in the Scene and Colyseus making so you can play locally with no external services configure (do not need a PlayFab account to test it out).  To enable playfab follow the instructions below.</p>

<h3>Scene</h3>

<p>You may want to configure endpoints for your local environment in the instance where you do not want or need to run Colyseus and login server locally</p>

<p>Found in</p>

<code>src/config.ts</code>

<p>there are variables in the following format so you could have configurations for multiple environments</p>

<code>const VARIABLE: Record<string, string> = {

local: "local value",

dev: "dev value",

stg: "staging value",

prd: "production value",

};</code>

<code>DEFAULT_ENV</code>

<p>- The environment for which values are to be used (local,dev,prod,etc.)</p>

<code>PLAYFAB_ENABLED</code>

<p>- true if PlayFab should be enabled.</p>

<code>PLAYFAB_TITLE_ID</code>

<p>- PlayFab Title ID</p>

<code>COLYSEUS_ENDPOINT_URL</code>

<p>- Websocker endpoint</p>

<code>AUTH_URL</code>

<p>Login Service Endpoint</p>

<h3>Colyseus</h3>

<p>Found in</p>

<code>server/arena.env</code>

<p>you must either disable PlayFab integration OR provide a PlayFab title and developer secret.  By default for the demo PLAYFAB_ENABLED is set to false so you can play locally without requiring a PlayFab account</p>

<code>PLAYFAB_ENABLED=true

PLAYFAB_TITLEID= PlayFab Title ID goes here

PLAYFAB_DEVELOPER_SECRET= PlayFab Title ID goes here</code>

<p>Details on how to get these can be found here</p>

<p>(</p>

<h3>Service</h3>

<p>By default for the demo PLAYFAB_ENABLED is set to false so you can play locally without requiring a PlayFab account.  The service does not need to be ran in this case.</p>

<p>Found in</p>

<code>service/.env.default</code>

<p>default values for the service</p>

<p>Found in</p>

<code>service/.env</code>

<p>are override values.  Place your firebase admin json here</p>

<code>FIREBASE_JSON=you-firebase-admin-json-here</code>

<h2>Try it out</h2>

<p>It will require you to run 3 servers locally</p>

<li>DCL Scene</li>

<li>Colyseus (multiplayer server)</li>

<li>Service (for login support and other server side needs)</li>

<p>And have a PlayFab account and title already created</p>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<h4>Run DCL Scene (Tab1)</h4>

<p>Open this folder on the command line, then run:</p>

<code>dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<h4>Run Colyseus (Multiplayer server) (Tab2)</h4>

<p>In another command line tab Open ./server/ folder on the command line, then run:</p>

<code>npm run start</code>

<p>Any dependencies are installed and then the server should be running. You should see something like this</p>

<code>â development.env loaded.

â Express initialized

ð  Your Colyseus App

âï¸  Listening on ws://localhost:2567</code>

<h4>Run Service (Tab3)</h4>

<p>NOTE: By default for the demo PLAYFAB_ENABLED is set to false so you can play locally without requiring a PlayFab account.  The service does not need to be ran in this case.</p>

<p>In another command line tab Open ./service/ folder on the command line, then run:</p>

<code>npm run build

npm run start</code>

<p>Any dependencies are installed and then the server should be running. You should see something like this</p>

<code>2022-07-17T01:44:35.100Z [LOG] (http-server): Listening 0.0.0.0:5001</code>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>Acknowledgements</h2>

<p>Some sound clips are from</p>

<p>.   Credits</p>

<p>Portions of this program Â© 2022 Microsoft Azure PlayFab</p>

<p>Multiplayer made possible with Colyseus</p>

<h2>About</h2>

<p>A cutting edge racing game</p>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>2</strong>

<h3>Watchers</h3>

<strong>3</strong>

<h3>Forks</h3>

<strong>2</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/Leader-Board

# URL: https://github.com/decentraland-scenes/Leader-Board

<title>GitHub - decentraland-scenes/Leader-Board: A simple scene showing how to create a leader board for high scores</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A simple scene showing how to create a leader board for high scores</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/Leader-Board</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>9</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>18</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Leader Board</h1>

<p>This is a simple scene that implements a leader board. It includes a basic game of clicking a dog statues as many times as possible in 10 seconds. The score is then sent to a server.</p>

<p>This scene shows you:</p>

<li>How to send HTTP requests to an API to store data in a permanent place, so others can then retrieve changes</li>

<li>How to set up a server on Firebase that uses the Firestore database</li>

<li>How to parse a JSON response from an API call</li>

<li>How to arrange text fields into an in-world table</li>

<li>How to parse a string so that it fits a maximum line length and maximum number of lines</li>

<li>How to fetch the player's UserId</li>

<p>TIP: As a placeholder, the scene can use sample data that's packed with the scene to display on the scoreboard.</p>

<p>The server implementation uses</p>

<p>. See</p>

<p>for setting up the server in a similar use case. You could also store the scores somewhere else, like an Amazon S3 server, or any other storage provider.</p>

<p>Bare in mind that this implementation doesn't implement any measures to counter cheating. Since new scores are added to the server via RESTful HTTP calls, these could be easily replicated with fake values.</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$:  dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<strong>Setting up the server</strong>

<p>The scene is set up to make use of an existing server. To launch your own server, we recommend you deploy what's in the</p>

<code>/server</code>

<p>folder to your own Firebase account, following the steps in</p>

<p>.</p>

<strong>Scene Usage</strong>

<p>Play the game by clicking franticly on the dog before the time runs out. If your score makes it into the high-scores it will be uploaded to the server and stored there. It will be retrieved next time you load the scene.</p>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<p>If something doesnât work, please</p>

<p>.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>A simple scene showing how to create a leader board for high scores</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>1</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>1</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/Guest-Book-API

# URL: https://github.com/decentraland-scenes/Guest-Book-API

<title>GitHub - decentraland-scenes/Guest-Book-API: Sign a guestbook. User names are stored in a RESFful API, whic is also included in this repo.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Sign a guestbook. User names are stored in a RESFful API, whic is also included in this repo.</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/Guest-Book-API</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>6</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>12</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Guest book</h1>

<p>Sign a guestbook. Signatures done on the guestbook are stored in a Firebase server. The code for the server is included in the</p>

<code>/server</code>

<p>folder of this repo.</p>

<p>Check out the</p>

<p>!</p>

<p>This scene shows you:</p>

<li>How to send HTTP requests to an API to store data in a permanent place, so others can then retrieve changes</li>

<li>How to set up a server on Firebase that uses the Firestore database</li>

<li>How to display a custom UI</li>

<li>How to parse a JSON response from an API call</li>

<li>How to parse a string so that it fits a maximum line length and maximum number of lines</li>

<li>How to fetch the player's UserId</li>

<p>Every time the book is opened, a request is sent to a RESFful API that this server exposes, to fetch all existing signatures. When a new signature is made, another request is sent to that API, including the player's name and id, to add to the database.</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$:  dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<strong>Setting up the server</strong>

<p>The scene is set up to make use of an existing server. To launch your own server, we recommend you deploy what's in the /server folder to your own Firebase account, following the steps in</p>

<p>.</p>

<strong>Scene Usage</strong>

<p>Click on the guestbook to open the UI and fetch all the signatures on the book. You can flip through the pages by clicking the arrows on the sides. If you click the sign button, your user ID will be fetched and added to the list of signatures. If you run this on preview, you will be using the randomly generated</p>

<code>guest</code>

<p>UI used by preview.</p>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>Sign a guestbook. User names are stored in a RESFful API, whic is also included in this repo.</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>4</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>6</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/snowball-fight

# URL: https://github.com/decentraland-scenes/snowball-fight

<title>GitHub - decentraland-scenes/snowball-fight</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/snowball-fight</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>17</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>42</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Colyseus Tutorial</h1>

<p>A multiplayer scene with [Colyseus]{</p>

<p>for websockets multiplayer messaging. The game logic is carried out server-side.</p>

<p>This scene shows you:</p>

<li>How to support [Colyseus]{</li>

<li>in a Decentraland scene</li>

<li>How to set up a simple scene state in Colyseus</li>

<li>How to handle game state changes from the server in your scene</li>

<li>How to fetch a player's realm</li>

<li>How to keep track of the state of each realm as a separate room in your game</li>

<p>The server keeps track of the color selected by each player and the changes in cube colors.</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<code>$ npm i -g decentraland</code>

<strong>Run the server locally</strong>

<code>$ cd server

$ npm run build

$ npm run start</code>

<p>NOTE: If this is your first time running the scene then you need to run</p>

<code>npm install</code>

<p>before</p>

<code>npm start</code>

<strong>Run the scene</strong>

<p>Keep the server running, run the scene on a separate command line window:</p>

<code>$ cd scene

$ dcl start</code>

<strong>Scene Usage</strong>

<p>Open two separate browser windows, click on the cones to pick a color, then click on the cubes to paint them that same color.</p>

<h2>Using Colyseus SDK with Decentraland</h2>

<p>Install</p>

<code>colyseus.js</code>

<p>:</p>

<code>npm install --save colyseus.js</code>

<p>Add</p>

<code>colyseus.js</code>

<p>to your</p>

<code>"bundleDependencies"</code>

<p>in your</p>

<code>package.json</code>

<p>:</p>

<pre>: [</pre>

<pre>]</pre>

<p>To avoid TypeScript compilation errors you'll need to edit</p>

<code>tsconfig.json</code>

<p>, and include a few</p>

<code>///<reference</code>

<p>to your source-code, as you can see in the</p>

<p>file.</p>

<pre>{</pre>

<pre>: {</pre>

<pre>:</pre>

<pre>,</pre>

<pre>}

}</pre>

<p>The Colyseus SDK requires a few TypeScript libraries that are excluded by default by Decentraland.</p>

<h2>Creating a Colyseus server:</h2>

<code>npm init colyseus-app ./server</code>

<h2>Deploying to</h2>

<code>npm run build</code>

<p>Upload the</p>

<code>lib</code>

<p>folder from the Arena control panel.</p>

<h2>More</h2>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<p>If something doesnât work, please</p>

<p>.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>3</strong>

<h3>Watchers</h3>

<strong>3</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/using-colyseus-sdk-with-decentraland

# Change to URL: https://github.com/decentraland-scenes/Colyseus-Tutorial

# URL: https://github.com/decentraland-scenes/Colyseus-Tutorial

<title>GitHub - decentraland-scenes/Colyseus-Tutorial: Tutorial for multiplayer with Colyseus</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Tutorial for multiplayer with Colyseus</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/Colyseus-Tutorial</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>16</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>10</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Colyseus Tutorial</h1>

<p>A multiplayer scene with [Colyseus]{</p>

<p>for websockets multiplayer messaging. The game logic is carried out server-side.</p>

<p>This scene shows you:</p>

<li>How to support [Colyseus]{</li>

<li>in a Decentraland scene</li>

<li>How to set up a simple scene state in Colyseus</li>

<li>How to handle game state changes from the server in your scene</li>

<li>How to fetch a player's realm</li>

<li>How to keep track of the state of each realm as a separate room in your game</li>

<p>The server keeps track of the color selected by each player and the changes in cube colors.</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<code>$ npm i -g decentraland</code>

<strong>Run the server locally</strong>

<code>$ cd server

$ npm run build

$ npm run start</code>

<p>NOTE: If this is your first time running the scene then you need to run</p>

<code>npm install</code>

<p>before</p>

<code>npm start</code>

<strong>Run the scene</strong>

<p>Keep the server running, run the scene on a separate command line window:</p>

<code>$ cd scene

$ dcl start</code>

<strong>Scene Usage</strong>

<p>Open two separate browser windows, click on the cones to pick a color, then click on the cubes to paint them that same color.</p>

<h2>Using Colyseus SDK with Decentraland</h2>

<p>Install</p>

<code>colyseus.js</code>

<p>:</p>

<code>npm install --save colyseus.js</code>

<p>Add</p>

<code>colyseus.js</code>

<p>to your</p>

<code>"bundleDependencies"</code>

<p>in your</p>

<code>package.json</code>

<p>:</p>

<pre>: [</pre>

<pre>]</pre>

<p>To avoid TypeScript compilation errors you'll need to edit</p>

<code>tsconfig.json</code>

<p>, and include a few</p>

<code>///<reference</code>

<p>to your source-code, as you can see in the</p>

<p>file.</p>

<pre>{</pre>

<pre>: {</pre>

<pre>:</pre>

<pre>,</pre>

<pre>}

}</pre>

<p>The Colyseus SDK requires a few TypeScript libraries that are excluded by default by Decentraland.</p>

<h2>Creating a Colyseus server:</h2>

<code>npm init colyseus-app ./server</code>

<h2>Deploying to</h2>

<code>npm run build</code>

<p>Upload the</p>

<code>lib</code>

<p>folder from the Arena control panel.</p>

<h2>More</h2>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<p>If something doesnât work, please</p>

<p>.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>Tutorial for multiplayer with Colyseus</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>3</strong>

<h3>Watchers</h3>

<strong>3</strong>

<h3>Forks</h3>

<strong>3</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/osc-relay

# URL: https://github.com/decentraland-scenes/osc-relay

<title>GitHub - decentraland-scenes/osc-relay: Route OSC messages to Decentraland scenes, via Colyseus</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Route OSC messages to Decentraland scenes, via Colyseus</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/osc-relay</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>14</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>13</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Relay OSC messages to Decentraland</h1>

<p>This project relies on 3 parts:</p>

<li>A browser app that can receive OSC messages from any source (</li>

<em>linker-app</em>

<li>)</li>

<li>A Colyseus server that gets sent these messages over webSockets (</li>

<em>server</em>

<li>)</li>

<li>A Decentraland scene that receives these messages and updates positions of entities accordingly (</li>

<em>scene</em>

<li>)</li>

<p>You can generate OSC messages with many different sources, some examples:</p>

<li>OSCHoop Mobile app</li>

<li>Ableton Live + Connection Kit</li>

<li>Leap Motion + Ableton Live + Connection Kit</li>

<h2>Instructions</h2>

<h3>Run locally</h3>

<li>Open a console on the</li>

<code>server</code>

<li>folder</li>

<li>Run</li>

<code>npm run build</code>

<li>, then</li>

<code>npm run start</code>

<li>in server's folder to start the Colyseus local server</li>

<li>Open a second console window on the</li>

<code>linker-app/browser-oscjs</code>

<li>folder</li>

<li>Run</li>

<code>npm install</code>

<li>to install all the project dependencies.</li>

<li>Run</li>

<code>node .</code>

<li>to start the OSC relayer (no need to open the app in a browser window, it does all it needs to do from the console)</li>

<li>Check the IP and port that the OSC relayer is listening on. Hook any external services to this same address, make sure it's connected on the same local network.</li>

<li>Open a third console window in</li>

<code>scene</code>

<li>Run</li>

<code>dcl start</code>

<li>to start running the scene locally</li>

<p>Note: The server and scene expect messages with the following addresses:</p>

<code>/fader1</code>

<p>,</p>

<code>/fader2</code>

<p>,</p>

<code>/fader3</code>

<p>,</p>

<code>/fader4</code>

<p>, all with values between 0 and 1.</p>

<h3>Try it in-word</h3>

<li>Open a console window on the</li>

<code>linker-app/browser-oscjs</code>

<li>folder</li>

<li>Run</li>

<code>npm install</code>

<li>to install all the project dependencies.</li>

<li>Run</li>

<code>node .</code>

<li>to start the OSC relayer (no need to open the app in a browser window, it does all it needs to do from the console)</li>

<li>Check the IP and port that the OSC relayer is listening on. Hook any external services to this same address, make sure it's connected on the same local network.</li>

<li>Open a browser tab to visit Decentraland at coords</li>

<p>Note: This might not work if someone else is already acting as Director on this Colyseus server.</p>

<p>Note: The server and scene expect messages with the following addresses:</p>

<code>/fader1</code>

<p>,</p>

<code>/fader2</code>

<p>,</p>

<code>/fader3</code>

<p>,</p>

<code>/fader4</code>

<p>, all with values between 0 and 1.</p>

<h3>How this works</h3>

<li>The OSC Relayer app receives OSC messages and forwards these as Websocket messages to the Colyseus server.</li>

<li>The Colyseus server then updates its room state based on these messages</li>

<li>Scenes that are also connected to the Colyseus server get updated as the room state changes</li>

<p>In each Colyseus room, there can be only one "Director" user. This user is the one that sends all the changes, all other players just listen. The OSC relayer is connected as a director, sending a password together with the request to connect. Players who connect to the server via Decentraland join as audience, and have no means to affect the room state by themselves.</p>

<p>If a Colyseus room doesn't have a director assigned, it will listen to messages shared between rooms, using the</p>

<code>presence</code>

<p>functionality of Colyseus. In this way, a single Director can reach all rooms and affect all realms of Decentraland, without being limited to the room limits of Colyseus nor the realm limits of Decentraland.</p>

<h2>Using Colyseus SDK with Decentraland</h2>

<p>Install</p>

<code>colyseus.js</code>

<p>:</p>

<code>npm install --save colyseus.js</code>

<p>Add</p>

<code>colyseus.js</code>

<p>to your</p>

<code>"bundleDependencies"</code>

<p>in your</p>

<code>package.json</code>

<p>:</p>

<pre>: [</pre>

<pre>]</pre>

<p>To avoid TypeScript compilation errors you'll need to edit</p>

<code>tsconfig.json</code>

<p>, and include a few</p>

<code>///<reference</code>

<p>to your source-code, as you can see in the</p>

<p>file.</p>

<pre>{</pre>

<pre>: {</pre>

<pre>:</pre>

<pre>}

}</pre>

<p>The Colyseus SDK requires a few TypeScript libraries that are excluded by default by Decentraland.</p>

<h2>Creating a Colyseus server:</h2>

<code>npm init colyseus-app ./server</code>

<h2>Deploying to</h2>

<code>npm run build</code>

<p>Upload the</p>

<code>lib</code>

<p>folder from the Arena control panel.</p>

<h2>More</h2>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<p>If something doesnât work, please</p>

<p>.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>Route OSC messages to Decentraland scenes, via Colyseus</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>3</strong>

<h3>Watchers</h3>

<strong>3</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/relay-osc-messages-to-decentraland

# Change to URL: https://github.com/decentraland-scenes/Land-Flipper-Game

# URL: https://github.com/decentraland-scenes/Land-Flipper-Game

<title>GitHub - decentraland-scenes/Land-Flipper-Game: A multiplayer game with websockets</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A multiplayer game with websockets</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/Land-Flipper-Game</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>15</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>32</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Land Flipper Game</h1>

<p>A multiplayer game with</p>

<p>for websockets multiplayer messaging. The game logic is carried out server-side.</p>

<p>This scene shows you:</p>

<li>How to support</li>

<li>in a Decentraland scene</li>

<li>How to set up a simple game logic in Colyseus</li>

<li>How to handle game state changes from the server in your scene</li>

<li>How to fetch a player's realm</li>

<li>How to keep track of the state of each realm as a separate room in your game</li>

<li>How to handle team formation, scoring and time limits from the server</li>

<p>The server takes care of organizing players into teams and only starting a match when there are players on both sides.</p>

<p>Each scene runs its own calculations of the current remaining time and the scores of each team, but so does the server. In the end, the server has the final word about when the match is over and what is the final result.</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<code>$ npm i -g decentraland</code>

<strong>Run the server locally</strong>

<code>$ cd server

$ npm run build

$ npm run start</code>

<p>NOTE: If this is your first time running the scene then you need to run</p>

<code>npm install</code>

<p>before</p>

<code>npm start</code>

<strong>Run the scene</strong>

<p>Keep the server running, run the scene on a separate command line window:</p>

<code>$ cd scene

$ dcl start</code>

<strong>Scene Usage</strong>

<p>Open two separate browser windows, and direct one player to the Blue tile and another to the Red tile, so that there are players in both teams.</p>

<h2>Using Colyseus SDK with Decentraland</h2>

<p>Install</p>

<code>colyseus.js</code>

<p>:</p>

<code>npm install --save colyseus.js</code>

<p>Add</p>

<code>colyseus.js</code>

<p>to your</p>

<code>"bundleDependencies"</code>

<p>in your</p>

<code>package.json</code>

<p>:</p>

<pre>: [</pre>

<pre>]</pre>

<p>To avoid TypeScript compilation errors you'll need to edit</p>

<code>tsconfig.json</code>

<p>, and include a few</p>

<code>///<reference</code>

<p>to your source-code, as you can see in the</p>

<p>file.</p>

<pre>{</pre>

<pre>: {</pre>

<pre>:</pre>

<pre>,</pre>

<pre>}

}</pre>

<p>The Colyseus SDK requires a few TypeScript libraries that are excluded by default by Decentraland.</p>

<h2>Creating a Colyseus server:</h2>

<code>npm init colyseus-app ./server</code>

<h2>Deploying to</h2>

<code>npm run build</code>

<p>Upload the</p>

<code>lib</code>

<p>folder from the Arena control panel.</p>

<h2>More</h2>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<p>If something doesnât work, please</p>

<p>.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>A multiplayer game with websockets</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>6</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>2</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/POAP-Booth

# URL: https://github.com/decentraland-scenes/POAP-Booth

<title>GitHub - decentraland-scenes/POAP-Booth: A simple scene with an interactive booth that gives out POAP tokens to certify the player's attendance to an event</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A simple scene with an interactive booth that gives out POAP tokens to certify the player's attendance to an event</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/POAP-Booth</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>5</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>44</strong>

<h2>Files</h2>

<button>View code</button>

<h1>POAP Booth</h1>

<p>A simple scene with an interactive booth that hands out POAP tokens to certify the player's attendance to an event.</p>

<p>This scene shows you:</p>

<li>How to interact with the functions of a smart contract</li>

<li>How to obtain a player's wallet address</li>

<li>How to send requests to an API</li>

<li>How to use the messagebus to sync events between players</li>

<p>Important: This scene connects to a server that stores the POAP codes to be claimed. See</p>

<p>for instructions for how to set up this server.</p>

<p>When a POAP code is redeemed, the scene then sends a series of requests that include this code and the player's public address to servers from the POAP project, these return a cryptographic signed message. This message can then be used to call the POAP contract to mint a new POAP token that is sent to the player's wallet.</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$:  dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<p>If you click on the booth, this will send a request to attempt to claim a POAP token to a server. This request will fail the server's validations if you run the scene on a local preview. Only requests performed from inside Decentraland are allowed to work.</p>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<h2>Set up an event</h2>

<p>Each copy of a POAP token that is minted must present a single-use claim code, these are handed out by the POAP team when creating an event. A Decentraland POAP server acts as an intermediary to assign a unique claim code to each player, this server also requests a token using that claim code on behalf of the player.</p>

<p>See</p>

<p>for instructions on how to set up the event and the Decentraland POAP sever.</p>

<h2>Set up the scene</h2>

<p>Once the event and the Decentraland POAP server are set up, modify the</p>

<code>game.ts</code>

<p>file in this repo, when initializing the</p>

<code>POAPBooth</code>

<p>object, to match your event:</p>

<p>Change the second parameter,</p>

<code>eventUUID</code>

<p>, so that the string matches the</p>

<code>uuid</code>

<p>string that was returned by the Decentraland POAP server when registering the event.</p>

<p>So, for example if the Decentraland POAP server assigned you a UUID of</p>

<code>123456789-1234-1234-1234-123456789123</code>

<p>, your</p>

<code>game.ts</code>

<p>file should look like this:</p>

<pre>:</pre>

<pre>:</pre>

<p>TIP: When running a local preview of this scene with</p>

<code>dcl start</code>

<p>, you won't be able to fetch a POAP, because in preview mode you use a fake random id that won't match the one on your Metamask. You will be able to call a transaction, but the transaction will have an error. Once deployed it should work fine.</p>

<p>If something doesnât work, please</p>

<p>.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>A simple scene with an interactive booth that gives out POAP tokens to certify the player's attendance to an event</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>30</strong>

<h3>Watchers</h3>

<strong>4</strong>

<h3>Forks</h3>

<strong>26</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/orgs/decentraland-scenes/repositories?page=1&type=all

# URL: https://github.com/orgs/decentraland-scenes/repositories?page=1&type=all

<title>decentraland-scenes Â· GitHub</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<h2>Repositories</h2>

<p>A collection of links to examples and tutorials to help you get started building Decentraland scenes and other content.</p>

<p>Using the rewards server to claim wearables</p>

<p>A simple portable experience where you can create portals anywhere in the world</p>

<p>The newly revamped Genesis Plaza.</p>

<p>A scene showing a working quest</p>

<p>A simple platformer that demonstrates various platform movements using code.</p>

<p>Forbid players from claiming a prize if wearing any portable experience</p>

<p>Green Screen Scene for photoshoots and showing off wearables and emotes. You can switch background colors</p>

<p>A simple example that shows how you can use DCL Access library to restrict access to players to a part of your scene</p>

<p>A scene that checks a weather API for the weather in a location and displays that weather condition, showing rain, thunder or snowflakes Use real weather data from different locations by changing the coordinates, or change the value of the âfakeWeatherâ variable to see different weather conditions manifest.</p>

<p>A scene that shows how you can use Ray Casting to trace imaginary lines in space and check for object intersections.</p>

<p>A scene where you can play different songs by pressing buttons on a jukebox.</p>

<p>A fully fledged game, based on the popular game 2048.</p>

<p>port of</p>

<p>colyseus-sdk7</p>

<p>A large example scene with a store, this example is meant for using in worlds. It includes default art but no interactive behavior</p>

<p>A large scene for worlds, with a simple screen ready for streaming video</p>

<p>A simple scene with default art meant for Worlds, with 10x10 parcels</p>

<p>A template scene with default art, featuring an office. This is built for using in Worlds</p>

<p>A large scene for worlds, with default art, featuring a cool nightclub</p>

<p>Basic 101 Avocado Tutorial</p>

<em>1</em>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/orgs/decentraland-scenes/repositories?page=3&type=all

# URL: https://github.com/orgs/decentraland-scenes/repositories?page=3&type=all

<title>decentraland-scenes Â· GitHub</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<h2>Repositories</h2>

<p>A portable experience to paint graffitti on a layer only visible to those wearing the wearable</p>

<p>Assets and code used for the Metaverse Festival 2022 Main Stage Scene</p>

<p>Assets and code used for the Metaverse Festival 2022 Tower of Babel Scene</p>

<p>Stress test the SDK with many entities updating every frame</p>

<p>A simpe example scene that uses quests</p>

<p>Medieval Plaza in Decentraland</p>

<p>crypto valley convention center</p>

<p>Optimized scene that only loads certain entites when the player approaches them</p>

<p>A project that shows how to use workspaces to run multiple scenes + smart wearables together</p>

<p>Grant admin players special abilities in a scene, like kicking other players out</p>

<p>A minimal scene that shows all the basic ways a player can interact with a scene.</p>

<p>Demonstrates several objects that react to your proximity. Simulates a Boolean Hole in a wall, has objects that move over/around you, triggers to activate effects inside or outside the building.</p>

<p>A simple generic virtual museum for displaying NFT art</p>

<p>A basic generic virtual store for wearables and other tokens</p>

<p>Test scene to verify a bug with UVs</p>

<p>Asian Plaza in Decentraland</p>

<p>Forst plaza</p>

<p>messageBus-tuto</p>

<p>An example scene that handles quests</p>

<p>Trams public transport system</p>

<p>A fully-fledged game where a random 2d path is generated along which enemies walk, and where traps are randomly placed. You need to activate the traps as the enemies advance along the path to kill them. Itâs all about timing.</p>

<p>A scene where birds fly up in the air based on their relative distance to the player.</p>

<p>Tool that helps you project a large video stretching over many smaller screens</p>

<p>Decentraland's first 24/7 night club</p>

<p>Checks whether the player owns a token from a particular smart contract before granting them permission to enter the club.</p>

<em>3</em>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/boids

# URL: https://github.com/decentraland-scenes/boids

<title>GitHub - decentraland-scenes/boids</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/boids</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>2</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>11</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Boids</h1>

<p>Boids is an implementation of the boids algorithm. This can be used for simulation flock behavior such as birds or fish in 3D space.  It uses a grid implementation for fast lookups.</p>

<h1>Class Overview</h1>

<p>BoidsController class defines a container for boids entities. All entities (flock or obstalces) are added to BoidsController. BoidsController calculates and updates entity positions and velocities.</p>

<p>BoidSystem is the wrapper for BoidsController to make it work inside a Decentraland SDK. The responsibility of this class is to create a new BoidsController instance with the received data and run the requested iterations in this isolated context.</p>

<p>setupBoids is the setup class.  It will initialize the BoidController.  Here can define here the area, flock, obsticles, predators, subGrid count</p>

<p>BoidEntity class defines an entitiy model which has a position and a velocity. Also it has some utiliy methods.</p>

<p>Grid class creates cubic grid for spatial partitioning. This helps lookups to be performed faster for nearby entities. More information can be found here:</p>

<h1>Configuration</h1>

<p>/src/boids/Constants.js</p>

<p>See Debug Markers such as grid markers, boundary top/bottom, obstacles, seek and prediator entities</p>

<code>//see debug markers for seek/obsticle/predator

VISIBLE_OBSTACLES:boolean = true

VISIBLE_SEEK:boolean = true

VISIBLE_PREDATOR:boolean = true

// see boundary grid markers

SHOW_DEBUG_BOUNDARY_MARKERS:boolean = true

// see boundary planes (top,bottom)

SHOW_DEBUG_BOUNDARY_PLANES:boolean = true</code>

<p>/src/config.ts</p>

<code>TEST_CONTROLS_ENABLE = true</code>

<p>/src/boids/setupBoids.js</p>

<p>see initBoidController for creation of all entities types.  Some flags of note include</p>

<code>//SETUP BOUNDARIES

const parcelSize = 15.5

const width = parcelSize

const depth = parcelSize * 2

const height = 5

const heightBottomOffset = 1

const subGrids = 4 //large grid count makes all fish operating the same get reduced

/*

300 - 1 subgrid

600 - 2 subgrid

700 - 3 subgrid*

*/

//SETUP INITIALIZATION OF BOIDS

const flockEntityCount = 80

//will randomly place these

const obstacleEntityCount = 0

const predatorCount = 0

const seekCount = 0</code>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Open this folder on the command line, then run:</p>

<code>dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<h2>Deploy to Decentraland</h2>

<p>If you own any parcels of land in Decentraland, or have permissions to deploy to someone else's, you can publish this project.</p>

<li>Make sure the scene parcels in</li>

<code>scene.json</code>

<li>match those you own or have permissions on.</li>

<li>Run</li>

<code>dcl deploy</code>

<li>on the project folder</li>

<li>This will open a browser tab to confirm. Metamask will prompt you to sign.</li>

<p>Note: Make sure you are using the wallet that owns the parcels or has permissions.</p>

<h3>Deploy to a free server</h3>

<p>If you don't own parcels in Decentraland or are not ready to publish your scene to the world, you can share your creations by uploading your scenes to a free hosting service.</p>

<p>See</p>

<p>for instructions on how to do this.</p>

<h2>Resources</h2>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<p>Find more example scenes, tutorials and helper libraries in the</p>

<p>.</p>

<p>If you need any help, join</p>

<p>, where you'll find a vibrant community of other creators who are eager to help. You're sure to find help in the #SDK support channel.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>Acknowledgements</h2>

<p>Code here is an adaptation of</p>

<p>BoidJS has standard MIT licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>3</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/Smart-wearable-graffitti

# URL: https://github.com/decentraland-scenes/Smart-wearable-graffitti

<title>GitHub - decentraland-scenes/Smart-wearable-graffitti: A portable experience to paint graffitti on a layer only visible to those wearing the wearable</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A portable experience to paint graffitti on a layer only visible to those wearing the wearable</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/Smart-wearable-graffitti</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>6</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>6</strong>

<h2>Files</h2>

<button>View code</button>

<h1>graffitti</h1>

<p>A portable experience to paint graffitti on a layer only visible to those wearing the wearable</p>

<h2>About</h2>

<p>A portable experience to paint graffitti on a layer only visible to those wearing the wearable</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>1</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/metaverse-festival22-main-stage

# URL: https://github.com/decentraland-scenes/metaverse-festival22-main-stage

<title>GitHub - decentraland-scenes/metaverse-festival22-main-stage: Assets and code used for the Metaverse Festival 2022 Main Stage Scene</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Assets and code used for the Metaverse Festival 2022 Main Stage Scene</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/metaverse-festival22-main-stage</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>5</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Metaverse Music Festival 2022 Main Sage</h1>

<p>Assets and code used for the</p>

<p>Main Stage Scene</p>

<h2>How to deploy</h2>

<p>NOTE: This is deployed by a git action

branches are configured to auto deploy.  Merge code ready to release into release branch</p>

<li>master = peer-testing</li>

<li>release = production</li>

<p>Requires an action secret setup named DCL_PRIVATE_KEY that has a private key to a wallet that has operator rights to the parcels you are deploying to</p>

<h2>Description</h2>

<p>This scene demonstrates how to synchronize actions in the scene to specific moments in a video by implementing the</p>

<p>.</p>

<p>This scene shows you:</p>

<li>How to schedule playing a video streamed on-demand to play at a certain time</li>

<li>How to sync actions in the scene to moments in the video</li>

<p>Note: For details on how to store videos in servers that can be fetched from Decentraland, see</p>

<h2>Tutorial</h2>

<h3>Show Managment Library</h3>

<h3>Show Management Scene</h3>

<h2>What is Where</h2>

<h4>src/show-management</h4>

<p>is a copy of the show management library code. hopfully you do not have to touch this. but is there for quick edits if needed</p>

<h3>src/subtitle-files</h3>

<p>holds subtitles for videos</p>

<h3>src/modules/festivalMgmt</h3>

<p>serverHandler.ts handled pinging the remote server</p>

<p>manageShow.ts handles actions to fire for a show</p>

<h3>showMgmt/modules/showMgmt</h3>

<h4>showMgmt/modules/showMgmt/scheduleSetup.ts</h4>

<p>configured shows however serverHandler.ts will override this</p>

<p>Default video url is in here</p>

<h4>showMgmt/modules/showMgmt/showEntities.ts</h4>

<p>registers show entities with the show manager. Example animations</p>

<h4>showMgmt/modules/showMgmt/showSetup.ts</h4>

<p>sets up the show manager instance</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>Assets and code used for the Metaverse Festival 2022 Main Stage Scene</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/metaverse-festival22-tower-of-babel

# URL: https://github.com/decentraland-scenes/metaverse-festival22-tower-of-babel

<title>GitHub - decentraland-scenes/metaverse-festival22-tower-of-babel: Assets and code used for the Metaverse Festival 2022 Tower of Babel Scene</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Assets and code used for the Metaverse Festival 2022 Tower of Babel Scene</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/metaverse-festival22-tower-of-babel</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>3</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Tower of Babel</h1>

<p>Assets and code used for the</p>

<p>Tower of Babel Scene</p>

<h2>How to deploy</h2>

<p>NOTE: This can be deployed by a git action.

Branches are configured to auto deploy.  Merge code ready to release into release branch</p>

<li>release = production</li>

<p>Requires an action secret setup named DCL_PRIVATE_KEY that has a private key to a wallet that has operator rights to the parcels you are deploying to</p>

<p>This folder contains all the necessary files to launch a Decentraland scene.</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Open this folder on the command line, then run:</p>

<code>dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<h2>Deploy to Decentraland</h2>

<p>If you own any parcels of land in Decentraland, or have permissions to deploy to someone else's, you can publish this project.</p>

<li>Make sure the scene parcels in</li>

<code>scene.json</code>

<li>match those you own or have permissions on.</li>

<li>Run</li>

<code>dcl deploy</code>

<li>on the project folder</li>

<li>This will open a browser tab to confirm. Metamask will prompt you to sign.</li>

<p>Note: Make sure you are using the wallet that owns the parcels or has permissions.</p>

<h3>Deploy to a free server</h3>

<p>If you don't own parcels in Decentraland or are not ready to publish your scene to the world, you can share your creations by uploading your scenes to a free hosting service.</p>

<p>See</p>

<p>for instructions on how to do this.</p>

<h2>Resources</h2>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<p>Find more example scenes, tutorials and helper libraries in the</p>

<p>.</p>

<p>If you need any help, join</p>

<p>, where you'll find a vibrant community of other creators who are eager to help. You're sure to find help in the #SDK support channel.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>Assets and code used for the Metaverse Festival 2022 Tower of Babel Scene</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/stress-test

# URL: https://github.com/decentraland-scenes/stress-test

<title>GitHub - decentraland-scenes/stress-test: Stress test the SDK with many entities updating every frame</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Stress test the SDK with many entities updating every frame</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/stress-test</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>4</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>1</strong>

<h2>Files</h2>

<button>View code</button>

<h1>stress-test</h1>

<p>Stress test the SDK with many entities updating every frame</p>

<h2>About</h2>

<p>Stress test the SDK with many entities updating every frame</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/Portal-quest

# URL: https://github.com/decentraland-scenes/Portal-quest

<title>GitHub - decentraland-scenes/Portal-quest: A simpe example scene that uses quests</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A simpe example scene that uses quests</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/Portal-quest</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>4</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>8</strong>

<h2>Files</h2>

<button>View code</button>

<h1>portal-quest</h1>

<p>A simpe example scene that uses quests</p>

<p>IMPORTANT: To run this example with</p>

<code>dcl start</code>

<p>, make sure you manually add this to the preview URL</p>

<code>&QUESTS_SERVER_URL=https://quests-api.decentraland.io</code>

<p>This quest includes some single tasks, a step based task, and stores arbritrary state that gives the game continuity if you come back. It also gives away a POAP reward when the quest is finished.</p>

<p>Check the file</p>

<code>quest-example.json</code>

<p>to see what was uploaded to the quests server to match this scene.</p>

<p>Note: This quest includes a reward, the reward must be first created in the server with a separate request, and then linked to the quest by id.</p>

<h2>Quest library</h2>

<h3>Install</h3>

<p>To install the library in a Decentraland scene, run:</p>

<code>npm i dcl-ecs-quests -B</code>

<p>Then open your sceneâs tsconfig.json file, and add the following to the paths object:</p>

<pre>: [</pre>

<pre>],</pre>

<p>Finally, run dcl start or dcl build on your project for all the internal files of the library to get properly built.</p>

<p>Then on your sceneâs Typescript files import the library by writing the following:</p>

<h3>Initiate a quest tracker</h3>

<p>All interactions with the quest server and the quest UI are handled by a quest tracker object.</p>

<p>To initiate a quest tracker, create a new RemoteQuestTracker object, passing at least a quest ID, referencing a quest thatâs already created in the quests server.</p>

<p>Note: Since the constructor of RemoteQuestTracker is asynchronous, you should run it inside an async function or an async block. All examples from now on will be assumed to run asynchronously.</p>

<h2>About</h2>

<p>A simpe example scene that uses quests</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>7</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/Medieval-Plaza

# URL: https://github.com/decentraland-scenes/Medieval-Plaza

<title>GitHub - decentraland-scenes/Medieval-Plaza: Medieval Plaza in Decentraland</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Medieval Plaza in Decentraland</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/Medieval-Plaza</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>4</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>2</strong>

<h2>Files</h2>

<button>View code</button>

<h1>MedievalPlaza</h1>

<p>Medieval Plaza in Decentraland</p>

<h2>About</h2>

<p>Medieval Plaza in Decentraland</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>3</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/crypto-valley-conference-center

# URL: https://github.com/decentraland-scenes/crypto-valley-conference-center

<title>GitHub - decentraland-scenes/crypto-valley-conference-center: crypto valley convention center</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>crypto valley convention center</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/crypto-valley-conference-center</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>16</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>30</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Crypto Valley Convention Center</h1>

<p>The convention center is a venue that hosts all kinds of live events with a live streaming screen.</p>

<p>This scene shows you:</p>

<li>How to stream video and audio</li>

<li>How to trigger the playing of video or audio streams with trigger aras</li>

<li>How to handle a POAP dispenser</li>

<li>How to allowlist players as admins with special permissions in a scene</li>

<li>How to teleport a player within a scene</li>

<li>How to fetch data from an API to display market values in a scene</li>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$:  dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<strong>Scene Usage</strong>

<p>The main lobby has a screen that can be hooked up to video streams, then upstairs there's alo a sound stream and a video stream that projects onto some spinning cubes. When the player is in the lobby, only the stream downstairs runs. If the player goes upstairs, only the upstairs streams run.</p>

<p>There's a POAP dispenser machine that connects to a server to hand out POAP tokens to visitors.</p>

<p>The back of the building shows the price of a few coins, with data fetched on loading from the Binance API.</p>

<p>Admin users that are whitelisted by name can access a special UI to send announcement messages or to kick out problematic players, teleporting them to the 0,0 of the scene.</p>

<h2>About</h2>

<p>crypto valley convention center</p>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>3</strong>

<h3>Watchers</h3>

<strong>1</strong>

<h3>Forks</h3>

<strong>5</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/halloween-day5

# URL: https://github.com/decentraland-scenes/halloween-day5

<title>GitHub - decentraland-scenes/halloween-day5</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/halloween-day5</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>1</strong>

<h2>Files</h2>

<button>View code</button>

<h2>About</h2>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>3</strong>

<h3>Forks</h3>

<strong>2</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/lazy-loading

# URL: https://github.com/decentraland-scenes/lazy-loading

<title>GitHub - decentraland-scenes/lazy-loading: Optimized scene that only loads certain entites when the player approaches them</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Optimized scene that only loads certain entites when the player approaches them</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/lazy-loading</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>2</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>22</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Lazy Loading</h1>

<p>This is an optimized scene that only loads certain entities when the player approaches them. This reduces the scene load time, and also has less of an impact on framerate as the player moves through the scene.</p>

<p>Art galleries often include a lot of NFTs, which raises the material count and impacts performance considerably. Keep in mind that the material count only considers materials being used at a given time. Entities that are not currently being loaded aren't counted. The ideal solution is to not load everything at once, but instead to load and unload content that is indoors as the player enters the corresponding parts of the scene.</p>

<p>This scene includes multiple small buildings, each with a set of NFTs in it. Each of these buildings has a trigger area that loads its NFTs only when the player walks near it, and then hides them when the player walks away.</p>

<p>For easier maintenance, the scene lists all of the NFTs in the scene in an array, including data about their positions and what subScene they belong to. The scene then assigns these to their corresponding subScene and handles showing and hiding them when appropriate.</p>

<p>We then take this further.  What if you wanted multiple galleries but not the space to display them all in your parcel.  Enter SubScenes.   We show you how to register entities to SubScenes, register those SubScenes to a Scene Manager and from there you can convienently swap out which subscenes you want visible and when.  It also provides a visibilityStrategy flag on the SubScene and registered SceneEntities allowing you to further fine tune how you manage resources of the scene.</p>

<h2>Video Tutorial</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command</p>

<pre>npm i -g decentraland</pre>

<p>For a more details, follow the steps in the</p>

<p>.</p>

<strong>Previewing the scene</strong>

<p>Once you've installed the CLI, download this example and navigate to its directory from your terminal or command prompt.</p>

<em>from the scene directory:</em>

<code>$:  dcl start</code>

<p>Any dependencies are installed and then the CLI will open the scene in a new browser tab automatically.</p>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<h2>Hide / Show Options</h2>

<p>When you wrap an SDK Entity in a EntityWrapper class and put it into a SubScene when SubScene init(), hide(), show() is called you can choose if that entity is removed from the engine or just hidden with a</p>

<code>visibilityStrategy</code>

<p>flag.</p>

<code>sceneEntity.visibilityStrategy = VisibilityStrategyEnum.ENGINE_ADD_REMOVE

OR

sceneEntity.visibilityStrategy = VisibilityStrategyEnum.SHAPE_SHOW_HIDE</code>

<code>ENGINE_ADD_REMOVE</code>

<p>Pros</p>

<li>Performance gain as it completely removes the item from engine so in no way impacts engine resources (GPU, textures, systems etc)</li>

<p>Cons</p>

<li>Hiding and particularly showing (for the first time) may cause some increased CPU work and may not appear immeidatly in scene.   You need to account for this.</li>

<p>Could be good or bad</p>

<li>Systems are no longer aware of the entity and operate on it</li>

<code>SHAPE_SHOW_HIDE</code>

<p>Pros</p>

<li>Performance gain for the GPU.  It does not have to spend time on rendering it.</li>

<li>Because it is already in the engine it has faster loading time when hide/showing</li>

<p>Cons</p>

<li>While the GPU does not have to render it, it is still in the engine consuming resources. For example Systems still see it and operate on it.  Textures, Body counts remain higher</li>

<p>Could be good or bad</p>

<li>Systems are still aware of the entity and operate on it</li>

<h3>Listeners</h3>

<p>You also can choose to implement listeners to react to hiding and showing of the entity.   From here you can fully customize the life cycle of the object from a init, show and hide perspective.  For example could choose to lazy load the entity when the scene itself is init.</p>

<code>sceneEnt.addOnInitListener((entityWrap)=>{

//do something special

})

sceneEnt.addOnShowListener((entityWrap)=>{

//do something special

})

sceneEnt.addOnHideListener((entityWrap)=>{

//do something special

})</code>

<h2>Usage of Scene Manager</h2>

<p>see</p>

<code>/src/subSceneSetup.ts</code>

<p>for an exampe of how to use Scene Manager with SubScenes</p>

<code>SCENE_MGR = new SceneManager();

//make scene1

const mySceneEntity = new Entity()

mySceneEntity.addComponent(new BoxShape())

const sceneId = SCENE_MGR.generateSceneId()

const subScene = new SubScene(sceneId,"myScene",[],undefined,undefined)

const sceneEntity = subScene.addEntity(mySceneEntity)

sceneEntity.visibilityStrategy = VisibilityStrategyEnum.ENGINE_ADD_REMOVE

SCENE_MGR.addScene(subScene)

//make scene2

const mySceneEntity2 = new Entity()

mySceneEntity2.addComponent(new ConeShape())

const sceneId2 = SCENE_MGR.generateSceneId()

const subScene2 = new SubScene(sceneId2,"myScene2",[],undefined,undefined)

const sceneEntity2 = subScene2.addEntity(mySceneEntity2)

sceneEntity2.visibilityStrategy = VisibilityStrategyEnum.ENGINE_ADD_REMOVE

SCENE_MGR.addScene(subScene2)

...

SCENE_MGR.changeToScene(subScene) //change to desired scene</code>

<h2>Class Diagram</h2>

<pre>classDiagram

SceneManager "*" o-- "1" SubScene : Manages SubScenes

SubScene "*" o-- "1" SceneEntity : Manages the scene entities

SubScene "*" --o "1" SubSceneGroup : Groups a collection of subscenes

EntityWrapper "*" o-- "1" Entity : Manages the entity in unity

SceneEntity --|> EntityWrapper: extends

SubSceneGroup --|> SubScene: extends

SubScene --|> BaseEntityWrapper: extends

EntityWrapper --> BaseEntityWrapper : extends

class SceneManager{

scenes:SubScene[] = []

generateSceneId():number

getSceneById(id:number):SubScene|null

addScene(scene:SubScene|SceneInitData):SubScene

changeToScene(scene:SubScene)

initScenes()

hideScenes()

}

class BaseEntityWrapper{

name:string

visible:boolean=true

visibilityStrategy:VisibilityStrategyEnum = VisibilityStrategyEnum.SHAPE_SHOW_HIDE

visibleTransformInfo?:Transform //if vault hide/showing

initAlready:boolean=false

onInitListener:EntityActionListener[] = [] //(scene:SubScene)=>void = []

onShowListener:EntityActionListener[] = []

onHideListener:EntityActionListener[] = []

enabled:boolean=true

disable()

enable()

init()

onChangeEntityVisibility(entity:BaseEntityWrapper,type:VisibleChangeType)

isVisible()

onHide(baseEntWrapper:BaseEntityWrapper)

onShow(baseEntWrapper:BaseEntityWrapper)

onInit(baseEntWrapper:BaseEntityWrapper)

processListener(sceneEnt:BaseEntityWrapper,listeners:((sceneEnt:BaseEntityWrapper)=>void)[] )

show(force?:boolean)

hide(force?:boolean)

addOnInitListener(listener:EntityActionListener)

addOnShowListener(listener:EntityActionListener)

addOnHideListener(listener:EntityActionListener)

}

class EntityWrapper{

rootEntity:Entity

entities:Entity[]

addEntity(entity:Entity)

onShow()

onHide()

}

class SceneEntity{

}

class SubScene {

public rootEntity?: Entity

public triggerEntity: Entity

public initAlready:boolean = false

public entities: SceneEntity[]

public id: number

public spawnPoints:SpawnPoint[]=[]

addEntity(sceneEnt:SceneEntity|Entity,args?:SceneEntityArgs):SceneEntity

onInit(sceneEnt:SubScene)

randomSpawnPoint(spawnPointFilter?:POISelectorType):SpawnPoint

movePlayerHere(spawnPointFilter?:POISelectorType|SpawnPoint)

onHide(scene:SubScene)

onShow(scene:SubScene)

}

class SubSceneGroup{

public scenes:SubScene[]=[]

disable()

enable()

init()

onHide(scene:SubScene)

onShow(scene:SubScene)

}</pre>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>Optimized scene that only loads certain entites when the player approaches them</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>3</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>1</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/dcl-working-with-workspaces

# URL: https://github.com/decentraland-scenes/dcl-working-with-workspaces

<title>GitHub - decentraland-scenes/dcl-working-with-workspaces: A project that shows how to use workspaces to run multiple scenes + smart wearables together</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A project that shows how to use workspaces to run multiple scenes + smart wearables together</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/dcl-working-with-workspaces</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>2</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>10</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Working With Workspaces</h1>

<h2>Description</h2>

<p>This scene demonstrates how to run multiple scenes and/or portable experiences at one time</p>

<p>This scene shows you:</p>

<li>How to add/remove scenes from the workspace</li>

<li>Run multiple scenes at same time</li>

<li>Run portable experiences with other scenes</li>

<li>Make odd scene shapes such as a hollow rectangles</li>

<h2>Video Tutorial</h2>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Open this folder on the command line, then run:</p>

<code>dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>A project that shows how to use workspaces to run multiple scenes + smart wearables together</p>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>0</strong>

<h3>Forks</h3>

<strong>2</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/digital-bouncer

# URL: https://github.com/decentraland-scenes/digital-bouncer

<title>GitHub - decentraland-scenes/digital-bouncer: Grant admin players special abilities in a scene, like kicking other players out</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Grant admin players special abilities in a scene, like kicking other players out</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/digital-bouncer</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>5</strong>

<h2>Files</h2>

<button>View code</button>

<h2>Digital Bouncer</h2>

<p>A simple scene where special admin users can be given special abilities in a scene. This scene shows you:</p>

<li>How to grant special abilities to admin users in a scene</li>

<li>How to use a fill-in prompt from the UI library</li>

<li>How to use the UI library to display announcements</li>

<li>How to teleport a player to specific coordinates in the scene</li>

<li>How to toggle the showing and hiding of UIs with global buttons</li>

<li>How to check if the scene runs in preview or in production</li>

<p>This kind of interface is especially useful in events, where you might want to grant an admin user special abilities to make sure everything runs smoothly, and deter trolls.</p>

<p>Note that all of the actions carried out by a scene admin user are contained in the realm where the user is at. For event that span multiple realms, you should have an admin on each realm, or at least focus on the ones where your scene is the most crowded.</p>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command</p>

<pre>npm i -g decentraland</pre>

<p>For a more details, follow the steps in the</p>

<p>.</p>

<strong>Previewing the scene</strong>

<p>Once you've installed the CLI, download this example and navigate to its directory from your terminal or command prompt.</p>

<em>from the scene directory:</em>

<code>$:  dcl start</code>

<p>Any dependencies are installed and then the CLI will open the scene in a new browser tab automatically.</p>

<strong>Usage</strong>

<p>If the scene runs in preview, all users behave as admin users. In production, the only ones with admin powers will be those who's names are in the list</p>

<code>allowListedIds</code>

<p>in</p>

<code>bouncerUI.ts</code>

<p>.</p>

<p>An admin usr can do two things</p>

<li>Click E to toggle the announcement UI. Any messages written here are are displayed for a few seconds on the screens of all players in the scene.</li>

<li>Click F to toggle the bouncer UI. By writing the display name of a player and pressing "Kick", that player is teleported to the</li>

<em>0,0,0</em>

<li>corner of the scene, outside the main building.</li>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>Grant admin players special abilities in a scene, like kicking other players out</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>3</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/boolean-hole-and-proximity-spheres

# URL: https://github.com/decentraland-scenes/boolean-hole-and-proximity-spheres

<title>GitHub - decentraland-scenes/boolean-hole-and-proximity-spheres: Demonstrates several objects that react to your proximity. Simulates a Boolean Hole in a wall, has objects that move over/around you, triggers to activate effects inside or outside the building.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Demonstrates several objects that react to your proximity. Simulates a Boolean Hole in a wall, has objects that move over/around you, triggers to activate effects inside or outside the building.</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/boolean-hole-and-proximity-spheres</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>1</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Boolean Hole + Proximity Spheres</h1>

<p>This example scene demonstrates several objects that react to your proximity.  Simulates a Boolean Hole in a wall, has objects that move over/around you, triggers to activate effects inside or outside the building.</p>

<p>To conserve polygons it uses a plane + billboard affect to give the illusion of a sphere.</p>

<p>To conserve the amount of materials used it makes use of a object pool to reuse and reduce the amount of materials needed for the +300 spheres.</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Open this folder on the command line, then run:</p>

<code>dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<h2>Deploy to Decentraland</h2>

<p>If you own any parcels of land in Decentraland, or have permissions to deploy to someone else's, you can publish this project.</p>

<li>Make sure the scene parcels in</li>

<code>scene.json</code>

<li>match those you own or have permissions on.</li>

<li>Run</li>

<code>dcl deploy</code>

<li>on the project folder</li>

<li>This will open a browser tab to confirm. Metamask will prompt you to sign.</li>

<p>Note: Make sure you are using the wallet that owns the parcels or has permissions.</p>

<h3>Deploy to a free server</h3>

<p>If you don't own parcels in Decentraland or are not ready to publish your scene to the world, you can share your creations by uploading your scenes to a free hosting service.</p>

<p>See</p>

<p>for instructions on how to do this.</p>

<h2>Resources</h2>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<p>Find more example scenes, tutorials and helper libraries in the</p>

<p>.</p>

<p>If you need any help, join</p>

<p>, where you'll find a vibrant community of other creators who are eager to help. You're sure to find help in the #SDK support channel.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>Acknowledgements</h2>

<p>Outside building sound</p>

<p>is from</p>

<p>Inside Building Sound</p>

<p>is from</p>

<h2>About</h2>

<p>Demonstrates several objects that react to your proximity. Simulates a Boolean Hole in a wall, has objects that move over/around you, triggers to activate effects inside or outside the building.</p>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>3</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/models

# URL: https://github.com/decentraland-scenes/models

<title>GitHub - decentraland-scenes/models</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/models</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>1</strong>

<h2>Files</h2>

<button>View code</button>

<h1>models</h1>

<h2>About</h2>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/first-ecs7-scene

# URL: https://github.com/decentraland-scenes/first-ecs7-scene

<title>GitHub - decentraland-scenes/first-ecs7-scene</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/first-ecs7-scene</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>7</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>12</strong>

<h2>Files</h2>

<button>View code</button>

<h1>ECS7 Test scene</h1>

<p>This scene is built with the ECS7 in alpha state.</p>

<li>Run</li>

<code>npm i</code>

<li>Run</li>

<code>npm start</code>

<h2>About</h2>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>1</strong>

<h3>Watchers</h3>

<strong>4</strong>

<h3>Forks</h3>

<strong>1</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/museum_template

# Change to URL: https://github.com/decentraland-scenes/Store-Template

# URL: https://github.com/decentraland-scenes/Store-Template

<title>GitHub - decentraland-scenes/Store-Template: A basic generic virtual store for wearables and other tokens</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A basic generic virtual store for wearables and other tokens</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/Store-Template</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>2</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>4</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Store Template</h1>

<p>A basic generic virtual store for wearables and other tokens</p>

<p>This scene shows you:</p>

<li>How to add links to wearables on the market place</li>

<li>How to add a streaming video</li>

<li>How to add a POAP booth</li>

<li>How to add external links</li>

<li>How to organize the scene's content into neat modular components that are easy to change from a config file</li>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$:  dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.

Learn more about how to build your own scenes in our</p>

<p>site.</p>

<p>If something doesnât work, please</p>

<p>.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>A basic generic virtual store for wearables and other tokens</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>3</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>2</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/avatar-mirror

# URL: https://github.com/decentraland-scenes/avatar-mirror

<title>GitHub - decentraland-scenes/avatar-mirror</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/avatar-mirror</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>2</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>2</strong>

<h2>Files</h2>

<button>View code</button>

<h2>About</h2>

<h3>Stars</h3>

<strong>1</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>2</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/testUVs

# URL: https://github.com/decentraland-scenes/testUVs

<title>GitHub - decentraland-scenes/testUVs: Test scene to verify a bug with UVs</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Test scene to verify a bug with UVs</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/testUVs</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>2</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>3</strong>

<h2>Files</h2>

<button>View code</button>

<h2>About</h2>

<p>Test scene to verify a bug with UVs</p>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/Asian-Plaza

# URL: https://github.com/decentraland-scenes/Asian-Plaza

<title>GitHub - decentraland-scenes/Asian-Plaza: Asian Plaza in Decentraland</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Asian Plaza in Decentraland</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/Asian-Plaza</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>2</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>2</strong>

<h2>Files</h2>

<button>View code</button>

<h1>plaza-asian</h1>

<p>Asian Plaza in Decentraland</p>

<h2>About</h2>

<p>Asian Plaza in Decentraland</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>3</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/ForestPlaza

# URL: https://github.com/decentraland-scenes/ForestPlaza

<title>GitHub - decentraland-scenes/ForestPlaza: Forst plaza</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Forst plaza</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/ForestPlaza</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>3</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>1</strong>

<h2>Files</h2>

<button>View code</button>

<h2>About</h2>

<p>Forst plaza</p>

<h3>License</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>3</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/Fireworks-MessageBus

# URL: https://github.com/decentraland-scenes/Fireworks-MessageBus

<title>GitHub - decentraland-scenes/Fireworks-MessageBus: messageBus-tuto</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>messageBus-tuto</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/Fireworks-MessageBus</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>3</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>5</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Fireworks-MessageBus</h1>

<p>A simple scene where players can light up fireworks, and all other players see them light up too.</p>

<p>This scene shows you:</p>

<li>How to keep players synced by using the messagebus to communicate each player's actions to others</li>

<li>How to play sounds from files</li>

<li>How to encapsule a set of components into an object to easily reuse</li>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$:  dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<strong>Scene Usage</strong>

<p>Click on one of the firewarks to light it up!</p>

<p>If there are multiple players in the scene, they should all see them launch too. You can simulate this by opening two browser tabs with the same preview.</p>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<p>If something doesnât work, please</p>

<p>.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>messageBus-tuto</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>1</strong>

<h3>Watchers</h3>

<strong>3</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/old-lady-quest-part1

# URL: https://github.com/decentraland-scenes/old-lady-quest-part1

<title>GitHub - decentraland-scenes/old-lady-quest-part1: An example scene that handles quests</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>An example scene that handles quests</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/old-lady-quest-part1</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>2</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>3</strong>

<h2>Files</h2>

<button>View code</button>

<h1>old-lady-quest-part1</h1>

<p>An example scene that handles quests.</p>

<p>This repo contains part 1 of 2. The same quest is continued on this repo:</p>

<p>Note: This other repo is also private, you may need to request access to it.</p>

<p>This quest includes some single tasks, and a numerical task. The numerical task may be reset to 0 if the player doesn't complete it in full in time and then attempts again.</p>

<p>Part 1 has a very simple setup, part 2 is a more elaborate scene where things are more abstracted.</p>

<p>Check the file</p>

<code>quest-example.json</code>

<p>to see what was uploaded to the quests server to match this scene.</p>

<h2>Quest library</h2>

<h3>Install</h3>

<p>To install the library in a Decentraland scene, run:</p>

<code>npm i dcl-ecs-quests -B</code>

<p>Then open your sceneâs tsconfig.json file, and add the following to the paths object:</p>

<pre>: [</pre>

<pre>],</pre>

<p>Finally, run dcl start or dcl build on your project for all the internal files of the library to get properly built.</p>

<p>Then on your sceneâs Typescript files import the library by writing the following:</p>

<h3>Initiate a quest tracker</h3>

<p>All interactions with the quest server and the quest UI are handled by a quest tracker object.</p>

<p>To initiate a quest tracker, create a new RemoteQuestTracker object, passing at least a quest ID, referencing a quest thatâs already created in the quests server.</p>

<p>Note: Since the constructor of RemoteQuestTracker is asynchronous, you should run it inside an async function or an async block. All examples from now on will be assumed to run asynchronously.</p>

<h2>About</h2>

<p>An example scene that handles quests</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>6</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/Gamer-Plaza

# URL: https://github.com/decentraland-scenes/Gamer-Plaza

<title>GitHub - decentraland-scenes/Gamer-Plaza: One of Decentraland's public plazas, dedicated to gaming</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>One of Decentraland's public plazas, dedicated to gaming</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/Gamer-Plaza</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>3</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>5</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Gamer-Plaza</h1>

<p>One of Decentraland's public plazas, dedicated to gaming</p>

<h2>About</h2>

<p>One of Decentraland's public plazas, dedicated to gaming</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>6</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/DCL-trams

# URL: https://github.com/decentraland-scenes/DCL-trams

<title>GitHub - decentraland-scenes/DCL-trams: Trams public transport system</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Trams public transport system</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/DCL-trams</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>14</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>17</strong>

<h2>Files</h2>

<button>View code</button>

<h1>DCL Trams</h1>

<em>demo of a long-distance public transport tram.</em>

<h2>Description</h2>

<p>This scene shows a tram that players can board to cover long distances.</p>

<p>Trams come by every 3 minutes. The tram is synced to a world time API, so all players see the tram in sync with everyone else.</p>

<h2>Instructions</h2>

<p>Wait for the trams in one of the stations, and board the train.</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<code>$ npm i -g decentraland</code>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$  dcl start</code>

<h2>About</h2>

<p>Trams public transport system</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>1</strong>

<h3>Watchers</h3>

<strong>3</strong>

<h3>Forks</h3>

<strong>1</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/bird-field

# URL: https://github.com/decentraland-scenes/bird-field

<title>GitHub - decentraland-scenes/bird-field: A scene where birds fly up in the air based on their relative distance to the player.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A scene where birds fly up in the air based on their relative distance to the player.</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/bird-field</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>8</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Bird Field</h1>

<em>demo of the bird scaring scene running in preview.</em>

<h2>Description</h2>

<p>Bird field is a scene where a large number of animated objects react to the player's proximity. In this scene the birds hanging around the scene fly up based on how close the player gets to them. The proximity effect can easily be extended to other use cases /art installations.</p>

<h2>Instructions</h2>

<strong>In the scene</strong>

<p>Run around and watch as the birds react to your proximity by flying up into the air. Use your mouse to look around and</p>

<kbd>W</kbd>

<kbd>A</kbd>

<kbd>S</kbd>

<kbd>D</kbd>

<p>keys on your keyboard to move forward, left, backward and right respectively. To jump, press the</p>

<kbd>Space</kbd>

<p>key.</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<code>$ npm i -g decentraland</code>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$  dcl start</code>

<h2>About</h2>

<p>A scene where birds fly up in the air based on their relative distance to the player.</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>1</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/uv-projector

# URL: https://github.com/decentraland-scenes/uv-projector

<title>GitHub - decentraland-scenes/uv-projector: Tool that helps you project a large video stretching over many smaller screens</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Tool that helps you project a large video stretching over many smaller screens</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/uv-projector</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>9</strong>

<h2>Files</h2>

<button>View code</button>

<h1>UV Projector</h1>

<em>demo of the UV Projector scene running in preview.</em>

<h2>Description</h2>

<p>UV Projector is a tool that helps you project a large video stretching out onto many smaller screens. You can even reproject the UV cooridantes on every frame, so the video will always face towards the player.</p>

<h2>Instructions</h2>

<strong>In the scene</strong>

<p>You can run around and watch as the video on the colums follow you (while the columns themselves don't move or turn). Use your mouse to look around and</p>

<kbd>W</kbd>

<kbd>A</kbd>

<kbd>S</kbd>

<kbd>D</kbd>

<p>keys on your keyboard to move forward, left, backward and right respectively. To jump, press the</p>

<kbd>Space</kbd>

<p>key.</p>

<strong>In the code</strong>

<p>You need to create a projector plane ( Projector ) that is invisible to the player, with a chosen size and orientation. This will project the video onto other screens ( Screen ).</p>

<p>You need to also create a ScreenGroup for each Projector and assign the Screens you create to that group.</p>

<p>You can project all the Screens' UVs once (or on every frame inside a System) using:</p>

<code>myScreenGroup.updateScreens( Camera.instance.position )</code>

<p>Do not parent the screens or the projector under any other Entity. Both need to be in world-space. You can however parent Entities to the screens to add frames, backgrounds etc.</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<code>$ npm i -g decentraland</code>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$  dcl start</code>

<h2>Acknowledgements</h2>

<em>cc_video.mp4</em>

<li>is a Creative Commons video from</li>

<h2>About</h2>

<p>Tool that helps you project a large video stretching over many smaller screens</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>3</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>1</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/white-rabbit

# URL: https://github.com/decentraland-scenes/white-rabbit

<title>GitHub - decentraland-scenes/white-rabbit: Decentraland's first 24/7 night club</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Decentraland's first 24/7 night club</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/white-rabbit</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>3</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>58</strong>

<h2>Files</h2>

<button>View code</button>

<h2>White Rabbit Night Club</h2>

<p>The White Rabbit is a 24/7 night club, at -65,85.</p>

<p>This scene shows you:</p>

<li>How to stream audio and video</li>

<li>How to animate lights, smoke and other effects</li>

<li>How to sync effects for all players with messagebus messages</li>

<li>How to allowlist players as admins with special permissions in a scene</li>

<li>How to teleport a player within a scene</li>

<li>How to create a cool glass-breaking effect</li>

<li>How to make an arcade machine</li>

<p>Special admin players have the ability to control all of the lighting effects via a special UI panel only they can access. A series of timed effects can also be scheduled to be triggered in sequence, based on a timestamp on an external server.</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$:  dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<strong>Scene Usage</strong>

<p>Take the leaf as a raft up to the mushroom, where you can teleport up into the club.</p>

<p>If you're listed as an admin in the scene, you can open the effects UI by pressing E to control all of the lighting effects. These effects are otherwise played in a fixed sequence, checking the time in a universal time API, and looping the same sequence every 10 minutes.</p>

<p>Admin players can also open the Bouncer API by pressing F. They can write down the name of another player and teleport them to the 0,0 of the scene if they're being problematic. See the</p>

<p>example scene for a simpler version of that.</p>

<p>Clicking on any of the windows breaks them.</p>

<p>The arcade machines can also be played, using E and F to move the pad, and click to shoot the ball.</p>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<p>If something doesnât work, please</p>

<p>.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>Decentraland's first 24/7 night club</p>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>3</strong>

<h3>Watchers</h3>

<strong>3</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/nft-scanner-basic

# URL: https://github.com/decentraland-scenes/nft-scanner-basic

<title>GitHub - decentraland-scenes/nft-scanner-basic: Checks whether the player owns a token from a particular smart contract before granting them permission to enter the club.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Checks whether the player owns a token from a particular smart contract before granting them permission to enter the club.</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/nft-scanner-basic</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>13</strong>

<h2>Files</h2>

<button>View code</button>

<h1>NFT Scanner (Basic)</h1>

<em>demo of nft-scanner-basic scene running in preview.</em>

<h2>Description</h2>

<p>Checks whether the player owns a token from a particular smart contract before granting them permission to enter the club. In this example, we're checking whether the player owns a pair of RTFKT X Atari Sneakers, which is any token minted from this</p>

<p>.</p>

<p>Note: There's another version of this scene</p>

<p>that performs more advanced token checks.</p>

<h2>Instructions</h2>

<p>Walk up to the door and press the</p>

<kbd>E</kbd>

<p>key to see if you can access the club. The door will open and the audio quality increases if you own at least one pair of RTFKT X Atari Sneakers. Please feel free to modify the</p>

<code>contractAddress</code>

<p>within the</p>

<code>game.ts</code>

<p>file to test other tokens.</p>

<p>Use your mouse to look around and</p>

<kbd>W</kbd>

<kbd>A</kbd>

<kbd>S</kbd>

<kbd>D</kbd>

<kbd>Space</kbd>

<p>keys on your keyboard to move forward, left, backward, right and jump respectively. You can also press the</p>

<kbd>P</kbd>

<p>key to adjust the graphics settings.</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<code>$ npm i -g decentraland</code>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$  dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<p>Add the following to the end of the URL in the browser window:</p>

<code>&ENABLE_WEB3</code>

<p>For example, if the URL is</p>

<code>http://192.168.1.132:8000?position=0%2C0&SCENE_DEBUG_PANEL</code>

<p>then change it to</p>

<code>http://192.168.1.132:8000?position=0%2C0&SCENE_DEBUG_PANEL&ENABLE_WEB3</code>

<p>Note: Make sure you have a browser wallet installed like Metamask or Fortmatic as you'll need to be logged onto those with the network set to the</p>

<code>Ethereum Mainnet</code>

<p>in order for the scene to perform checks on your wallet address.</p>

<h2>Acknowledgements</h2>

<em>accessDenied.mp3</em>

<li>modified from</li>

<em>jazz.mp3</em>

<li>modified from</li>

<em>jazzMuffled.mp3</em>

<li>modified from</li>

<h2>About</h2>

<p>Checks whether the player owns a token from a particular smart contract before granting them permission to enter the club.</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>9</strong>

<h3>Watchers</h3>

<strong>3</strong>

<h3>Forks</h3>

<strong>7</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/nft-scanner

# URL: https://github.com/decentraland-scenes/nft-scanner

<title>GitHub - decentraland-scenes/nft-scanner: Checks whether the player owns a token from a particular smart contract before granting them permission to enter the club.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Checks whether the player owns a token from a particular smart contract before granting them permission to enter the club.</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/nft-scanner</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>10</strong>

<h2>Files</h2>

<button>View code</button>

<h1>NFT Scanner</h1>

<em>demo of nft-scanner scene running in preview.</em>

<h2>Description</h2>

<p>Checks whether the player owns a token from a particular smart contract before granting them permission to enter the club. In this example, we're checking whether the player owns a key from</p>

<p>project.</p>

<p>Note: There's a basic version of this scene</p>

<p>that performs simpler token checks.</p>

<h2>Instructions</h2>

<p>Walk up to the door and press the</p>

<kbd>E</kbd>

<p>key to see if you can access the club. The door will open and the audio quality increases if you own the Genesis Key, which is the first key minted from this contract</p>

<p>. Please feel free to modify the</p>

<code>contractAddress</code>

<p>along with the</p>

<code>tokenID</code>

<p>within the</p>

<code>game.ts</code>

<p>file to test other scenarios - you'll also need to update the</p>

<code>abi.ts</code>

<p>file to with the corresponding</p>

<em>Contract ABI</em>

<p>, which can be found using at</p>

<p>with the</p>

<em>contract address</em>

<p>appended at the end of the URL.</p>

<p>Use your mouse to look around and</p>

<kbd>W</kbd>

<kbd>A</kbd>

<kbd>S</kbd>

<kbd>D</kbd>

<kbd>Space</kbd>

<p>keys on your keyboard to move forward, left, backward, right and jump respectively. You can also press the</p>

<kbd>P</kbd>

<p>key to adjust the graphics settings.</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<code>$ npm i -g decentraland</code>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$  dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<p>Add the following to the end of the URL in the browser window:</p>

<code>&ENABLE_WEB3</code>

<p>For example, if the URL is</p>

<code>http://192.168.1.132:8000?position=0%2C0&SCENE_DEBUG_PANEL</code>

<p>then change it to</p>

<code>http://192.168.1.132:8000?position=0%2C0&SCENE_DEBUG_PANEL&ENABLE_WEB3</code>

<p>Note: Make sure you have a browser wallet installed like Metamask or Fortmatic as you'll need to be logged onto those with the network set to the</p>

<code>Ethereum Mainnet</code>

<p>in order for the scene to perform checks on your wallet address.</p>

<h2>Acknowledgements</h2>

<em>accessDenied.mp3</em>

<li>modified from</li>

<em>jazz.mp3</em>

<li>modified from</li>

<em>jazzMuffled.mp3</em>

<li>modified from</li>

<h2>About</h2>

<p>Checks whether the player owns a token from a particular smart contract before granting them permission to enter the club.</p>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>4</strong>

<h3>Watchers</h3>

<strong>3</strong>

<h3>Forks</h3>

<strong>2</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/orgs/decentraland-scenes/repositories?page=4&type=all

# URL: https://github.com/orgs/decentraland-scenes/repositories?page=4&type=all

<title>decentraland-scenes Â· GitHub</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<h2>Repositories</h2>

<p>A beer dispenser that uses P2P messaging so that you can pour beer for yourself and friends.</p>

<p>A shop to sell wearables in-world connecting to the Decentraland Marketplace</p>

<p>A simple scene that uses the `decentraland-crypto-utils` library to make a MANA payment when a player activates a lever</p>

<p>A particle system to create smoke</p>

<p>A basic scene that uses a WebSockets server to sync changes between players.</p>

<p>A multiplayer scene that uses a websockets server to sync the position of a frisbee as it's thrown between players</p>

<p>Combine Websockets and Physics to share data about bouncing balls between players. All of the logic is carried out client side. The server just passes on data.</p>

<p>Display the frames of a 2D animation from a spritesheet</p>

<p>A voxel art creator.</p>

<p>Coin pickup mechanic where the player moves over the coins to collect them.</p>

<p>A platform that moves when the player stands on one of the switches.</p>

<p>A flying rocket board that you can take anywhere</p>

<p>A shark moves along a curve, smoothly rotating and varying its speed depending on steepness</p>

<p>Monitor currnet realm + island, and how many other players are connected around you</p>

<p>Test raycasts across portable expereinces and scenes</p>

<p>A smart wearable that works as a radio you can carry with you to hear music anywhere in Decentraland</p>

<p>A Portal-ble experience to let you teleport anywhere around Decentraland instantly</p>

<p>A simple scarvenger hunt where you need to look for some landmarks in limited time</p>

<p>A simple interactive scene with a two-sided door that can be opened by clicking.</p>

<p>A scene that uses a server and a REST API to sync a scene state amongst multiple users. You can paint pixels in a mural that other users can see. The colors of each pixel are stored in a remote server.</p>

<p>Gun game mechanic along with bullet marks that appear at whatever angle the bullet strikes the target.</p>

<p>Basic gun game mechanic along with bullet marks and pop up scores.</p>

<p>This simple scene shows how to add animations to a `GLTFComponent` and handle click events.</p>

<p>A simple platformer that demonstrates rotating various platforms using code.</p>

<p>A rocket board that you can stand on and pilot. The board uses the cannon.js physics engine so you experience the momentum and inertia effects.</p>

<p>Based on the classic Sokoban puzzle game where you push statues onto marked spots.</p>

<p>Using simple planes to create a force field effect that blocks the player from reaching the access card.</p>

<p>Using the new spawn feature to recreate a simple Portal clone.</p>

<p>A piano floor where you walk on the keys to play.</p>

<em>4</em>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/beer-dispenser

# URL: https://github.com/decentraland-scenes/beer-dispenser

<title>GitHub - decentraland-scenes/beer-dispenser: A beer dispenser that uses P2P messaging so that you can pour beer for yourself and friends.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A beer dispenser that uses P2P messaging so that you can pour beer for yourself and friends.</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/beer-dispenser</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>35</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Beer Dispenser</h1>

<em>demo of beer-dispenser scene running in preview.</em>

<h2>Description</h2>

<p>A beer dispenser that uses P2P messaging so that you can pour beer for yourself and friends. To view the scene, please visit</p>

<p>.</p>

<h2>Instructions</h2>

<p>Pick up and put down the beer glass using the</p>

<kbd>E</kbd>

<p>key - you will only be able to place the beer glass on a flat surface that's pointing upwards. To fill a glass, place it at one of the bases on the dispenser and then press on the corresponding tap using the the</p>

<kbd>E</kbd>

<p>key again; to drink the beer just press the</p>

<kbd>F</kbd>

<p>key. Use your mouse to look around and</p>

<kbd>W</kbd>

<kbd>A</kbd>

<kbd>S</kbd>

<kbd>D</kbd>

<p>keys on your keyboard to move forward, left, backward and right respectively. Finally, pressing the</p>

<kbd>Space</kbd>

<p>key will make your avatar jump.</p>

<p>If you launch a scene preview and open it in two (or more) browser windows, each window will be interpreted as a separate player and a mock communications server will keep these players in sync.</p>

<em>Note: If you open separate tabs in the same window, the interaction wonât work properly, as only one tab will be treated as active by the browser at a time.</em>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<code>$ npm i -g decentraland</code>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$  dcl start</code>

<h2>Acknowledgements</h2>

<em>beerPump.mp3</em>

<li>modified from</li>

<em>error.mp3</em>

<li>modified from</li>

<em>pickUp.mp3</em>

<li>modified from</li>

<em>putDown.mp3</em>

<li>modified from</li>

<em>swallow.mp3</em>

<li>modified from</li>

<h2>About</h2>

<p>A beer dispenser that uses P2P messaging so that you can pour beer for yourself and friends.</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>1</strong>

<h3>Watchers</h3>

<strong>3</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/Wearables-In-world-Market

# URL: https://github.com/decentraland-scenes/Wearables-In-world-Market

<title>GitHub - decentraland-scenes/Wearables-In-world-Market: A shop to sell wearables in-world connecting to the Decentraland Marketplace</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A shop to sell wearables in-world connecting to the Decentraland Marketplace</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/Wearables-In-world-Market</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>11</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Wearables Marketplace</h1>

<p>A simple scene that uses the</p>

<code>decentraland-crypto-utils</code>

<p>library and the Marketplace API mount an in-world wearables shop for wearables that are on Layer 1 Ethereum, leveraging from items published in the Decentraland Marketplace.</p>

<p>Note: This example code only works for wearables on L1 of Ethereum. It doesn't work for wearables on L2. For that, refer to the</p>

<p>example scene.</p>

<p>This scene shows you:</p>

<li>How to use the crypto utils library</li>

<li>How to query the Marketplace API (based on The Graph)</li>

<li>How to check if a player has allowed a dapp to handle MANA on their behalf and if the player has balance</li>

<li>How to run a buy transaction from the scene, to trade MANA for a wearable</li>

<li>How to build a UI to display all the data for a wearable publication</li>

<li>How to open a custom UI to display a confirmation prompt</li>

<li>How to make a UI component clickable and use it to trigger functions</li>

<p>The crypto Utils function makes it a lot simpler to perform blockchain functions. Sending MANA from one account to another just takes one line of code using this library.</p>

<p>Feel free to reuse the models and code from this scene!</p>

<p>Note: The crtpyo-utils library is currently a work in progress and has issues that need to be resolved. It's not yet published on npm, but you can copy what's been done in the</p>

<code>package.json</code>

<p>file of this repository.</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$:  dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<p>Paste the following to the end of the URL in the browser window:</p>

<code>&ENABLE_WEB3</code>

<p>For example, if the URL is</p>

<p>, make it</p>

<p>Note: When running a preview of a scene that uses one of the ethereum libraries, you must have Metamask or Dapper open and you must add this string.</p>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<p>If something doesnât work, please</p>

<p>.</p>

<h2>Scene usage</h2>

<p>Press E on any wearable item. The scene will query the Marketplace API and return data about the cheapest sale for that item. You can then purchase it by clicking a button on that same UI.</p>

<p>If the player hasn't already allowed the Decentraland Marketplace to operate MANA on their behalf, a notification will appear with a button that lets players run that transaction from the scene. They must wait for that transaction to complete before they can make a purchase.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>A shop to sell wearables in-world connecting to the Decentraland Marketplace</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>1</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>3</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/Paid-Lever

# URL: https://github.com/decentraland-scenes/Paid-Lever

<title>GitHub - decentraland-scenes/Paid-Lever: A simple scene that uses the `decentraland-crypto-utils` library to make a MANA payment when a player activates a lever</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A simple scene that uses the `decentraland-crypto-utils` library to make a MANA payment when a player activates a lever</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/Paid-Lever</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>13</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Paid Lever</h1>

<p>A simple scene that uses the</p>

<code>decentraland-crypto-utils</code>

<p>library to make a MANA payment and trigger an action after the payment is done.</p>

<p>This scene shows you:</p>

<li>How to use the crypto utils library</li>

<li>How to send a payment in MANA to a wallet</li>

<li>How to dealy an action itll a transaction for a payment in MANA is sent</li>

<li>How to handle async functions</li>

<li>How to define the elements of a scene as game objects, with state and functions</li>

<li>How to open a custom UI to display a confirmation prompt</li>

<li>How to make a UI component clickable and use it to trigger functions</li>

<li>How to use the utils library to move and rotate an entity smoothly</li>

<p>The crypto Utils function makes it a lot simpler to perform blockchain functions. Sending MANA from one account to another just takes one line of code using this library.</p>

<p>Feel free to reuse the models and code from this scene!</p>

<p>Note: The crtpyo-utils library is currently a work in progress and has issues that need to be resolved. It's not yet published on npm, but you can copy what's been done in the</p>

<code>package.json</code>

<p>file of this repository.</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$:  dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<p>Paste the following to the end of the URL in the browser window:</p>

<code>&ENABLE_WEB3</code>

<p>For example, if the URL is</p>

<p>, make it</p>

<p>Note: When running a preview of a scene that uses one of the ethereum libraries, you must have Metamask or Dapper open and you must add this string.</p>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<p>If something doesnât work, please</p>

<p>.</p>

<h2>Scene usage</h2>

<p>When clicking on the lever, a UI screen will ask you to confirm the action. If confirmed, Metamask or your wallet of choice will prompt you to confirm the transaction. Once confirmed, the action that's linked to the lever is performed. The bridge shifts from one platform to the other, according to the position of the lever.</p>

<p>You can test this scene in Ropsten testnet to aviod paying real MANA and Ether for the gas fee. To do so, simply set your Metamask network from Mainnet to Ropsten and reload the scene.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>A simple scene that uses the `decentraland-crypto-utils` library to make a MANA payment when a player activates a lever</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>1</strong>

<h3>Watchers</h3>

<strong>3</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/Smoke

# URL: https://github.com/decentraland-scenes/Smoke

<title>GitHub - decentraland-scenes/Smoke: A particle system to create smoke</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A particle system to create smoke</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/Smoke</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>17</strong>

<h2>Files</h2>

<button>View code</button>

<h2>Smoke scene</h2>

<p>This simple scene shows how to handle a particle system to create smoke.</p>

<p>This scene shows you:</p>

<li>How to use materials with transparency on a plane</li>

<li>How to use billboards to keep a 2D plane always facing the player</li>

<li>How to use a system to create a particle effect, spawnin and reusing multiple entities, changing their position and scale gradually</li>

<li>Use an Entity pool to keep reusing the same entities instead of constantly creating new ones</li>

<p>There are two modules being used:</p>

<code>SmokeSource</code>

<li>defines a place from where smoke puffs spawn and an interval. To instance smoke puffs, it either uses idle entities from an object pool or creates new ones if they don't exist yet.</li>

<code>Smoke</code>

<li>updates the position of the existing smoke puffs so that they rise and slowly move in a direction set by their</li>

<code>SmokeVelocity</code>

<li>component. When a smoke puff is too far from the source, it's removed from the scene.</li>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$:  dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<strong>Scene Usage</strong>

<p>Note how smoke starts rising from the fireplace. Puffs of smoke have random sizes and move in random directions, but they gradually grow and straighten upwards as time goes by.</p>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<p>If something doesnât work, please</p>

<p>.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>A particle system to create smoke</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>1</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>1</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/ws-example

# URL: https://github.com/decentraland-scenes/ws-example

<title>GitHub - decentraland-scenes/ws-example: A basic scene that uses a WebSockets server to sync changes between players.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A basic scene that uses a WebSockets server to sync changes between players.</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/ws-example</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>2</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>8</strong>

<h2>Files</h2>

<button>View code</button>

<h1>ws-example</h1>

<p>A basic scene that uses a WebSockets server to sync changes between players. When a player clicks on a cube, all players see it turn green. The scene checks the player's realm and only syncs between players that are in the same realm, to keep things consistent between players that can see each other.</p>

<p>The scene relies on a</p>

<p>that broadcasts all messages that are sent to it to all players.</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to the</p>

<code>scene</code>

<p>directory, then run:</p>

<code>$:  dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<strong>Run the server</strong>

<p>By default, the scene relies on an already deployed server on that can be reached on</p>

<code>wss://64-225-45-232.nip.io/</code>

<p>To instead run the server locally, on a separate command line window, navigate to the</p>

<code>server</code>

<p>directory and run the following command to install all the dependencies:</p>

<code>npm i</code>

<p>Once the dependencies are installed, run the following command to start the server:</p>

<code>npm run start</code>

<p>The server will then be listening on</p>

<code>localhost:8080</code>

<p>, you can redirect the scene to point to this address when connecting to the WS server.</p>

<code>socket = new WebSocket(

'wss://localhost:8080/broadcast/' + realm.displayName

)</code>

<strong>Scene Usage</strong>

<p>Click on the cubes to see them change color. If you open multiple tabs to the same preview, you should see that all tabs respond to the changes that other players do too. These messages are travelling via WebSockets.</p>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<p>If something doesnât work, please</p>

<p>.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>A basic scene that uses a WebSockets server to sync changes between players.</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>1</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>5</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/ws-broadcast

# URL: https://github.com/decentraland-scenes/ws-broadcast

<title>GitHub - decentraland-scenes/ws-broadcast: Simple broadcasting websocket server</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Simple broadcasting websocket server</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/ws-broadcast</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>2</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>7</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Simple broadcasting websocket server</h1>

<p>This project serves as an example on how to build a server that can be used by a Decentraland scene to handle secure Websockets communication between players.</p>

<p>It opens a websocket server on port 8080 which can then be proxied via nginx to add TLS certificate.</p>

<h2>Behavior</h2>

<p>This server shares all messages sent by all players to all other players in the same room, without filtering or applying any logic of its own.</p>

<p>When a player establishes a connection with this server, it groups the player into a room depending on the last parameter of the URL.</p>

<p>/broadcast/</p>

<p>The following scene is an example of a scene that uses a server like this:</p>

<p>This scene adds the player's realm at the end of the URL when establishing the connection, so that all players in a same realm in the scene are in sync with each other.</p>

<h2>Running locally</h2>

<p>You can run this server locally under localhost.</p>

<p>To do this, simply cd to the server directory and run:</p>

<code>npm run start</code>

<p>You can then run a Decentraland scene on a separate command line window and interact with this server. If you open the scene preview on multiple tabs, the preview on each of the tabs will communicate with each other.</p>

<p>To reach the server when running locally from your scene's code, do:</p>

<code>const socket = new WebSocket(`ws://localhost:8080`)</code>

<h2>Installation via Docker</h2>

<p>For easier installation on the server where you want to ultimately run this, this project is packaged into a Docker container. The server then just needs to have TLS certificates and nginx installed.</p>

<p>To install it as a docker container, run the following from the server:</p>

<code>docker docker run -d -p 13370:13370 hprivakos/ws-broadcast</code>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<p>If something doesnât work, please</p>

<p>.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>Simple broadcasting websocket server</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>2</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>3</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/websocket-frisbee

# URL: https://github.com/decentraland-scenes/websocket-frisbee

<title>GitHub - decentraland-scenes/websocket-frisbee: A multiplayer scene that uses a websockets server to sync the position of a frisbee as it's thrown between players</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A multiplayer scene that uses a websockets server to sync the position of a frisbee as it's thrown between players</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/websocket-frisbee</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>33</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Websocket Frisbee Throwing</h1>

<p>A multiplayer scene that uses a websockets server to sync the position of a frisbee as it's thrown between players</p>

<em>demo of frisbee throwing running in preview.</em>

<h2>Description</h2>

<p>This scene uses WebSockets to sync what each player sees while throwing a futuristic frisbee around, that bounces using the</p>

<p>physics engine.</p>

<p>Since physics is calculated client side, sending messages for each change of position would be too much. Here, we're just sharing information about each throwing of the frisbee, and each client then calculates the effects of that locally.</p>

<p>The last player to throw the frisbee is assigned as the source of truth, and syncs the position of the frisbee in the scene to others every few seconds.</p>

<p>This scene uses the default echo websockets server, which simply forwards all messages received to all other players in the room. A more robustly developed scene might implement server-side logic to dissambiguate confiting data better, or even run a parallel phyisics simulation and take that as the final source of truth. The benefit of this implementation is that it doesn't require changing the server-side code at all, but it has its limitations.</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to the</p>

<code>scene</code>

<p>directory, then run:</p>

<code>$:  dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<strong>Run the server</strong>

<p>By default, the scene relies on an already deployed server on that can be reached on</p>

<code>wss://64-225-45-232.nip.io/</code>

<p>To instead run the server locally, on a separate command line window, navigate to the</p>

<code>server</code>

<p>directory and run the following command to install all the dependencies:</p>

<code>npm i</code>

<p>Once the dependencies are installed, run the following command to start the server:</p>

<code>npm run start</code>

<p>The server will then be listening on</p>

<code>localhost:8080</code>

<p>, you can redirect the scene to point to this address when connecting to the WS server.</p>

<code>socket = new WebSocket(

'wss://localhost:8080/broadcast/' + realm.displayName

)</code>

<strong>Scene Usage</strong>

<p>Use the</p>

<code>E</code>

<p>key to pick upt the frisbee, then click to throw it. Other players can press</p>

<code>E</code>

<p>to catch it when it flies by near them. The UI counts the times you throw and catch it without falling to the ground. If you open multiple tabs to the same preview, you should see that all tabs respond to the changes that other players do too. These messages are travelling via WebSockets.</p>

<h2>About</h2>

<p>A multiplayer scene that uses a websockets server to sync the position of a frisbee as it's thrown between players</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>2</strong>

<h3>Watchers</h3>

<strong>3</strong>

<h3>Forks</h3>

<strong>1</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/websocket-basket

# URL: https://github.com/decentraland-scenes/websocket-basket

<title>GitHub - decentraland-scenes/websocket-basket</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/websocket-basket</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>9</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Websocket Basketball</h1>

<p>A multiplayer scene that uses a websockets server to sync the position of a basketball as it's thrown between players</p>

<em>demo of basketball running in preview.</em>

<h2>Description</h2>

<p>This scene uses WebSockets to sync what each player sees while throwing a futuristic basketball around, that bounces using the</p>

<p>physics engine.</p>

<p>Since physics is calculated client side, sending messages for each change of position would be too much. Here, we're just sharing information about each throwing of the ball, and each client then calculates the effects of that locally.</p>

<p>The last player to throw the ball is assigned as the source of truth, and syncs the position of the ball in the scene to others every few seconds.</p>

<p>This scene uses the default echo websockets server, which simply forwards all messages received to all other players in the room. A more robustly developed scene might implement server-side logic to dissambiguate confiting data better, or even run a parallel phyisics simulation and take that as the final source of truth. The benefit of this implementation is that it doesn't require changing the server-side code at all, but it has its limitations.</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to the</p>

<code>scene</code>

<p>directory, then run:</p>

<code>$:  dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<strong>Run the server</strong>

<p>By default, the scene relies on an already deployed server on that can be reached on</p>

<code>wss://64-225-45-232.nip.io/</code>

<p>To instead run the server locally, on a separate command line window, navigate to the</p>

<code>server</code>

<p>directory and run the following command to install all the dependencies:</p>

<code>npm i</code>

<p>Once the dependencies are installed, run the following command to start the server:</p>

<code>npm run start</code>

<p>The server will then be listening on</p>

<code>localhost:8080</code>

<p>, you can redirect the scene to point to this address when connecting to the WS server.</p>

<code>socket = new WebSocket(

'wss://localhost:8080/broadcast/' + realm.displayName

)</code>

<strong>Scene Usage</strong>

<p>Use the</p>

<code>E</code>

<p>key to pick upt the ball, then click to throw it. As you keep the mouse button pressed, a bar fills up showing the strength of your shot. You can shoot hoops at the rings, each shot is worth 2 or 3 points depending on your distance away from the hoop when throwing.</p>

<p>Other players can press</p>

<code>E</code>

<p>to catch it when it bounces by near them. The UI counts the times you throw and catch it without falling to the ground.</p>

<p>If you open multiple tabs to the same preview, you should see that all tabs respond to the changes that other players do too. These messages are travelling via WebSockets.</p>

<h2>About</h2>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>1</strong>

<h3>Watchers</h3>

<strong>3</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/websocket-bouncing-balls

# URL: https://github.com/decentraland-scenes/websocket-bouncing-balls

<title>GitHub - decentraland-scenes/websocket-bouncing-balls: Combine Websockets and Physics to share data about bouncing balls between players. All of the logic is carried out client side. The server just passes on data.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Combine Websockets and Physics to share data about bouncing balls between players. All of the logic is carried out client side. The server just passes on data.</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/websocket-bouncing-balls</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>7</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Websockets and physics scene</h1>

<em>demo of cannon-example-scene running in preview.</em>

<h2>Description</h2>

<p>This scene uses WebSockets to sync what each player sees while simulating a bunch of balls bouncing using the</p>

<p>physics engine.</p>

<p>Since physics is calculated client side, sending messages for each change of position would be too much. Here, we're just sharing information about any exherted forces on the balls, and each client then calculates the effects of that locally.</p>

<p>Small delays might lead to balls being in slightly different positions, and could deal to discrepancies, especially when balls bounce off each other, so it's important to deal with that in some way.</p>

<p>In this case, the last player to have kicked a ball is assigned as the source of truth, and syncs the position of all balls in the scene to others every couple of seconds.</p>

<p>This scene uses the default echo websockets server, which simply forwards all messages received to all other players in the room. A more robustly developed scene might implement server-side logic to dissambiguate confiting data better, or even run a parallel phyisics simulation and take that as the final source of truth. The benefit of this implementation is that it doesn't require changing the server-side code at all, but it has its limitations.</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to the</p>

<code>scene</code>

<p>directory, then run:</p>

<code>$:  dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<strong>Run the server</strong>

<p>By default, the scene relies on an already deployed server on that can be reached on</p>

<code>wss://64-225-45-232.nip.io/</code>

<p>To instead run the server locally, on a separate command line window, navigate to the</p>

<code>server</code>

<p>directory and run the following command to install all the dependencies:</p>

<code>npm i</code>

<p>Once the dependencies are installed, run the following command to start the server:</p>

<code>npm run start</code>

<p>The server will then be listening on</p>

<code>localhost:8080</code>

<p>, you can redirect the scene to point to this address when connecting to the WS server.</p>

<code>socket = new WebSocket(

'wss://localhost:8080/broadcast/' + realm.displayName

)</code>

<strong>Scene Usage</strong>

<p>Use the Left Mouse Button or 'E' or 'F' keys to interact with the balls.  If you open multiple tabs to the same preview, you should see that all tabs respond to the changes that other players do too. These messages are travelling via WebSockets.</p>

<h2>About</h2>

<p>Combine Websockets and Physics to share data about bouncing balls between players. All of the logic is carried out client side. The server just passes on data.</p>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>1</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/uv-map

# URL: https://github.com/decentraland-scenes/uv-map

<title>GitHub - decentraland-scenes/uv-map: Display the frames of a 2D animation from a spritesheet</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Display the frames of a 2D animation from a spritesheet</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/uv-map</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>6</strong>

<h2>Files</h2>

<button>View code</button>

<h2>UV Map</h2>

<p>A simple scene that shows a spritesheet animation of a robot talking.</p>

<p>This scene shows you:</p>

<li>How to map a portion of a texture onto a plane</li>

<li>How to change the mapped portion of a texture frame by frame to produce a 2D frame by frame animation</li>

<p>A PlaneShape uses a spritesheet as texture, selecting only a region of the image. The selected region is changed on every frame, to simulate movement.</p>

<p>This is the image used as a spritesheet:</p>

<p>Note: Event though this is not how we animated the robots in Genesis Plaza in the end, it's still a valuable example for other spritesheet implementations.</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$:  dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.

Learn more about how to build your own scenes in our</p>

<p>site.</p>

<p>If something doesnât work, please</p>

<p>.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>Display the frames of a 2D animation from a spritesheet</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>4</strong>

<h3>Watchers</h3>

<strong>3</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/coin-pickup

# URL: https://github.com/decentraland-scenes/coin-pickup

<title>GitHub - decentraland-scenes/coin-pickup: Coin pickup mechanic where the player moves over the coins to collect them.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Coin pickup mechanic where the player moves over the coins to collect them.</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/coin-pickup</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>18</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Coin Pickup</h1>

<em>demo of coin-pickup scene running in preview.</em>

<h2>Description</h2>

<p>Coin pickup mechanic where the player moves over the coins to collect them. To view the scene, please visit</p>

<p>.</p>

<h2>Instructions</h2>

<p>Run over the coins to collect them. Use your mouse to look around and</p>

<kbd>W</kbd>

<kbd>A</kbd>

<kbd>S</kbd>

<kbd>D</kbd>

<p>keys on your keyboard to move forward, left, backward and right respectively. To jump, press the</p>

<kbd>Space</kbd>

<p>key.</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<code>$ npm i -g decentraland</code>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$  dcl start</code>

<h2>Acknowledgements</h2>

<em>coinPickup.mp3</em>

<li>modified from</li>

<h2>About</h2>

<p>Coin pickup mechanic where the player moves over the coins to collect them.</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>1</strong>

<h3>Forks</h3>

<strong>2</strong>

<strong>takJohn</strong>

<strong>nearnshaw</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/switchboard-platforms

# URL: https://github.com/decentraland-scenes/switchboard-platforms

<title>GitHub - decentraland-scenes/switchboard-platforms: A platform that moves when the player stands on one of the switches.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A platform that moves when the player stands on one of the switches.</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/switchboard-platforms</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>19</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Switchboard Platforms (Workshop)</h1>

<em>demo of switchboard-platforms scene running in preview.</em>

<h2>Description</h2>

<p>A platform that moves when the player stands on one of the switches. To view the scene, please visit</p>

<p>.</p>

<h2>Instructions</h2>

<p>Try and get the coin that's floating in the air. Use your mouse to look around and</p>

<kbd>W</kbd>

<kbd>A</kbd>

<kbd>S</kbd>

<kbd>D</kbd>

<p>keys on your keyboard to move forward, left, backward and right respectively. To jump, press the</p>

<kbd>Space</kbd>

<p>key.</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<code>$ npm i -g decentraland</code>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$  dcl start</code>

<h2>Acknowledgements</h2>

<em>coinPickup.mp3</em>

<li>modified from</li>

<em>switch.mp3</em>

<li>modified from</li>

<h2>About</h2>

<p>A platform that moves when the player stands on one of the switches.</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/Smart-wearable-rocket-board

# URL: https://github.com/decentraland-scenes/Smart-wearable-rocket-board

<title>GitHub - decentraland-scenes/Smart-wearable-rocket-board: A flying rocket board that you can take anywhere</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A flying rocket board that you can take anywhere</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/Smart-wearable-rocket-board</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>4</strong>

<h2>Files</h2>

<button>View code</button>

<h1>rocket-board</h1>

<p>A flying rocket board that you can take anywhere</p>

<h2>About</h2>

<p>A flying rocket board that you can take anywhere</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>3</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>1</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/Swimming-shark

# URL: https://github.com/decentraland-scenes/Swimming-shark

<title>GitHub - decentraland-scenes/Swimming-shark: A shark moves along a curve, smoothly rotating and varying its speed depending on steepness</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A shark moves along a curve, smoothly rotating and varying its speed depending on steepness</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/Swimming-shark</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>17</strong>

<h2>Files</h2>

<button>View code</button>

<h2>Swimming shark</h2>

<p>A scene that shows a shark moving around in circles along a curved circular path, using lerp over each segment of the path.</p>

<p>This scene shows you:</p>

<li>How to trace a curve made up of multiple segments</li>

<li>How to use a system to move an entity through the points of the curve</li>

<li>How to use a system to keep rotating the entity towards the next point in the path</li>

<li>How to create custom components to store custom data</li>

<p>The path is generated by specifying just four points through which the shark needs to pass, the rest of the points are calculated automatically.</p>

<p>The shark also rotates smoothly with a spherical lerp function. It's speed also depends on the steepness of the segment it's swimming up. The speed and intensity of the swimming animation also depends on this.</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$:  dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<strong>Scene Usage</strong>

<p>The shark moves following a fixed path. Its speed depends on the steepness of the section it's swimming through.</p>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<p>If something doesnât work, please</p>

<p>.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>A shark moves along a curve, smoothly rotating and varying its speed depending on steepness</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>1</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>1</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/Smart-wearable-realms-test

# URL: https://github.com/decentraland-scenes/Smart-wearable-realms-test

<title>GitHub - decentraland-scenes/Smart-wearable-realms-test: Monitor currnet realm + island, and how many other players are connected around you</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Monitor currnet realm + island, and how many other players are connected around you</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/Smart-wearable-realms-test</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>5</strong>

<h2>Files</h2>

<button>View code</button>

<h1>realms-test</h1>

<p>Monitor currnet realm + island, and how many other players are connected around you</p>

<h2>About</h2>

<p>Monitor currnet realm + island, and how many other players are connected around you</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>1</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/Smart-wearable-raycast-test

# URL: https://github.com/decentraland-scenes/Smart-wearable-raycast-test

<title>GitHub - decentraland-scenes/Smart-wearable-raycast-test: Test raycasts across portable expereinces and scenes</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Test raycasts across portable expereinces and scenes</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/Smart-wearable-raycast-test</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>4</strong>

<h2>Files</h2>

<button>View code</button>

<h1>raycast-test</h1>

<p>Test raycasts across portable expereinces and scenes</p>

<h2>About</h2>

<p>Test raycasts across portable expereinces and scenes</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>1</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/Smart-wearable-radio

# URL: https://github.com/decentraland-scenes/Smart-wearable-radio

<title>GitHub - decentraland-scenes/Smart-wearable-radio: A smart wearable that works as a radio you can carry with you to hear music anywhere in Decentraland</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A smart wearable that works as a radio you can carry with you to hear music anywhere in Decentraland</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/Smart-wearable-radio</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>4</strong>

<h2>Files</h2>

<button>View code</button>

<h1>radio</h1>

<h2>About</h2>

<p>A smart wearable that works as a radio you can carry with you to hear music anywhere in Decentraland</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>1</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/Portal-ble_experience

# URL: https://github.com/decentraland-scenes/Portal-ble_experience

<title>GitHub - decentraland-scenes/Portal-ble_experience: A Portal-ble experience to let you teleport anywhere around Decentraland instantly</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A Portal-ble experience to let you teleport anywhere around Decentraland instantly</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/Portal-ble_experience</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>4</strong>

<h2>Files</h2>

<button>View code</button>

<h1>portal</h1>

<p>A Portal-ble experience to let you teleport anywhere around Decentraland instantly</p>

<h2>About</h2>

<p>A Portal-ble experience to let you teleport anywhere around Decentraland instantly</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>2</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>1</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/Smart-wearable-Scarvenger-hunt

# URL: https://github.com/decentraland-scenes/Smart-wearable-Scarvenger-hunt

<title>GitHub - decentraland-scenes/Smart-wearable-Scarvenger-hunt: A simple scarvenger hunt where you need to look for some landmarks in limited time</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A simple scarvenger hunt where you need to look for some landmarks in limited time</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/Smart-wearable-Scarvenger-hunt</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>3</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Scarvenger-hunt</h1>

<p>A simple scarvenger hunt where you need to look for some landmarks in limited time</p>

<h2>About</h2>

<p>A simple scarvenger hunt where you need to look for some landmarks in limited time</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>1</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/shooting-range-advanced

# URL: https://github.com/decentraland-scenes/shooting-range-advanced

<title>GitHub - decentraland-scenes/shooting-range-advanced: Gun game mechanic along with bullet marks that appear at whatever angle the bullet strikes the target.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Gun game mechanic along with bullet marks that appear at whatever angle the bullet strikes the target.</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/shooting-range-advanced</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>11</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Shooting Range Advanced</h1>

<em>demo of shooting-range-advanced scene running in preview.</em>

<h2>Description</h2>

<p>Gun game mechanic along with bullet marks that appear at whatever angle the bullet strikes the target. To view the scene, please visit</p>

<p>.</p>

<h2>Instructions</h2>

<p>Make sure you stand inside the shooting area marked in red before firing at the targets. Use your mouse to look around and</p>

<kbd>W</kbd>

<kbd>A</kbd>

<kbd>S</kbd>

<kbd>D</kbd>

<p>keys on your keyboard to move forward, left, backward and right respectively. Press the</p>

<kbd>Space</kbd>

<p>key to jump and the</p>

<kbd>Left Mouse Button</kbd>

<p>to shoot.</p>

<h2>Issues</h2>

<p>If the targets is set to spin too quickly then the bullet marks might appear hidden beneath the target's geometry as the bullet mark isn't generated fast enough.</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<code>$ npm i -g decentraland</code>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$  dcl start</code>

<h2>Acknowledgements</h2>

<p>The following files were taken from</p>

<p>:</p>

<em>shotFail.mp3</em>

<li>modified from</li>

<em>shotRicochet.mp3</em>

<li>modified from</li>

<em>shotSilencer.mp3</em>

<li>modified from</li>

<h2>About</h2>

<p>Gun game mechanic along with bullet marks that appear at whatever angle the bullet strikes the target.</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/shooting-range

# URL: https://github.com/decentraland-scenes/shooting-range

<title>GitHub - decentraland-scenes/shooting-range: Basic gun game mechanic along with bullet marks and pop up scores.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Basic gun game mechanic along with bullet marks and pop up scores.</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/shooting-range</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>21</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Shooting Range</h1>

<em>demo of shooting-range scene running in preview.</em>

<h2>Description</h2>

<p>Basic gun game mechanic along with bullet marks and pop up scores. To view the scene, please visit</p>

<p>.</p>

<h2>Instructions</h2>

<p>Make sure you stand inside the shooting area marked in red before firing at the targets. Use your mouse to look around and</p>

<kbd>W</kbd>

<kbd>A</kbd>

<kbd>S</kbd>

<kbd>D</kbd>

<p>keys on your keyboard to move forward, left, backward and right respectively. Press the</p>

<kbd>Space</kbd>

<p>key to jump and the</p>

<kbd>Left Mouse Button</kbd>

<p>to shoot.</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<code>$ npm i -g decentraland</code>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$  dcl start</code>

<h2>Acknowledgements</h2>

<p>The following files were taken from</p>

<p>:</p>

<em>shot.mp3</em>

<li>modified from</li>

<em>shotFail.mp3</em>

<li>modified from</li>

<h2>About</h2>

<p>Basic gun game mechanic along with bullet marks and pop up scores.</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>1</strong>

<h3>Watchers</h3>

<strong>1</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/rotating-platforms

# URL: https://github.com/decentraland-scenes/rotating-platforms

<title>GitHub - decentraland-scenes/rotating-platforms: A simple platformer that demonstrates rotating various platforms using code.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A simple platformer that demonstrates rotating various platforms using code.</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/rotating-platforms</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>5</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Rotating Platforms</h1>

<em>demo of rotating-platforms scene running in preview.</em>

<h2>Description</h2>

<p>A simple platformer that demonstrates rotating various platforms using code, which then enables you to sync up the position of the platforms with other players in the scene should you choose to do so. To view the scene, please visit</p>

<p>.</p>

<h2>Instructions</h2>

<p>The aim is to get to the crown by moving and jumping between platforms. Use your mouse to look around and</p>

<kbd>W</kbd>

<kbd>A</kbd>

<kbd>S</kbd>

<kbd>D</kbd>

<p>keys on your keyboard to move forward, left, backward and right respectively. To jump, press the</p>

<kbd>Space</kbd>

<p>key.</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<code>$ npm i -g decentraland</code>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$  dcl start</code>

<h2>Acknowledgements</h2>

<em>win.mp3</em>

<li>modified from</li>

<h2>About</h2>

<p>A simple platformer that demonstrates rotating various platforms using code.</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>5</strong>

<h3>Watchers</h3>

<strong>3</strong>

<h3>Forks</h3>

<strong>2</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/rocket-board

# URL: https://github.com/decentraland-scenes/rocket-board

<title>GitHub - decentraland-scenes/rocket-board: A rocket board that you can stand on and pilot. The board uses the cannon.js physics engine so you experience the momentum and inertia effects.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A rocket board that you can stand on and pilot. The board uses the cannon.js physics engine so you experience the momentum and inertia effects.</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/rocket-board</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>14</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Rocket Board</h1>

<em>demo of rocket-board scene running in preview.</em>

<h2>Description</h2>

<p>A rocket board that you can stand on and pilot. The board uses the</p>

<p>physics engine so you get to experience the momentum and inertia effects. To view the scene, please visit</p>

<p>.</p>

<h2>Instructions</h2>

<p>Hop onto the rocket board and fly through the ring, every time you do, another one pops up in a random location in the scene. Press the</p>

<kbd>F</kbd>

<p>key to thrust upwards and press</p>

<kbd>E</kbd>

<p>key to thrust forwards in the direction you're facing. Use your mouse to look around and</p>

<kbd>W</kbd>

<kbd>A</kbd>

<kbd>S</kbd>

<kbd>D</kbd>

<p>keys on your keyboard to move your avatar forward, left, backward and right respectively.</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<code>$ npm i -g decentraland</code>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$  dcl start</code>

<h2>Acknowledgements</h2>

<em>rocketBooster.mp3</em>

<li>modified from</li>

<em>ringPassmp3</em>

<li>modified from</li>

<h2>About</h2>

<p>A rocket board that you can stand on and pilot. The board uses the cannon.js physics engine so you experience the momentum and inertia effects.</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>3</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/push-box-puzzle

# URL: https://github.com/decentraland-scenes/push-box-puzzle

<title>GitHub - decentraland-scenes/push-box-puzzle: Based on the classic Sokoban puzzle game where you push statues onto marked spots.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Based on the classic Sokoban puzzle game where you push statues onto marked spots.</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/push-box-puzzle</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>9</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Push Box Puzzle</h1>

<em>demo of push-box-puzzle scene running in preview.</em>

<h2>Description</h2>

<p>Based on the classic Sokoban puzzle game where you push statues onto marked spots. To view the scene, please visit</p>

<p>.</p>

<h2>Instructions</h2>

<p>Stand close to the statue you want to move and press the</p>

<kbd>Left Mouse Button</kbd>

<p>to push it to the adjacent tile. Use your mouse to look around and</p>

<kbd>W</kbd>

<kbd>A</kbd>

<kbd>S</kbd>

<kbd>D</kbd>

<p>keys on your keyboard to move forward, left, backward and right respectively. You can exit the room to restart the puzzle.</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<code>$ npm i -g decentraland</code>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$  dcl start</code>

<h2>Acknowledgements</h2>

<em>statueMove.mp3</em>

<li>modified from</li>

<h2>About</h2>

<p>Based on the classic Sokoban puzzle game where you push statues onto marked spots.</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>1</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/power-cube

# URL: https://github.com/decentraland-scenes/power-cube

<title>GitHub - decentraland-scenes/power-cube: Using simple planes to create a force field effect that blocks the player from reaching the access card.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Using simple planes to create a force field effect that blocks the player from reaching the access card.</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/power-cube</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>9</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Power Cube</h1>

<em>demo of power-cube scene running in preview.</em>

<h2>Description</h2>

<p>Using simple planes to create a force field effect that blocks the player from reaching the access card. This scene also demonstrate the new</p>

<code>Attachable</code>

<p>feature, which is used for picking up the power cube. To view the scene, please visit</p>

<p>.</p>

<h2>Instructions</h2>

<p>Get close to the power cube before picking it up. Use your mouse to look around and</p>

<kbd>W</kbd>

<kbd>A</kbd>

<kbd>S</kbd>

<kbd>D</kbd>

<p>keys on your keyboard to move forward, left, backward and right respectively. The</p>

<kbd>E</kbd>

<p>key is used to pick up and put down the cube. Remove the power cube from its base to turn off the forcefield.</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<code>$ npm i -g decentraland</code>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$  dcl start</code>

<h2>Acknowledgements</h2>

<p>The following files were taken from</p>

<p>:</p>

<em>cubePickup.mp3</em>

<li>modified from</li>

<em>cubePutDown.mp3</em>

<li>modified from</li>

<em>powerUp.mp3</em>

<li>modified from</li>

<em>powerDown.mp3</em>

<li>modified from</li>

<h2>About</h2>

<p>Using simple planes to create a force field effect that blocks the player from reaching the access card.</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>3</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/portal-puzzle

# URL: https://github.com/decentraland-scenes/portal-puzzle

<title>GitHub - decentraland-scenes/portal-puzzle: Using the new spawn feature to recreate a simple Portal clone.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Using the new spawn feature to recreate a simple Portal clone.</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/portal-puzzle</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>24</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Portal Puzzle</h1>

<em>demo of portal-puzzle scene running in preview.</em>

<h2>Description</h2>

<p>Using the new spawn feature to recreate a simple Portal clone where the player has to pickup the access card that's on a ledge. To view the scene, please visit</p>

<p>.</p>

<h2>Instructions</h2>

<p>Walk over the portal gun to pick it up. Press the</p>

<kbd>Left Mouse Button</kbd>

<p>to shoot and the</p>

<kbd>Space</kbd>

<p>key to jump. To toggle between the orange and blue portals, press the</p>

<kbd>E</kbd>

<p>key. Use your mouse to look around and</p>

<kbd>W</kbd>

<kbd>A</kbd>

<kbd>S</kbd>

<kbd>D</kbd>

<p>keys on your keyboard to move forward, left, backward and right respectively.</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<code>$ npm i -g decentraland</code>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$  dcl start</code>

<h2>Acknowledgements</h2>

<p>The following files were taken from</p>

<p>:</p>

<em>gunPickup.mp3</em>

<li>modified from</li>

<em>portalFail.mp3</em>

<li>modified from</li>

<em>portalSuccess.mp3</em>

<li>modified from</li>

<em>teleport.mp3</em>

<li>modified from</li>

<h2>About</h2>

<p>Using the new spawn feature to recreate a simple Portal clone.</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>3</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/orgs/decentraland-scenes/repositories?page=5&type=all

# URL: https://github.com/orgs/decentraland-scenes/repositories?page=5&type=all

<title>decentraland-scenes Â· GitHub</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<h2>Repositories</h2>

<p>Use a time API to get the current time and start a party</p>

<p>A simple interactive scene with a door that can be opened and closed.</p>

<p>Example scene showing basic dialog interactions with NPCs.</p>

<p>A simple mural scene.</p>

<p>A puzzle game where you reflect a beam of light to a target using a series of mirrors.</p>

<p>Example scene showing a UI</p>

<p>A Simon Says game, with click interactions and sequenced actions. The game generates a random sequence of colors and you must click buttons to match those.</p>

<p>Run a MANA transaction and receive MANA in Ropsten</p>

<p>A scene where MANA from market transactions is burnt, displaying a particle-based fire</p>

<p>Reflecting a ray off of multiple objects at arbitrary angles.</p>

<p>Item pickup mechanic where each item has a different spawn time.</p>

<p>This simple scene features a couple of wheels that you can spin by clicking them.</p>

<p>A scene where hummingbirds spawn when you click a tree. Each bird moves on its own to random positions.</p>

<p>Using the Noise Utils library to simulate random grass movement from wind</p>

<p>Demonstrates how you can grab and move an object.</p>

<p>A scene that shows a character walking along a fixed path, using lerp over each segment of the path. If you approach it, it will switch to yelling at you.</p>

<p>A cube-based fountain that works on Soho Plaza. It includes P2P sync and handling of multiple animations per model.</p>

<p>Call the Decentraland Events API to display events that are currently going on</p>

<p>Spawning enemy spaceships from various shaped portals.</p>

<p>A scene with animations, sound, and tiles on the floor that randomly change color to the beat.</p>

<p>Displays an NFT taken from a contract address</p>

<p>Using cannon.js to simulate several bouncing balls</p>

<p>A scene with a simple AI character that chooses its own actions and follows orders.</p>

<p>Make players dance in a loop when they stand in certain areas of your scene</p>

<p>A simple scene that shows how to fetch player wearable data to match against a criteria. In this case, only players wearing eyewear are allowed in.</p>

<p>A simple scene that uses the `decentraland-crypto-utils` library to make a MANA payment when a player clicks on a donations box</p>

<p>A simple scene that uses the `decentraland-crypto-utils` library to make a MANA payment when a player clicks a button</p>

<p>Swapping out the default avatar model for another character model.</p>

<p>A coconut shy built using cannon.js physics engine.</p>

<em>5</em>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/Party-Time

# URL: https://github.com/decentraland-scenes/Party-Time

<title>GitHub - decentraland-scenes/Party-Time: Use a time API to get the current time and start a party</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Use a time API to get the current time and start a party</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/Party-Time</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>14</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Party time</h1>

<p>This simple scene calls a time API to fetch the current time. If the time is between 9:00 PM and midnight in GMT+3, a party starts.</p>

<p>This scene shows you:</p>

<li>How to send requests to an API</li>

<li>How to parse a JSON response</li>

<li>How to handle async functions, waiting for an external response</li>

<li>How to stream audio</li>

<li>How to stream video, and display it as a texture on primitive shapes</li>

<p>The RESTful API called is</p>

<code>https://worldtimeapi.org/api</code>

<p>, which returns a JSON file with several fields that can be read.</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$:  dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<strong>Scene Usage</strong>

<p>Once the party starts, the scene starts streaming audio from an internet radio, and applies video textures from a video stream to spinning cubes.</p>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<p>If something doesnât work, please</p>

<p>.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>Use a time API to get the current time and start a party</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>1</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/mural-example-scene

# URL: https://github.com/decentraland-scenes/mural-example-scene

<title>GitHub - decentraland-scenes/mural-example-scene: A simple mural scene.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A simple mural scene.</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/mural-example-scene</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>32</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Mural Example Scene</h1>

<em>A screenshot of the mural-example-scene running in preview.</em>

<p>A simple mural with pixel times that can be painted different colors.</p>

<p>This scene shows you:</p>

<li>How to use the message bus to keep players in sync with each other's actions while they're together in the scene</li>

<li>How to send HTTP requests to an API to store the scene state in a permanent place, so others can then retrieve changes</li>

<li>How to set up a server that is capable of handling the storage of data in a separate Amazon S3 server</li>

<li>How to obtain the realm that a player is currently on</li>

<li>How to change the material of a primitive shape</li>

<li>How to use the utils library</li>

<code>Delay</code>

<li>component to buffer the updating various changes to the server</li>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$:  dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<strong>Setting up the server</strong>

<p>The scene is set up to make use of the same server that's used by Soho Plaza. To launch your own server, we recommend you deploy what's in the</p>

<code>/server</code>

<p>folder to your own Firebase account, following the steps in</p>

<p>. To store data on an Amazon S3 server, as done here, you'll also need to set up your own Amazon S3, and fetch credentials for that account to include in your server folder.</p>

<h2>About syncing changes between players</h2>

<p>When a player comes into the scene, they download the latest tile coloring pattern from off the server. Then, as different players that are there change the pattern, they get these changes from each other using the Message Bus, they donât need to check the server regularly to know whatâs new.</p>

<p>For this to work properly, we need to keep a separate version of this pattern for each realm and know what realm each player is on when they update the pattern. This is because only players that are in the same realm message each other via the Message Bus. There would otherwise be odd inconsistencies in what the pattern ends up being when players that are in different realms modify the same pattern without notifying each other. The scene includes the playerâs realm as part of the requests it sends, and the server then handles a different .json file depending on the realm.</p>

<p>Note: This works fine as long as the scene is deployed in one single place in the map. If various copies of the same scene exist and call the same server, writing to the same database, then that could be a problem. If two players are interacting with the two different versions of the scene, they will be acting upon the same database, but they won't share changes via the message bus. This will result in inconsistencies in between what each one sees and the final result being stored.</p>

<p>Another noteworthy thing weâre doing in this example is that changes arenât sent to the server right away, but instead we do a little buffer using the utils.Delay component, so that if the player changes several notes in quick succession, the server only gets notified of the final state of the pattern. This helps reduce the number of requests that the server needs to handle. For it to work, each update request needs to send the full state of the pattern, rather than just the changed elements.</p>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<p>If something doesnât work, please</p>

<p>.</p>

<h2>About</h2>

<p>A simple mural scene.</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>2</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/mirror-puzzle

# URL: https://github.com/decentraland-scenes/mirror-puzzle

<title>GitHub - decentraland-scenes/mirror-puzzle: A puzzle game where you reflect a beam of light to a target using a series of mirrors.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A puzzle game where you reflect a beam of light to a target using a series of mirrors.</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/mirror-puzzle</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>11</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Mirror Puzzle</h1>

<em>demo of mirror-puzzle scene running in preview.</em>

<h2>Description</h2>

<p>A puzzle game where you reflect a beam of light to a target using a series of mirrors. To view the scene, please visit</p>

<p>.</p>

<h2>Instructions</h2>

<p>Stand close to the mirror you want to move and press the</p>

<kbd>Left Mouse Button</kbd>

<p>to push the mirror to an adjacent tile. Using the</p>

<kbd>E</kbd>

<p>key will rotate the mirror clockwise and the</p>

<kbd>F</kbd>

<p>key to rotate it anti-clockwise. Use your mouse to look around and</p>

<kbd>W</kbd>

<kbd>A</kbd>

<kbd>S</kbd>

<kbd>D</kbd>

<p>keys on your keyboard to move forward, left, backward and right respectively. Finally, pressing the</p>

<kbd>Space</kbd>

<p>key will make your avatar jump.</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<code>$ npm i -g decentraland</code>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$  dcl start</code>

<h2>Acknowledgements</h2>

<em>mirrorMove.mp3</em>

<li>modified from</li>

<h2>About</h2>

<p>A puzzle game where you reflect a beam of light to a target using a series of mirrors.</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>2</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/Mining-rocks

# URL: https://github.com/decentraland-scenes/Mining-rocks

<title>GitHub - decentraland-scenes/Mining-rocks: Example scene showing a UI</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Example scene showing a UI</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/Mining-rocks</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>28</strong>

<h2>Files</h2>

<button>View code</button>

<h2>Mining rocks</h2>

<p>This simple scene shows how to create a custom UI.</p>

<p>This scene shows you:</p>

<li>How to create a UI canvas</li>

<li>How to add simple elements like text and rectangles to the UI</li>

<li>How to add images to the UI</li>

<li>How to trigger actions from clicking on UI elements</li>

<li>How to open and close the UI</li>

<li>How to display a bar in-world over an entity that is filled up gradually</li>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$:  dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<strong>Scene Usage</strong>

<p>Click on a rock to mine it, a health bar will appear over the rock until it's fully mined. If the rock contained any valuable coins, a floating notification will appear over the rock.</p>

<p>You can open the UI at any moment. This displays the durability of your tool and all of the coins you have collected so far.</p>

<p>If your tool's durability runs out, you won't be able to mine any more.</p>

<p>Open the pop-up UI at any time by clicking the icon on the top-right corner. You can also open it by clicking on the cube that's in the center of the scene.</p>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<p>If something doesnât work, please</p>

<p>.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>Example scene showing a UI</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/MANA-Transaction

# URL: https://github.com/decentraland-scenes/MANA-Transaction

<title>GitHub - decentraland-scenes/MANA-Transaction: Run a MANA transaction and receive MANA in Ropsten</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Run a MANA transaction and receive MANA in Ropsten</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/MANA-Transaction</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>19</strong>

<h2>Files</h2>

<button>View code</button>

<h2>Mana transaction</h2>

<p>A simple scene that uses the MANA smart contract and the EthConnect library to send the user an amount of MANA on the Ropsten test network.</p>

<p>This scene shows you:</p>

<li>How to import a smart contract</li>

<li>How to use the Eth-Connect library to call functions on a smart contrct</li>

<p>Note: This scene uses the MANA contract as an example that can be applied to any other contract. If all you want to do is send a MANA, you might prefer to look at this simpler scene, that presents an easier way to achieve the same:</p>

<p>.</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$:  dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<p>Paste the following to the end of the URL in the browser window:</p>

<code>&ENABLE_WEB3</code>

<p>For example, if the URL is</p>

<p>, make it</p>

<p>Note: When running a preview of a scene that uses one of the ethereum libraries, you must have Metamask or Dapper open and you must add this string.</p>

<strong>Scene Usage</strong>

<p>IMPORTANT: You can test this scene in Ropsten testnet to aviod paying real MANA and Ether for the gas fee. To do so, simply set your Metamask network from Mainnet to Ropsten and reload the scene.</p>

<p>Click on the cube to trigger a transaction. Metamask should then ask for your validation that you agree to the transaction. MANA is then sent to your account.</p>

<p>Learn more about how to use blockchain in your scenes in</p>

<p>in our docs site.</p>

<p>If something doesnât work, please</p>

<p>.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>Run a MANA transaction and receive MANA in Ropsten</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/Paid-Button

# URL: https://github.com/decentraland-scenes/Paid-Button

<title>GitHub - decentraland-scenes/Paid-Button: A simple scene that uses the `decentraland-crypto-utils` library to make a MANA payment when a player clicks a button</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A simple scene that uses the `decentraland-crypto-utils` library to make a MANA payment when a player clicks a button</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/Paid-Button</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>12</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Paid Button</h1>

<p>A simple scene that uses the</p>

<code>decentraland-crypto-utils</code>

<p>library to make a MANA payment when a player clicks a button.</p>

<p>This scene shows you:</p>

<li>How to use the crypto utils library</li>

<li>How to send a payment in MANA to a wallet</li>

<li>How to dealy an action itll a transaction for a payment in MANA is sent</li>

<li>How to handle async functions</li>

<li>How to define the elements of a scene as game objects, with state and functions</li>

<li>How to open a custom UI to display a confirmation prompt</li>

<li>How to make a UI component clickable and use it to trigger functions</li>

<p>The crypto Utils function makes it a lot simpler to perform blockchain functions. Sending MANA from one account to another just takes one line of code using this library.</p>

<p>Feel free to reuse the models and code from this scene!</p>

<p>Note: The crtpyo-utils library is currently a work in progress and has issues that need to be resolved. It's not yet published on npm, but you can copy what's been done in the</p>

<code>package.json</code>

<p>file of this repository.</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$:  dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<p>Paste the following to the end of the URL in the browser window:</p>

<code>&ENABLE_WEB3</code>

<p>For example, if the URL is</p>

<p>, make it</p>

<p>Note: When running a preview of a scene that uses one of the ethereum libraries, you must have Metamask or Dapper open and you must add this string.</p>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<p>If something doesnât work, please</p>

<p>.</p>

<h2>Scene usage</h2>

<p>When clicking on the button, a UI screen will ask you to confirm the action. If confirmed, Metamask or your wallet of choice will prompt you to confirm the transaction. Once confirmed, the action that's linked to the lever is performed: the door will open.</p>

<p>You can test this scene in Ropsten testnet to aviod paying real MANA and Ether for the gas fee. To do so, simply set your Metamask network from Mainnet to Ropsten and reload the scene.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>A simple scene that uses the `decentraland-crypto-utils` library to make a MANA payment when a player clicks a button</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>1</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/MANA-Burning-Altar

# URL: https://github.com/decentraland-scenes/MANA-Burning-Altar

<title>GitHub - decentraland-scenes/MANA-Burning-Altar: A scene where MANA from market transactions is burnt, displaying a particle-based fire</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A scene where MANA from market transactions is burnt, displaying a particle-based fire</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/MANA-Burning-Altar</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>2</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>24</strong>

<h2>Files</h2>

<button>View code</button>

<h2>Mana transaction</h2>

<p>Fees collected from the Marketplace are stored in this Altar.</p>

<p>Anyone can burn the MANA collected by touching the Altar's stone

and light the flame, which will last 1 block for every 10 MANA burnt.</p>

<p>This scene shows you:</p>

<li>How to call functions from a smart contract</li>

<li>How to make a particle effect handling multiple entities</li>

<li>How to create custom components to store custom data about entities</li>

<li>How to use component groups to handle all entities that share the same components</li>

<li>How to create a system to update entity positions frame by frame</li>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$:  dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<p>Paste the following to the end of the URL in the browser window:</p>

<code>&ENABLE_WEB3</code>

<p>For example, if the URL is</p>

<code>http://127.0.0.1:8000?position=0%2C0&SCENE_DEBUG_PANEL</code>

<p>, make it</p>

<code>http://127.0.0.1:8000?position=0%2C0&SCENE_DEBUG_PANEL&ENABLE_WEB3</code>

<p>Note: When running a preview of a scene that uses one of the ethereum libraries, you must have Metamask or Dapper open and you must add this string.</p>

<p>IMPORTANT: You</p>

<strong>MUST</strong>

<p>be on mainnet for this in order to work</p>

<strong>Scene Usage</strong>

<p>The amount of mana that's ready to be burnt is displayed as a glowing blue column at the back of the altar. Click on the fire icon at the bottom to burn it. Metamask should then ask for your validation that you agree to the transaction.</p>

<p>This triggers the burning of these tokens. It also shows this by creating a fire as a particle system.</p>

<p>The fire keeps burning for the duration of one Ethereum block mining for every 10 MANA that was burnt. If someone enters the scene while the last fire is still burning, they will also see the fire.</p>

<p>Learn more about how to use blockchain in your scenes in</p>

<p>in our docs site.</p>

<p>If something doesnât work, please</p>

<p>.</p>

<h2>Demo Mode</h2>

<p>You can set the variable</p>

<code>DEMO_MODE</code>

<p>to</p>

<code>true</code>

<p>and the collected MANA will be 25,000 and you won't need to sign a transaction to push the burn button</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>A scene where MANA from market transactions is burnt, displaying a particle-based fire</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>3</strong>

<h3>Watchers</h3>

<strong>3</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/light-bounce-puzzle

# URL: https://github.com/decentraland-scenes/light-bounce-puzzle

<title>GitHub - decentraland-scenes/light-bounce-puzzle: Reflecting a ray off of multiple objects at arbitrary angles.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Reflecting a ray off of multiple objects at arbitrary angles.</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/light-bounce-puzzle</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>5</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Light Bounce Puzzle</h1>

<em>demo of light-bounce-puzzle scene running in preview.</em>

<h2>Description</h2>

<p>The objective is to fire a single light ray that reflects off of all four floating rocks. To view the scene, please visit</p>

<p>.</p>

<h2>Instructions</h2>

<p>Use the</p>

<kbd>Left Mouse Button</kbd>

<p>to fire a light ray. Use your mouse to look around and</p>

<kbd>W</kbd>

<kbd>A</kbd>

<kbd>S</kbd>

<kbd>D</kbd>

<p>keys on your keyboard to move forward, left, backward and right respectively.</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<code>$ npm i -g decentraland</code>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$  dcl start</code>

<h2>Acknowledgements</h2>

<em>lightningOrb.mp3</em>

<li>modified from</li>

<h2>About</h2>

<p>Reflecting a ray off of multiple objects at arbitrary angles.</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/item-pickup

# URL: https://github.com/decentraland-scenes/item-pickup

<title>GitHub - decentraland-scenes/item-pickup: Item pickup mechanic where each item has a different spawn time.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Item pickup mechanic where each item has a different spawn time.</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/item-pickup</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>19</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Item Pickup</h1>

<em>demo of item-pickup scene running in preview.</em>

<h2>Description</h2>

<p>Item pickup mechanic where each item has a different spawn time. To view the scene, please visit</p>

<p>.</p>

<h2>Instructions</h2>

<p>Run over or stand over an item to pick it up. Use your mouse to look around and</p>

<kbd>W</kbd>

<kbd>A</kbd>

<kbd>S</kbd>

<kbd>D</kbd>

<p>keys on your keyboard to move forward, left, backward and right respectively. To jump, press the</p>

<kbd>Space</kbd>

<p>key.</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<code>$ npm i -g decentraland</code>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$  dcl start</code>

<h2>Acknowledgements</h2>

<p>The following files were taken from</p>

<p>:</p>

<em>ammoPickup.mp3</em>

<li>modified from</li>

<em>armorPickup.mp3</em>

<li>modified from</li>

<em>medikitPickup.mp3</em>

<li>modified from</li>

<h2>About</h2>

<p>Item pickup mechanic where each item has a different spawn time.</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>1</strong>

<h3>Forks</h3>

<strong>2</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/grass-noise-example

# URL: https://github.com/decentraland-scenes/grass-noise-example

<title>GitHub - decentraland-scenes/grass-noise-example: Using the Noise Utils library to simulate random grass movement from wind</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Using the Noise Utils library to simulate random grass movement from wind</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/grass-noise-example</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>5</strong>

<h2>Files</h2>

<button>View code</button>

<h1>grass-noise-example</h1>

<p>Using the Noise Utils library to simulate random grass movement from wind</p>

<p>This scene uses the</p>

<p>library to generate a semi-random sequence that uses a 3d version of the</p>

<em>Simplex</em>

<p>formula to change the rotation of grass over time.</p>

<p>The first two dimensions of the Simplex formula are mapped to the x and z coordinate of each grass entity, the thrid dimension of the Simplex formula is iterated over time to create movement.</p>

<p>The grass movement is random, but follows a smooth series of transitions that appear to move close grass entities together. The movement patterns are deterministic, but start from a random seed and don't have clear recognizeable repeating patterns.</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$:  dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<strong>Scene Usage</strong>

<p>Click on the grass to start the movement. Each grass clump moves independently, following its own values from the Simplex random noise algorithm.</p>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<p>If something doesnât work, please</p>

<p>.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>Using the Noise Utils library to simulate random grass movement from wind</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>1</strong>

<h3>Watchers</h3>

<strong>3</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/grab-objects

# URL: https://github.com/decentraland-scenes/grab-objects

<title>GitHub - decentraland-scenes/grab-objects: Demonstrates how you can grab and move an object.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Demonstrates how you can grab and move an object.</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/grab-objects</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>2</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>17</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Grab Objects</h1>

<em>demo of grab-objects scene running in preview.</em>

<h2>Description</h2>

<p>Demonstrates how you can grab and move an object using the new</p>

<code>Attachable</code>

<p>feature. This is a simplified version of this scene</p>

<p>. To view the scene, please visit</p>

<p>.</p>

<h2>Instructions</h2>

<p>Get close to the crate before picking it up. Use your mouse to look around and</p>

<kbd>W</kbd>

<kbd>A</kbd>

<kbd>S</kbd>

<kbd>D</kbd>

<p>keys on your keyboard to move forward, left, backward and right respectively. The</p>

<kbd>E</kbd>

<p>key is used to pick up and put down the crate.</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<code>$ npm i -g decentraland</code>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$  dcl start</code>

<h2>Acknowledgements</h2>

<p>The following files were taken from</p>

<p>:</p>

<em>pickUp.mp3</em>

<li>modified from</li>

<em>putDown.mp3</em>

<li>modified from</li>

<h2>About</h2>

<p>Demonstrates how you can grab and move an object.</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>1</strong>

<h3>Forks</h3>

<strong>1</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/grab-objects-advance

# URL: https://github.com/decentraland-scenes/grab-objects-advance

<title>GitHub - decentraland-scenes/grab-objects-advanced: Demonstrates how you can grab and move an object with physics.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Demonstrates how you can grab and move an object with physics.</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/grab-objects-advanced</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>7</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Grab Objects Advanced</h1>

<em>demo of grab-objects-advanced scene running in preview.</em>

<h2>Description</h2>

<p>Demonstrates how you can grab and move an object using the</p>

<p>physics engine. This is the advanced version of this scene</p>

<p>. To view the scene, please visit</p>

<p>.</p>

<h2>Instructions</h2>

<li>Use your mouse to look around and</li>

<kbd>W</kbd>

<kbd>A</kbd>

<kbd>S</kbd>

<kbd>D</kbd>

<li>keys on your keyboard to move forward, left, backward and right respectively.</li>

<li>To jump, press the</li>

<kbd>Space</kbd>

<li>key.</li>

<li>To grab the object, click and hold the</li>

<kbd>Left Mouse Button</kbd>

<li>.</li>

<li>Press and hold the</li>

<kbd>E</kbd>

<li>key to pull the object in.</li>

<h2>Issues</h2>

<p>There are a couple of issues that need looking at:</p>

<li>Object reorientates itself when you first pick it up.</li>

<li>Making large arcs/turns whilst holding the object can cause the object to go out of bounds.</li>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<code>$ npm i -g decentraland</code>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$  dcl start</code>

<h2>Acknowledgements</h2>

<p>Code is adapted from</p>

<h2>About</h2>

<p>Demonstrates how you can grab and move an object with physics.</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>1</strong>

<h3>Watchers</h3>

<strong>1</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/grab-objects-advanced

# URL: https://github.com/decentraland-scenes/grab-objects-advanced

<title>GitHub - decentraland-scenes/grab-objects-advanced: Demonstrates how you can grab and move an object with physics.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Demonstrates how you can grab and move an object with physics.</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/grab-objects-advanced</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>7</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Grab Objects Advanced</h1>

<em>demo of grab-objects-advanced scene running in preview.</em>

<h2>Description</h2>

<p>Demonstrates how you can grab and move an object using the</p>

<p>physics engine. This is the advanced version of this scene</p>

<p>. To view the scene, please visit</p>

<p>.</p>

<h2>Instructions</h2>

<li>Use your mouse to look around and</li>

<kbd>W</kbd>

<kbd>A</kbd>

<kbd>S</kbd>

<kbd>D</kbd>

<li>keys on your keyboard to move forward, left, backward and right respectively.</li>

<li>To jump, press the</li>

<kbd>Space</kbd>

<li>key.</li>

<li>To grab the object, click and hold the</li>

<kbd>Left Mouse Button</kbd>

<li>.</li>

<li>Press and hold the</li>

<kbd>E</kbd>

<li>key to pull the object in.</li>

<h2>Issues</h2>

<p>There are a couple of issues that need looking at:</p>

<li>Object reorientates itself when you first pick it up.</li>

<li>Making large arcs/turns whilst holding the object can cause the object to go out of bounds.</li>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<code>$ npm i -g decentraland</code>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$  dcl start</code>

<h2>Acknowledgements</h2>

<p>Code is adapted from</p>

<h2>About</h2>

<p>Demonstrates how you can grab and move an object with physics.</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>1</strong>

<h3>Watchers</h3>

<strong>1</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/enemy-spawner

# URL: https://github.com/decentraland-scenes/enemy-spawner

<title>GitHub - decentraland-scenes/enemy-spawner: Spawning enemy spaceships from various shaped portals.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Spawning enemy spaceships from various shaped portals.</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/enemy-spawner</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>18</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Enemy Spawner</h1>

<em>demo of enemy-spawner scene running in preview.</em>

<h2>Description</h2>

<p>Spawning enemy spaceships from portals, which come in a variety of shapes: circle, triangle and rectangle. To view the scene, please visit</p>

<p>.</p>

<h2>Instructions</h2>

<p>Use your mouse to look around and</p>

<kbd>W</kbd>

<kbd>A</kbd>

<kbd>S</kbd>

<kbd>D</kbd>

<p>keys on your keyboard to move forward, left, backward and right respectively. Press the</p>

<kbd>Space</kbd>

<p>key to jump and the</p>

<kbd>Left Mouse Button</kbd>

<p>to fire at an enemy spaceship.</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<code>$ npm i -g decentraland</code>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$  dcl start</code>

<h2>Acknowledgements</h2>

<p>The following files were taken from</p>

<p>:</p>

<em>blaster.mp3</em>

<li>modified from</li>

<em>explosion.mp3</em>

<li>modified from</li>

<em>spawn.mp3</em>

<li>modified from</li>

<h2>About</h2>

<p>Spawning enemy spaceships from various shaped portals.</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/cannon-example-scene

# URL: https://github.com/decentraland-scenes/cannon-example-scene

<title>GitHub - decentraland-scenes/cannon-example-scene: Using cannon.js to simulate several bouncing balls</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Using cannon.js to simulate several bouncing balls</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/cannon-example-scene</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>32</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Cannon Example Scene</h1>

<em>demo of cannon-example-scene running in preview.</em>

<h2>Description</h2>

<p>Simulating a bunch of balls bouncing using the</p>

<p>physics engine.</p>

<h2>Running the scene</h2>

<p>After you clone the project, run the following:</p>

<code>$ npm i -g decentraland</code>

<p>Followed by:</p>

<code>$ dcl start</code>

<p>Use the Left Mouse Button or 'E' or 'F' keys to interact with the balls.</p>

<h2>About</h2>

<p>Using cannon.js to simulate several bouncing balls</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>3</strong>

<h3>Watchers</h3>

<strong>3</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/Auto-Dance-Area

# URL: https://github.com/decentraland-scenes/Auto-Dance-Area

<title>GitHub - decentraland-scenes/Auto-Dance-Area: Make players dance in a loop when they stand in certain areas of your scene</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Make players dance in a loop when they stand in certain areas of your scene</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/Auto-Dance-Area</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>8</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Auto Dance Area</h1>

<h2>Description</h2>

<p>Make players dance in a loop when they stand in certain areas of your scene.

When players stand on either of the two checkered platforms, they'll start looping a dance animation.</p>

<h2>Instructions</h2>

<p>Open the</p>

<code>danceArea.ts</code>

<p>file. The first thing you'll find is the definition of</p>

<code>danceAreas</code>

<p>, an array with every danceArea definition in the scene. You can customize this to add more areas to this list, or change the size or position of these.</p>

<p>You can also change the</p>

<code>type</code>

<p>of the dance, the following options are available:</p>

<code>PredefinedEmote.ROBOT</code>

<code>PredefinedEmote.TIK</code>

<code>PredefinedEmote.TEKTONIK</code>

<code>PredefinedEmote.HAMMER</code>

<code>PredefinedEmote.HEAD_EXPLODDE</code>

<code>PredefinedEmote.HANDS_AIR</code>

<code>PredefinedEmote.DISCO</code>

<code>PredefinedEmote.DAB</code>

<code>"all"</code>

<p>Note: When passing the string value</p>

<code>"all"</code>

<p>, the auto-dance area will perform random dance animations.</p>

<p>Set the</p>

<code>DEBUG_FLAG</code>

<p>to true to view white cubes where each dance area is at. These are only visible if the scene is in preview mode, not once the scene is deployed.</p>

<p>The</p>

<code>DanceSystem</code>

<p>is active only while a player is inside one of the dance areas. This system loops over a counter that lasts 11 seconds (same length as all the default dance animations). It also sets button event listeners, to trigger the dance animation as soon as the player lets go of any of the movement keys. This is there because dance animations are otherwise interrupted every time the player walks.</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<code>$ npm i -g decentraland</code>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$  dcl start</code>

<h2>About</h2>

<p>Make players dance in a loop when they stand in certain areas of your scene</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>2</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>1</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/Donations-Box

# URL: https://github.com/decentraland-scenes/Donations-Box

<title>GitHub - decentraland-scenes/Donations-Box: A simple scene that uses the `decentraland-crypto-utils` library to make a MANA payment when a player clicks on a donations box</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A simple scene that uses the `decentraland-crypto-utils` library to make a MANA payment when a player clicks on a donations box</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/Donations-Box</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>8</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Donations Box</h1>

<p>A simple scene that uses the</p>

<code>decentraland-crypto-utils</code>

<p>library to make a MANA payment when a player clicks on a donations box</p>

<p>This scene shows you:</p>

<li>How to use the crypto utils library</li>

<li>How to send a payment in MANA to a wallet</li>

<li>How to dealy an action itll a transaction for a payment in MANA is sent</li>

<li>How to handle async functions</li>

<li>How to define the elements of a scene as game objects, with state and functions</li>

<li>How to open a custom UI to display a confirmation prompt</li>

<li>How to make a UI component clickable and use it to trigger functions</li>

<li>How to include an input field in a UI, where players can write freely</li>

<p>The crypto Utils function makes it a lot simpler to perform blockchain functions. Sending MANA from one account to another just takes one line of code using this library.</p>

<p>Feel free to reuse the models and code from this scene!</p>

<p>Note: The crtpyo-utils library is currently a work in progress and has issues that need to be resolved. It's not yet published on npm, but you can copy what's been done in the</p>

<code>package.json</code>

<p>file of this repository.</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$:  dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<p>Paste the following to the end of the URL in the browser window:</p>

<code>&ENABLE_WEB3</code>

<p>For example, if the URL is</p>

<p>, make it</p>

<p>Note: When running a preview of a scene that uses one of the ethereum libraries, you must have Metamask or Dapper open and you must add this string.</p>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<p>If something doesnât work, please</p>

<p>.</p>

<h2>Scene usage</h2>

<p>When clicking on the donations box, a UI screen opens asking you to confirm the action. You can go with the suggested donation ammount, or provide a different number in the input box. If confirmed, Metamask or your wallet of choice will prompt you to confirm the transaction. Once confirmed, the action that's linked to the lever is performed: the donations box performs an enticing animation.</p>

<p>You can test this scene in Ropsten testnet to aviod paying real MANA and Ether for the gas fee. To do so, simply set your Metamask network from Mainnet to Ropsten and reload the scene.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>A simple scene that uses the `decentraland-crypto-utils` library to make a MANA payment when a player clicks on a donations box</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>6</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>2</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/avatar-swap

# URL: https://github.com/decentraland-scenes/avatar-swap

<title>GitHub - decentraland-scenes/avatar-swap: Swapping out the default avatar model for another character model.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Swapping out the default avatar model for another character model.</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/avatar-swap</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>6</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Avatar Swap</h1>

<em>demo of avatar-swap scene running in preview.</em>

<h2>Description</h2>

<p>Using the new</p>

<code>AvatarModifiers</code>

<p>feature to swap out the default avatar for another character model. This way you can avoid breaking the immersiveness of the scene by making the player's character style match that of the enviroment's. To view the scene, please visit</p>

<p>.</p>

<h2>Instructions</h2>

<p>Run over to the area covered in grass to automatically switch avatars. Use your mouse to look around and</p>

<kbd>W</kbd>

<kbd>A</kbd>

<kbd>S</kbd>

<kbd>D</kbd>

<p>keys on your keyboard to move forward, left, backward and right respectively. To jump, press the</p>

<kbd>Space</kbd>

<p>key.</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<code>$ npm i -g decentraland</code>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$  dcl start</code>

<h2>Acknowledgements</h2>

<p>Model and animations from</p>

<h2>About</h2>

<p>Swapping out the default avatar model for another character model.</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>1</strong>

<h3>Watchers</h3>

<strong>3</strong>

<h3>Forks</h3>

<strong>3</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/cube-spawner

# URL: https://github.com/decentraland-scenes/cube-spawner

<title>GitHub - decentraland-scenes/cube-spawner</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/cube-spawner</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>1</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Decentraland scene</h1>

<p>This folder contains all the necessary files to launch a Decentraland scene.</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Open this folder on the command line, then run:</p>

<code>dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<h2>Deploy to Decentraland</h2>

<p>If you own any parcels of land in Decentraland, or have permissions to deploy to someone else's, you can publish this project.</p>

<li>Make sure the scene parcels in</li>

<code>scene.json</code>

<li>match those you own or have permissions on.</li>

<li>Run</li>

<code>dcl deploy</code>

<li>on the project folder</li>

<li>This will open a browser tab to confirm. Metamask will prompt you to sign.</li>

<p>Note: Make sure you are using the wallet that owns the parcels or has permissions.</p>

<h3>Deploy to a free server</h3>

<p>If you don't own parcels in Decentraland or are not ready to publish your scene to the world, you can share your creations by uploading your scenes to a free hosting service.</p>

<p>See</p>

<p>for instructions on how to do this.</p>

<h2>Resources</h2>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<p>Find more example scenes, tutorials and helper libraries in the</p>

<p>.</p>

<p>If you need any help, join</p>

<p>, where you'll find a vibrant community of other creators who are eager to help. You're sure to find help in the #SDK support channel.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/coconut-shy

# URL: https://github.com/decentraland-scenes/coconut-shy

<title>GitHub - decentraland-scenes/coconut-shy: A coconut shy built using cannon.js physics engine.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A coconut shy built using cannon.js physics engine.</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/coconut-shy</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>9</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Coconut Shy</h1>

<em>demo of coconut-shy scene running in preview.</em>

<h2>Description</h2>

<p>A coconut shy built using</p>

<p>physics engine. This scene demonstrates interactions between multiple dynamic objects. To view the scene, please visit</p>

<p>. Note: You can press the</p>

<kbd>P</kbd>

<p>key to adjust the graphics settings.</p>

<h2>Instructions</h2>

<p>Grab a ball using the</p>

<kbd>E</kbd>

<p>key, then use your mouse to aim in the direction you want to throw the ball. Press and hold the</p>

<kbd>Left Mouse Button</kbd>

<p>to trigger the 'power' meter to the bottom right of the screen, which controls how hard you throw the ball. To release the ball, let go of the</p>

<kbd>Left Mouse Button</kbd>

<p>as soon as the meter reaches your desired 'power' level. In terms of basic movement:</p>

<kbd>W</kbd>

<kbd>A</kbd>

<kbd>S</kbd>

<kbd>D</kbd>

<p>keys on your keyboard to move forward, left, backward and right respectively. Finally, pressing the</p>

<kbd>Space</kbd>

<p>key will make your avatar jump.</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<code>$ npm i -g decentraland</code>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$  dcl start</code>

<h2>Acknowledgements</h2>

<li>All sound effects are from</li>

<h2>About</h2>

<p>A coconut shy built using cannon.js physics engine.</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>3</strong>

<h3>Forks</h3>

<strong>2</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/orgs/decentraland-scenes/repositories?page=6&type=all

# URL: https://github.com/orgs/decentraland-scenes/repositories?page=6&type=all

<title>decentraland-scenes Â· GitHub</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<h2>Repositories</h2>

<p>nft_bazl gallery</p>

<p>One of Decentraland's public plazas, dedicated to gaming</p>

<p>The vegas plaza, located at -66,66 in Decentraland Genesis City</p>

<p>A meter that goes up based on the number of claps from players applauding in the scene.</p>

<p>Using emote events as key bindings for switching between multiple paint colors, which can be expanded for something like weapon switching.</p>

<p>Checks whether the player owns a token from a particular smart contract before granting them permission to enter the club.</p>

<p>Simple broadcasting websocket server</p>

<p>A multiplayer game for Decentraland Game Jam September 2020</p>

<p>An inflatable-punch-bag scene built using cannon.js physics engine.</p>

<p>A tin-can-alley scene built using cannon.js physics engine.</p>

<p>Arcade cabinets containing variations of the classic Breakout game.</p>

<p>Using CoinGecko's API to display the prices of Bitcoin, Ethereum and Mana.</p>

<p>Example of how to create a projectile with physics and combining that with the new spawn feature to create a translocator disc, which allows a player to teleport to wherever the disc is located.</p>

<p>A simple party area with music streaming and video projections</p>

<p>Scene used in Halloween events for day 1 and 2</p>

<p>Cover as much of the ground as you can with paint.</p>

<p>Demonstrates how you can grab and move an object with physics.</p>

<p>Using box2d to create a bouncing ball</p>

<p>Displaying NFTs and information about them using a JSON file.</p>

<p>A static scene that includes animations that are built-into the 3D models</p>

<p>A scene that uses a server and a REST API to sync a scene state amongst multiple users. Itâs built around the basic âopen the doorâ example.</p>

<p>A Decentraland tutorial - learn how to make a game!</p>

<em>6</em>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/nft_bazl

# URL: https://github.com/decentraland-scenes/nft_bazl

<title>GitHub - decentraland-scenes/nft_bazl: nft_bazl gallery</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>nft_bazl gallery</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/nft_bazl</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>10</strong>

<h2>Files</h2>

<button>View code</button>

<h2>About</h2>

<p>nft_bazl gallery</p>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>0</strong>

<h3>Forks</h3>

<strong>2</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/Vegas-Plaza

# URL: https://github.com/decentraland-scenes/Vegas-Plaza

<title>GitHub - decentraland-scenes/Vegas-Plaza: The vegas plaza, located at -66,66 in Decentraland Genesis City</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>The vegas plaza, located at -66,66 in Decentraland Genesis City</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/Vegas-Plaza</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>5</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>8</strong>

<h2>Files</h2>

<button>View code</button>

<h2>About</h2>

<p>The vegas plaza, located at -66,66 in Decentraland Genesis City</p>

<h3>License</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>0</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/clap-meter

# URL: https://github.com/decentraland-scenes/clap-meter

<title>GitHub - decentraland-scenes/clap-meter: A meter that goes up based on the number of claps from players applauding in the scene.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A meter that goes up based on the number of claps from players applauding in the scene.</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/clap-meter</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>10</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Clap Meter</h1>

<em>demo of clap-meter scene running in preview.</em>

<h2>Description</h2>

<p>A meter that goes up based on the number of claps from players applauding in the scene. To view the scene, please visit</p>

<p>.</p>

<h2>Instructions</h2>

<p>The scene checks whether you're in first person or third person view - for the best experience, you should switch to the third person view by pressing the</p>

<kbd>V</kbd>

<p>key. To move the needle on the meter just clap by pressing the number</p>

<kbd>5</kbd>

<p>key - keep pressing</p>

<kbd>5</kbd>

<p>to push it further to the right. Once you stop clapping, the needle will also stop moving and will even start moving towards the left again after a short cooldown period.</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<code>$ npm i -g decentraland</code>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$  dcl start</code>

<h2>About</h2>

<p>A meter that goes up based on the number of claps from players applauding in the scene.</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>3</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/key-binding

# URL: https://github.com/decentraland-scenes/key-binding

<title>GitHub - decentraland-scenes/key-binding: Using emote events as key bindings for switching between multiple paint colors, which can be expanded for something like weapon switching.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Using emote events as key bindings for switching between multiple paint colors, which can be expanded for something like weapon switching.</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/key-binding</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>15</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Key Binding</h1>

<em>demo of key binding scene running in preview.</em>

<h2>Description</h2>

<p>Using emote events as key bindings for switching between multiple paint colors, which can be expanded for something like weapon switching. To view the scene, please visit</p>

<p>.</p>

<h2>Instructions</h2>

<li>Use your mouse to look around and</li>

<kbd>W</kbd>

<kbd>A</kbd>

<kbd>S</kbd>

<kbd>D</kbd>

<li>keys on your keyboard to move forward, left, backward and right respectively</li>

<li>To jump, press the</li>

<kbd>Space</kbd>

<li>key</li>

<li>To place paint onto the ground, use the</li>

<kbd>Left Mouse Button</kbd>

<li>Use the number keys</li>

<kbd>1</kbd>

<li>to</li>

<kbd>7</kbd>

<li>to switch between the various paint colors</li>

<li>Use the</li>

<kbd>E</kbd>

<li>key to switch to the next paint color</li>

<li>Use the</li>

<kbd>F</kbd>

<li>key to switch to the previous paint color</li>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<code>$ npm i -g decentraland</code>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$  dcl start</code>

<h2>Acknowledgements</h2>

<p>The following files were taken from</p>

<em>splat.mp3</em>

<li>modified from</li>

<em>switch.mp3</em>

<li>modified from</li>

<h2>About</h2>

<p>Using emote events as key bindings for switching between multiple paint colors, which can be expanded for something like weapon switching.</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>3</strong>

<h3>Forks</h3>

<strong>1</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/Space-Traitor

# URL: https://github.com/decentraland-scenes/Space-Traitor

<title>GitHub - decentraland-scenes/Space-Traitor: A multiplayer game for Decentraland Game Jam September 2020</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A multiplayer game for Decentraland Game Jam September 2020</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/Space-Traitor</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>5</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>103</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Space Traitor</h1>

<p>This is a multiplayer game about deceiving and guessing other player's identities. It takes plenty of inspiration from Among Us, but brings similar mechanics into a 3d medium.</p>

<p>At least 3 (or better 4) players must ring the bell of the space station, then the game starts.</p>

<p>A traitor is picked randomly, that player will secretly play against the others.</p>

<p>This scene is built using Colyseus as an authoritative server, syncing all changes to players via Websockets.</p>

<h1>Instructions</h1>

<h3>Play online</h3>

<li>In decentraland, deployed at:</li>

<h3>Run locally</h3>

<li>open a console on the</li>

<code>server</code>

<li>folder</li>

<li>run</li>

<code>npm run build</code>

<li>, then</li>

<code>npm run start</code>

<li>in server's folder</li>

<li>open another console in the</li>

<code>scene</code>

<li>folder</li>

<li>run</li>

<code>dcl start</code>

<li>open 3 tabs at "</li>

<li>", click on the button by the door to register as a player</li>

<li>the traitor will be notified</li>

<h3>Test the scene as 1 player</h3>

<p>To be able to test the scene as 1 person you can choose the "F" option twice during the button dialogue.</p>

<h3>Game mechanics</h3>

<p>Once at least 3 players have accepted the game, a countdown will start. During this countdown, other players can join, otherwise the game begins.</p>

<p>Once the game begins, one of the players is selected at random to be the traitor, this player is given instructions to act secretively.</p>

<p>A 5 minute countdown starts, non-traitor players hav to fix 8 machines before this countdown ends, otherwise the traitor wins. The machines are fixed by playing a randomly selected UI mini-game. Some equipment might randomly break over time too.</p>

<p>The traitor can also sabotage fuse boxes by cutting cables. By cutting all cables in a fusebox, the time for solving the game gets reduced significantly, favoring the traitor.</p>

<p>At any moment during the game, anyone can hit the vote button on the main hall and start a voting round. All players left alive must vote for someone to be kicked out. If the traitor is kicked out, other players win.</p>

<p>That's why the traitor must act discretely, as cutting wires out in the open will alert them of who he is and vote him out. The game is designed to make everyone doubt each other and suspicions to fly all over the place.</p>

<h2>Using Colyseus SDK with Decentraland</h2>

<p>Install</p>

<code>colyseus.js</code>

<p>:</p>

<code>npm install --save colyseus.js</code>

<p>Add</p>

<code>colyseus.js</code>

<p>to your</p>

<code>"bundleDependencies"</code>

<p>in your</p>

<code>package.json</code>

<p>:</p>

<pre>: [</pre>

<pre>]</pre>

<p>To avoid TypeScript compilation errors you'll need to edit</p>

<code>tsconfig.json</code>

<p>, and include a few</p>

<code>///<reference</code>

<p>to your source-code, as you can see in the</p>

<p>file.</p>

<pre>{</pre>

<pre>: {</pre>

<pre>:</pre>

<pre>}

}</pre>

<p>The Colyseus SDK requires a few TypeScript libraries that are excluded by default by Decentraland.</p>

<h2>Creating a Colyseus server:</h2>

<code>npm init colyseus-app ./server</code>

<h2>Deploying to</h2>

<code>npm run build</code>

<p>Upload the</p>

<code>lib</code>

<p>folder from the Arena control panel.</p>

<h2>More</h2>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<p>If something doesnât work, please</p>

<p>.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>A multiplayer game for Decentraland Game Jam September 2020</p>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>1</strong>

<h3>Watchers</h3>

<strong>1</strong>

<h3>Forks</h3>

<strong>1</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/inflatable-punch-bag

# URL: https://github.com/decentraland-scenes/inflatable-punch-bag

<title>GitHub - decentraland-scenes/inflatable-punch-bag: An inflatable-punch-bag scene built using cannon.js physics engine.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>An inflatable-punch-bag scene built using cannon.js physics engine.</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/inflatable-punch-bag</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>6</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Inflatable punch bag</h1>

<em>demo of inflatable-punch-bag scene running in preview.</em>

<h2>Description</h2>

<p>An inflatable-punch-bag scene built using</p>

<p>physics engine. To view the scene, please visit</p>

<p>.</p>

<h2>Instructions</h2>

<p>You can hit the bag from any direction and the bag will swing back and forth until it settles back into its original position. To punch the bag just walk up to it and press the</p>

<kbd>Left Mouse Button</kbd>

<p>,</p>

<kbd>E</kbd>

<p>or</p>

<kbd>R</kbd>

<p>key. Use your mouse to look around and</p>

<kbd>W</kbd>

<kbd>A</kbd>

<kbd>S</kbd>

<kbd>D</kbd>

<p>keys on your keyboard to move forward, left, backward and right respectively. Finally, pressing the</p>

<kbd>Space</kbd>

<p>key will make your avatar jump.</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<code>$ npm i -g decentraland</code>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$  dcl start</code>

<h2>About</h2>

<p>An inflatable-punch-bag scene built using cannon.js physics engine.</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>3</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/tin-can-alley

# URL: https://github.com/decentraland-scenes/tin-can-alley

<title>GitHub - decentraland-scenes/tin-can-alley: A tin-can-alley scene built using cannon.js physics engine.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A tin-can-alley scene built using cannon.js physics engine.</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/tin-can-alley</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>3</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Tin Can Alley</h1>

<em>demo of tin-can-alley scene running in preview.</em>

<h2>Description</h2>

<p>A tin-can-alley scene built using</p>

<p>physics engine. This scene demonstrates interactions between multiple dynamic objects. To view the scene, please visit</p>

<p>. Note: You can press the</p>

<kbd>P</kbd>

<p>key to adjust the graphics settings.</p>

<h2>Instructions</h2>

<p>Use your mouse to aim in the rifle and press the</p>

<kbd>Left Mouse Button</kbd>

<p>to shoot at the cans. In terms of basic movement:</p>

<kbd>W</kbd>

<kbd>A</kbd>

<kbd>S</kbd>

<kbd>D</kbd>

<p>keys on your keyboard to move forward, left, backward and right respectively. Finally, pressing the</p>

<kbd>Space</kbd>

<p>key will make your avatar jump.</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<code>$ npm i -g decentraland</code>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$  dcl start</code>

<h2>Acknowledgements</h2>

<p>The following files were taken from</p>

<p>:</p>

<em>can01.mp3</em>

<li>to</li>

<em>can03.mp3</em>

<li>are modified from</li>

<em>shotSilencer.mp3</em>

<li>modified from</li>

<em>shotTin.mp3</em>

<li>modified from</li>

<em>shotWood.mp3</em>

<li>modified from</li>

<h2>About</h2>

<p>A tin-can-alley scene built using cannon.js physics engine.</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>3</strong>

<h3>Forks</h3>

<strong>2</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/atari-arcade-cabinets

# URL: https://github.com/decentraland-scenes/atari-arcade-cabinets

<title>GitHub - decentraland-scenes/atari-arcade-cabinets: Arcade cabinets containing variations of the classic Breakout game.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Arcade cabinets containing variations of the classic Breakout game.</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/atari-arcade-cabinets</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>10</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Atari Arcade Cabinets</h1>

<em>demo of atari-arcade-cabinets scene running in preview.</em>

<h2>Description</h2>

<p>Arcade cabinets containing variations of the classic Breakout game developed and published by Atari, Inc. where the player takes control of a paddle with the aim of breaking down a wall of bricks by ricocheting a ball against them. To view the scene, please visit</p>

<p>.</p>

<h2>Instructions</h2>

<p>Use your mouse to look around and</p>

<kbd>W</kbd>

<kbd>A</kbd>

<kbd>S</kbd>

<kbd>D</kbd>

<p>keys on your keyboard to move forward, left, backward and right respectively. Walk right up to one of the arcade cabinets to start playing -</p>

<kbd>Left Mouse Button</kbd>

<p>to serve the ball,</p>

<kbd>E</kbd>

<p>and</p>

<kbd>F</kbd>

<p>to move the paddle left and right.</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<code>$ npm i -g decentraland</code>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$  dcl start</code>

<h2>About</h2>

<p>Arcade cabinets containing variations of the classic Breakout game.</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>4</strong>

<h3>Watchers</h3>

<strong>3</strong>

<h3>Forks</h3>

<strong>3</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/coingecko-price-tracker

# URL: https://github.com/decentraland-scenes/coingecko-price-tracker

<title>GitHub - decentraland-scenes/coingecko-price-tracker: Using CoinGecko's API to display the prices of Bitcoin, Ethereum and Mana.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Using CoinGecko's API to display the prices of Bitcoin, Ethereum and Mana.</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/coingecko-price-tracker</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>1</strong>

<h2>Files</h2>

<button>View code</button>

<h1>CoinGecko Price Tracker</h1>

<em>screenshot of coingecko-price-tracker scene running in preview.</em>

<h2>Description</h2>

<p>Using CoinGecko's API to display the prices of Bitcoin, Ethereum and Mana. To view the scene, please visit</p>

<p>.</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<code>$ npm i -g decentraland</code>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$  dcl start</code>

<h2>About</h2>

<p>Using CoinGecko's API to display the prices of Bitcoin, Ethereum and Mana.</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>3</strong>

<h3>Forks</h3>

<strong>1</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/translocator

# URL: https://github.com/decentraland-scenes/translocator

<title>GitHub - decentraland-scenes/translocator: Example of how to create a projectile with physics and combining that with the new spawn feature to create a translocator disc, which allows a player to teleport to wherever the disc is located.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Example of how to create a projectile with physics and combining that with the new spawn feature to create a translocator disc, which allows a player to teleport to wherever the disc is located.</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/translocator</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>7</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Translocator</h1>

<em>demo of translocator scene running in preview.</em>

<h2>Description</h2>

<p>Example of how to create a projectile with physics and combining that with the new spawn feature to create a translocator disc, which allows a player to teleport to wherever the disc is located. To view the scene, please visit</p>

<p>.</p>

<h2>Instructions</h2>

<p>Press the</p>

<kbd>Left Mouse Button</kbd>

<p>to fire the translocator disc and press again to recall. Press the</p>

<kbd>E</kbd>

<p>key to teleport to the location of the disc. Use your mouse to look around and</p>

<kbd>W</kbd>

<kbd>A</kbd>

<kbd>S</kbd>

<kbd>D</kbd>

<p>keys on your keyboard to move forward, left, backward and right respectively.</p>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<code>$ npm i -g decentraland</code>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$  dcl start</code>

<h2>Acknowledgements</h2>

<p>Sounds are taken from</p>

<h2>About</h2>

<p>Example of how to create a projectile with physics and combining that with the new spawn feature to create a translocator disc, which allows a player to teleport to wherever the disc is located.</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/gamerDistrictPartyArea

# URL: https://github.com/decentraland-scenes/gamerDistrictPartyArea

<title>GitHub - decentraland-scenes/gamerDistrictPartyArea: A simple party area with music streaming and video projections</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A simple party area with music streaming and video projections</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/gamerDistrictPartyArea</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>3</strong>

<h2>Files</h2>

<button>View code</button>

<h2>About</h2>

<p>A simple party area with music streaming and video projections</p>

<h3>License</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>3</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/cemetery2020

# URL: https://github.com/decentraland-scenes/cemetery2020

<title>GitHub - decentraland-scenes/cemetery2020: Scene used in Halloween events for day 1 and 2</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Scene used in Halloween events for day 1 and 2</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/cemetery2020</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>2</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>1</strong>

<h2>Files</h2>

<button>View code</button>

<h2>About</h2>

<p>Scene used in Halloween events for day 1 and 2</p>

<h3>License</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>1</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/temple-trouble

# URL: https://github.com/decentraland-scenes/temple-trouble

<title>GitHub - decentraland-scenes/temple-trouble</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/temple-trouble</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>1</strong>

<h2>Files</h2>

<button>View code</button>

<h2>About</h2>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/pumpkin-problem

# URL: https://github.com/decentraland-scenes/pumpkin-problem

<title>GitHub - decentraland-scenes/pumpkin-problem</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/pumpkin-problem</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>1</strong>

<h2>Files</h2>

<button>View code</button>

<h2>About</h2>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/splat-attack

# URL: https://github.com/decentraland-scenes/splat-attack

<title>GitHub - decentraland-scenes/splat-attack: Cover as much of the ground as you can with paint.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Cover as much of the ground as you can with paint.</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/splat-attack</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>11</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Splat Attack</h1>

<em>demo of splat-attack scene running in preview.</em>

<h2>Description</h2>

<p>The objective is to cover as much of the ground as you can with paint. To view the scene, please visit</p>

<p>.</p>

<h2>Instructions</h2>

<li>Use your mouse to look around and</li>

<kbd>W</kbd>

<kbd>A</kbd>

<kbd>S</kbd>

<kbd>D</kbd>

<li>keys on your keyboard to move forward, left, backward and right respectively.</li>

<li>To jump, press the</li>

<kbd>Space</kbd>

<li>key.</li>

<li>To fire paint onto the ground, use the</li>

<kbd>Left Mouse Button</kbd>

<li>.</li>

<li>To calculate the approximate area covered by the paint, press the</li>

<kbd>E</kbd>

<li>key.</li>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<code>$ npm i -g decentraland</code>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$  dcl start</code>

<h2>Acknowledgements</h2>

<p>Adapted from the grid sampling solution version 4 to the total circles area problem found</p>

<p>.</p>

<p>The following files were taken from</p>

<p>:</p>

<em>splat.mp3</em>

<li>modified from</li>

<h2>About</h2>

<p>Cover as much of the ground as you can with paint.</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/cannon-car-example-scene

# URL: https://github.com/decentraland-scenes/cannon-car-example-scene

<title>GitHub - decentraland-scenes/cannon-car-example-scene</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/cannon-car-example-scene</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>6</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Cannon Car Example Scene</h1>

<em>demo of cannon-car-example-scene running in preview.</em>

<h2>Description</h2>

<p>Using raycast vehicle from the</p>

<p>physics engine. You can find the original code that this was based on</p>

<p>.</p>

<h2>Running the scene</h2>

<p>After you clone the project, run the following:</p>

<code>$ npm i -g decentraland</code>

<p>Followed by:</p>

<code>$ dcl start</code>

<li>Left Mouse Button to accelerate</li>

<li>Press E Key to turn left</li>

<li>Press F Key to turn right</li>

<li>Press E and F Keys together to brake</li>

<h2>About</h2>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>7</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/discordWebsocket

# URL: https://github.com/decentraland-scenes/discordWebsocket

<title>GitHub - decentraland-scenes/discordWebsocket</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/discordWebsocket</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>5</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Discord chat to Decentraland</h1>

<p>This scene shows you:</p>

<li>How to build a WebSockets server to communicate with a scene</li>

<li>How to connect a Decentraland scene to a WebSockets server</li>

<li>How to link the server to the Discord API, where the Decentraland community has its discussions</li>

<li>How to display text in a scene</li>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Launch the server</strong>

<p>Navigate to the</p>

<code>/server</code>

<p>directory and run</p>

<pre>npm run start</pre>

<p>The server will be launched locally and will start listening for requests.</p>

<strong>Previewing the scene</strong>

<p>On a separate command line window, avigate to the</p>

<code>/scene</code>

<p>directory, then run:</p>

<pre>dcl start</pre>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<p>If something doesnât work, please</p>

<p>.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>2</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>1</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/discord-chat-to-decentraland

# Change to URL: https://github.com/decentraland-scenes/box2d-ball-example-scene

# URL: https://github.com/decentraland-scenes/box2d-ball-example-scene

<title>GitHub - decentraland-scenes/box2d-ball-example-scene: Using box2d to create a bouncing ball</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Using box2d to create a bouncing ball</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/box2d-ball-example-scene</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>5</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Box2D Ball Example Scene</h1>

<em>demo of box2d-ball-example-scene running in preview.</em>

<h2>Description</h2>

<p>Simulating a bouncing ball using the</p>

<p>physics engine.</p>

<h2>Running the scene</h2>

<p>After you clone the project, run the following:</p>

<code>$ npm i -g decentraland</code>

<p>Followed by:</p>

<code>$ dcl start</code>

<h2>About</h2>

<p>Using box2d to create a bouncing ball</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>0</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/nft-wall-example-scene

# URL: https://github.com/decentraland-scenes/nft-wall-example-scene

<title>GitHub - decentraland-scenes/nft-wall-example-scene: Displaying NFTs and information about them using a JSON file.</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>Displaying NFTs and information about them using a JSON file.</p>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/nft-wall-example-scene</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>5</strong>

<h2>Files</h2>

<button>View code</button>

<h1>NFT Wall Example Scene</h1>

<p>Displaying NFTs and information about them using a JSON file. The NFTs also swap out after several seconds.</p>

<em>demo of nft-wall-example-scene running in preview.</em>

<p>This scene shows you:</p>

<li>How to display NFTs in picture frames</li>

<li>How to lay out the picture frames based on data from a JSON file</li>

<li>How to open a custom UI</li>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$:  dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<strong>Scene Usage</strong>

<p>Click on the NFT art to open a UI with additional info.</p>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<p>If something doesnât work, please</p>

<p>.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>Displaying NFTs and information about them using a JSON file.</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>Stars</h3>

<strong>12</strong>

<h3>Watchers</h3>

<strong>2</strong>

<h3>Forks</h3>

<strong>5</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/the-munastery

# URL: https://github.com/decentraland-scenes/the-munastery

<title>GitHub - decentraland-scenes/the-munastery: A static scene that includes animations that are built-into the 3D models</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A static scene that includes animations that are built-into the 3D models</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/the-munastery</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>1</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>17</strong>

<h2>Files</h2>

<button>View code</button>

<h1>Muna Temple</h1>

<p>A simple static scene that just displays 3D models. The 3D models include animations to move the butterflies, flames, etc.</p>

<p>This scene shows you:</p>

<li>How to add 3D models to a scene</li>

<li>How to add multiple parcels to a scene</li>

<h2>Try it out</h2>

<strong>Install the CLI</strong>

<p>Download and install the Decentraland CLI by running the following command:</p>

<pre>npm i -g decentraland</pre>

<strong>Previewing the scene</strong>

<p>Download this example and navigate to its directory, then run:</p>

<code>$:  dcl start</code>

<p>Any dependencies are installed and then the CLI opens the scene in a new browser tab.</p>

<p>Learn more about how to build your own scenes in our</p>

<p>site.</p>

<p>If something doesnât work, please</p>

<p>.</p>

<h2>Copyright info</h2>

<p>This scene is protected with a standard Apache 2 licence. See the terms and conditions in the</p>

<p>file.</p>

<h2>About</h2>

<p>A static scene that includes animations that are built-into the 3D models</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>6</strong>

<h3>Watchers</h3>

<strong>4</strong>

<h3>Forks</h3>

<strong>0</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/dcl-escape-room-tutorial

# URL: https://github.com/decentraland-scenes/dcl-escape-room-tutorial

<title>GitHub - decentraland-scenes/dcl-escape-room-tutorial: A Decentraland tutorial - learn how to make a game!</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<p>A Decentraland tutorial - learn how to make a game!</p>

<h3>License</h3>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/dcl-escape-room-tutorial</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>2</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>152</strong>

<h2>Files</h2>

<button>View code</button>

<h1>DCL-Escape-Room-Tutorial</h1>

<p>A Decentraland tutorial - learn how to make a game!</p>

<p>Check out the</p>

<p>!</p>

<h2>About</h2>

<p>A Decentraland tutorial - learn how to make a game!</p>

<h3>Topics</h3>

<h3>Resources</h3>

<h3>License</h3>

<h3>Stars</h3>

<strong>4</strong>

<h3>Watchers</h3>

<strong>1</strong>

<h3>Forks</h3>

<strong>25</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>

<button>Do not share my personal information</button>

# Change to URL: https://github.com/decentraland-scenes/Escape-Room

# URL: https://github.com/decentraland-scenes/Escape-Room

<title>GitHub - decentraland-scenes/Escape-Room</title>

<button>Product</button>

<button>Solutions</button>

<button>Open Source</button>

<h1>Search code, repositories, users, issues, pull requests...</h1>

<label>Search</label>

<h1>Provide feedback</h1>

<p>We read every piece of feedback, and take your input very seriously.</p>

<label>Include my email address so I can be contacted</label>

<button>Cancel</button>

<button>Submit feedback</button>

<h1>Saved searches</h1>

<h2>Use saved searches to filter your results more quickly</h2>

<label>Name</label>

<label>Query</label>

<p>To see all available qualifiers, see our</p>

<p>.</p>

<button>Cancel</button>

<button>Create saved search</button>

<tool-tip>Dismiss alert</tool-tip>

<tool-tip>Additional navigation options</tool-tip>

<h1>decentraland-scenes/Escape-Room</h1>

<button>Branches</button>

<button>Tags</button>

<h1>Name already in use</h1>

<button>Cancel</button>

<button>Create</button>

<strong>4</strong>

<strong>0</strong>

<button>HTTPS</button>

<button>GitHub CLI</button>

<p>Use Git or checkout with SVN using the web URL.</p>

<p>Work fast with our official CLI.</p>

<p>.</p>

<h4>Sign In Required</h4>

<p>Please</p>

<p>to use Codespaces.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching GitHub Desktop</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Xcode</h4>

<p>If nothing happens,</p>

<p>and try again.</p>

<h4>Launching Visual Studio Code</h4>

<p>Your codespace will open once ready.</p>

<p>There was a problem preparing your codespace, please try again.</p>

<h2>Latest commit</h2>

<h2>Git stats</h2>

<strong>60</strong>

<h2>Files</h2>

<button>View code</button>

<h2>About</h2>

<h3>Stars</h3>

<strong>7</strong>

<h3>Watchers</h3>

<strong>4</strong>

<h3>Forks</h3>

<strong>7</strong>

<h2>Languages</h2>

<h2>Footer</h2>

<h3>Footer navigation</h3>

<button>Manage cookies</button>